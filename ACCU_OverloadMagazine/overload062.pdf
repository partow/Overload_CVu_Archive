%PDF-1.2 %‚„œ”
 12 0 obj<</Length 13 0 R>>stream
BT558.6 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (3) Tj-221.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-293.4 -52.8  TD /F1 18  Tf-0.0008  Tc 0  Tw (contents) TjETq 29.4 785.4 m 29.4 739.2 l 372 739.2 l 372 785.4 l 30 784.8 m 30 739.8 l 371.4 739.8 l 371.4 784.8 l h W* n 29.4 739.2 342.6 46.2 re fQ 0.9529 0.9529 0.9529 rg 414.6 57 152.4 727.8 re fBT419.4 757.8  TD0 0 0 rg /F1 16.2  Tf-0.2269  Tc 0.2233  Tw (credits & contacts) Tj-3 -47.4  TD /F0 7.8  Tf0.1286  Tc -0.0146  Tw (Overload Editor:) Tj6 -12.6  TD 0.1244  Tc -0.0104  Tw (Alan Griffiths) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (overload@accu.org) TjT* (alan@octopull.demon.co.uk) Tj-6 -28.8  TD /F0 7.8  Tf0.1409  Tc -0.0269  Tw (Contributing Editor:) Tj6 -12.6  TD 0.1204  Tc -0.0064  Tw (Mark Radford) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (mark@twonine.co.uk) Tj-6 -38.4  TD /F0 7.8  Tf0.132  Tc -0.018  Tw (Readers: ) Tj6 -22.2  TD 0.1761  Tc -0.0621  Tw (Phil Bass) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (phil@stoneymanor.demon.co.uk) Tj0 -19.2  TD /F0 7.8  Tf0.126  Tc -0.012  Tw (Thaddaeus Frogley) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (t.frogley@ntlworld.com) Tj0 -19.2  TD /F0 7.8  Tf0.1192  Tc -0.0052  Tw (Richard Blundell) Tj0 -9.6  TD /F2 7.8  Tf-0.0735  Tc 0  Tw (richard.blundell@metapraxis.com) Tj-6 -48  TD /F0 7.8  Tf0.1291  Tc (Advertising:) Tj6 -12  TD 0.1165  Tc -0.0025  Tw (Chris Lowe) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (ads@accu.org) Tj-6 -58.8  TD /F1 9  Tf-0.0019  Tc (Overload) Tj42 0  TD /F3 9  Tf-0.0704  Tc 0.2684  Tw (is a publication of the) Tj-42 -10.8  TD 0.058  Tc -0.2457  Tw (ACCU.  For details of the ACCU and) Tj0 -10.8  TD 0.088  Tc -0.79  Tw (other ACCU) Tj51 0  TD 0.0312  Tc -0.1332  Tw (publications and) Tj-51 -10.8  TD -0.063  Tc 0.161  Tw (activities, see the ACCU) Tj99 0  TD -0.0015  Tc 0  Tw (website.) Tj-99 -42.6  TD /F0 7.8  Tf0.1469  Tc -0.0329  Tw (ACCU Website:) Tj10.2 -11.4  TD /F2 9  Tf0  Tc 0  Tw (http://www.accu.org/) Tj-10.2 -38.4  TD /F0 7.8  Tf0.1704  Tc -0.0564  Tw (Information and Membership:) Tj0 -15  TD /F4 9  Tf0.0246  Tc 0.0054  Tw (Join on the website or contact) Tj10.2 -19.2  TD /F0 7.8  Tf0.1018  Tc 0.0122  Tw (David Hodge) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (membership@accu.org) Tj-10.2 -25.2  TD /F0 7.8  Tf0.1411  Tc -0.0271  Tw (Publications Officer:) Tj10.2 -12  TD 0.0987  Tc 0.0153  Tw (John Merrells) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (publications@accu.org) Tj-10.2 -25.2  TD /F0 7.8  Tf0.3399  Tc (ACCU) Tj31.2 0  TD 0.1538  Tc (Chair:) Tj-21 -12  TD 0.1346  Tc -0.0206  Tw (Ewan Milne) Tj0 -9.6  TD /F2 7.8  Tf0.12  Tc 0  Tw (chair@accu.org) TjETq 414 785.4 m 414 56.4 l 567.6 56.4 l 567.6 785.4 l 414.6 784.8 m 414.6 57 l 567 57 l 567 784.8 l h W* n 414 56.4 153.6 729 re fQ BT29.4 702.6  TD/F0 12  Tf0  Tc -0.0406  Tw (Letters to the Editor\(s\)) Tj331.8 0  TD -0.192  Tc 0  Tw (6) Tj-331.8 -30  TD -0.1092  Tc 0.4692  Tw (A Template Programmer\222s Struggles) Tj39.6 -18  TD -0.0053  Tc 0  Tw (Revisited) Tj141.6 0  TD -0.0333  Tc 0.3933  Tw (Chris Main) Tj151.8 0  TD -0.108  Tc 0  Tw (7) Tj-333 -30  TD 0.0156  Tc -0.0556  Tw (Handling Exceptions in ) Tj169.8 0  TD 0.2 0.2 0.2 rg /F5 13.8  Tf0.12  Tc 0  Tw (finally) Tj3 -18  TD 0 0 0 rg /F0 12  Tf-0.0673  Tc 0.4273  Tw (Tony Barrett-Powell) Tj153.6 0  TD -0.132  Tc 0  Tw (10) Tj-326.4 -30  TD -0.054  Tc (ACCU) Tj46.2 0  TD -0.016  Tc 0.076  Tw (Mentored Developers XML) Tj199.2 0  TD 0.0531  Tc 0  Tw (Project) Tj-143.4 -18  TD 0.016  Tc -0.106  Tw (Paul Grenyer and Jez Higgins) Tj224.4 0  TD -0.132  Tc 0  Tw (13) Tj-326.4 -30  TD -0.017  Tc 0.137  Tw (The Curious Case of the Compile-Time) Tj39.6 -18  TD 0.069  Tc 0  Tw (Function) Tj141.6 0  TD -0.081  Tc 0.441  Tw (Phil Bass) Tj144 0  TD -0.132  Tc 0  Tw (19) Tj-325.2 -30  TD -0.028  Tc (C++) Tj29.4 0  TD -0.0035  Tc -0.0865  Tw (Interface Classes - An Introduction) Tj151.8 -18  TD 0.0175  Tc 0.3425  Tw (Mark Radford) Tj144 0  TD 0.468  Tc 0  Tw (21) Tj-325.2 -30  TD -0.0011  Tc -0.2389  Tw (From Mechanism to Method:) Tj39.6 -18  TD 0.0349  Tc -0.1249  Tw (The Safe Stacking of Cats) Tj141.6 -18  TD -0.001  Tc -0.239  Tw (Kevlin Henney) Tj141 0  TD -0.192  Tc 0  Tw (24) TjETendstreamendobj13 0 obj4348endobj4 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font 20 0 R/ProcSet 2 0 R>>/Contents 12 0 R>>endobj20 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F3 14 0 R/F4 16 0 R/F5 18 0 R>>endobj22 0 obj<</Length 23 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (4) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj28.8 -50.4  TD /F0 30  Tf-0.0795  Tc -0.0205  Tw (Editorial: The Value of) Tj216 -30  TD -0.2073  Tc 0.2073  Tw (What You Know) TjETq 28.8 785.4 m 28.8 721.2 l 567.6 721.2 l 567.6 785.4 l 29.4 784.8 m 29.4 721.8 l 567 721.8 l 567 784.8 l h W* n 28.8 721.2 538.8 64.2 re fQ BT40.2 625.8  TD/F4 10.2  Tf-0.0752  Tc 0.1252  Tw (Thus it is not uncommon to see a developer who spent days or) Tj-11.4 -12  TD -0.0562  Tc -0.0938  Tw (weeks learning how to manage a technology expecting another to) Tj0 -12  TD -0.1056  Tc -0.3444  Tw (\223pick it up\224 in a matter of minutes. Naturally, as developers are not) TjT* -0.1251  Tc -0.5749  Tw (a race apart, this also happens in other areas of endeavour: I\222ve seen) TjT* -0.0981  Tc -0.4519  Tw (chess players run through the moves and rules in less than a minute) TjT* -0.017  Tc 0.467  Tw (and expect the explanation to be understood. Or those versed in) TjT* -0.1422  Tc -0.4878  Tw (cooking giving explanations of a recipe that would only make sense) TjT* -0.0961  Tc 0.0211  Tw (to someone that already knew most of the answer.) Tj11.4 -12  TD -0.0958  Tc 0.2458  Tw (On the other end of such discussions the slightest confusion or) Tj-11.4 -12  TD -0.2972  Tc -0.3195  Tw (ambiguity becomes a major setback and an obstacle to understanding.) Tj0 -12  TD -0.2829  Tc 0.2662  Tw (However, to my bemusement, the enigmatic mutterings are not seen) TjT* -0.3012  Tc 0.1512  Tw (as a failure of explanation but as a failure of understanding.) Tj11.4 -12  TD -0.2093  Tc -0.4861  Tw (This is the context in which Overload operates: we all have pieces) Tj-11.4 -12  TD -0.1952  Tc 0.6052  Tw (of knowledge that may be of use to others \226 but we fail to see the) Tj0 -12  TD -0.1574  Tc 0.4574  Tw (value in them and often lack the expertise to explain them.  There) TjT* -0.0422  Tc 0.4422  Tw (can be very few of you reading Overload that do not have some) TjT* -0.2557  Tc -0.4397  Tw (knowledge or expertise to share, and the \223readers\224 are here to provide) TjT* 0.1695  Tc 2.0138  Tw (assistance in conveying such expertise in a manner that is) TjT* -0.2158  Tc -0.4251  Tw (comprehensible. One only has to note the number of authors that feel) TjT* -0.2378  Tc -0.4522  Tw (the need to acknowledge their assistance to realise that this assistance) TjT* -0.1805  Tc 0.0305  Tw (is both necessary and valued. But most importantly it is available.) Tj11.4 -12  TD 0.2443  Tc 1.1875  Tw (Why am I telling you all this? It is because Overload is) Tj-11.4 -12  TD -0.0848  Tc -0.1852  Tw (dependent upon the willingness of ACCU members to write for it.) Tj0 -12  TD -0.1233  Tc -0.5601  Tw (And, despite the increasing number of ACCU members the number) TjT* -0.1495  Tc -0.4505  Tw (writing for Overload is not healthy. We get by but, on this occasion,) TjT* 0.1282  Tc 0.3218  Tw (it was only achieved by the last minute efforts of a number of) TjT* 0.0485  Tc 0.3415  Tw (contributors who responded to a plea from the editor. To avoid) TjT* -0.1218  Tc -0.41  Tw (placing that pressure on them again, I\222m making a plea now: please) TjT* -0.0903  Tc 0.0603  Tw (make a contribution to Overload. ) Tj135 0  TD /F6 10.2  Tf-0.0893  Tc -0.0607  Tw (This means you!) Tj-123.6 -12  TD /F4 10.2  Tf0.1985  Tc 0.2515  Tw (Think back over the last week: how many things have you) Tj-11.4 -12  TD 0.2365  Tc 1.3468  Tw (explained to other developers? How many of these do you) Tj0 -12  TD -0.0664  Tc 0.5164  Tw (understand well enough to think, \223no-one would be interested in) TjT* -0.0821  Tc 0.2321  Tw (that\224? Well, those are the things that you are expert enough on to) TjT* -0.0835  Tc -0.4819  Tw (write about. Try it \226 most of the authors find that the feedback they) TjT* -0.0734  Tc 0.0734  Tw (get makes the effort worthwhile.) Tj11.4 -12  TD 0.0622  Tc 0.3878  Tw (And speaking of feedback: I\222d like to thank all of those that) Tj-11.4 -12  TD -0.069  Tc 0.039  Tw (helped with this issue, especially those that contributed to the last) Tj0 -12  TD -0.0754  Tc 0.3869  Tw (minute effort to fill the pages. I know that this time of year there) TjT* -0.0638  Tc 0.0338  Tw (are other demands on your time.) Tj0 -18  TD /F0 12  Tf-0.0307  Tc 0.3907  Tw (Three Perplexing Properties) TjT* /F4 10.2  Tf-0.1272  Tc 0.3372  Tw (There is rhetorical value in the number three \(\223The Three Bears\224,) Tj0 -12  TD 0.3201  Tc 0.7966  Tw (\223The Three Billy Goats Gruff\224, or any number of political) TjT* -0.1354  Tc 0.2854  Tw (speeches\). And it is also said that accidents happen in threes.  I\222m) TjT* 0.1666  Tc 0.9501  Tw (sure that the following three incidents don\222t quite qualify as) TjT* -0.0252  Tc 1.1952  Tw (accidents \226 there was a certain amount of intent involved. But) TjT* -0.1013  Tc 0.0113  Tw (they certainly represent missteps, did come as a triplet, and reflect) TjT* -0.1214  Tc 0.0314  Tw (some of the difficulties that occur when working in our field.) Tj288 564  TD -0.1131  Tc -0.4569  Tw (There is often a need to store arbitrary elements of configuration) Tj-11.4 -12  TD -0.0899  Tc -0.5744  Tw (information and developers in many programming languages have) Tj0 -12  TD -0.0824  Tc -0.5476  Tw (come up with the same approach: store an associative collection of) TjT* -0.1137  Tc 0.0971  Tw (strings mapping keys to values. The keys provide convenient tags) TjT* 0.1153  Tc 0.3347  Tw (for values to be retrieved without the collection needing to be) TjT* -0.0872  Tc 0.0039  Tw (written with any knowledge of the information stored. And, since) TjT* -0.0888  Tc -0.0612  Tw (most languages allow values of various types to be represented as) TjT* 0.2345  Tc 0.4405  Tw (string values this affords the necessary degree of flexibility.) TjT* -0.0861  Tc -0.2485  Tw (Sometimes other types of value are used as a key \(see \223The tale of) TjT* -0.0276  Tc 0.4776  Tw (a struggling template programmer\224 [Overload 61] or its sequels) TjT* 0.0393  Tc 0.4107  Tw ([Overload 61, 62]\), sometimes it is possible to store the values) TjT* -0.0521  Tc -0.0979  Tw (without converting their type.) Tj11.4 -12  TD 0.0684  Tc -0.2184  Tw (In Java I\222ve use the ) Tj82.8 0  TD /F2 10.2  Tf-0.06  Tc 0  Tw (Properties) Tj63.6 0  TD /F4 10.2  Tf0.0599  Tc -0.0599  Tw (class for this purpose and) Tj-157.8 -12  TD 0.0253  Tc -0.6368  Tw (wrote a translation of this design in C++ for a recent project.  The) Tj0 -12  TD -0.0165  Tc -0.1335  Tw (translation wasn\222t exact \226 there are a number of design decisions) TjT* -0.0734  Tc -0.4039  Tw (in the Java libraries that I find questionable. For example, the Java) TjT* 0.2241  Tc 0.2259  Tw (library treats ) Tj58.2 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (Properties) Tj66.6 0  TD /F4 10.2  Tf0.2079  Tc 0.2421  Tw (as a specialisation of ) Tj93 0  TD /F2 10.2  Tf0.3086  Tc 0  Tw (HashMap) Tj-217.8 -12  TD /F4 10.2  Tf0.0315  Tc -0.3529  Tw (whereas my implementation used delegation to a ) Tj199.8 0  TD /F2 10.2  Tf0.105  Tc 0  Tw (std::map) Tj49.2 0  TD /F4 10.2  Tf0.1178  Tc -0.2678  Tw (. In) Tj-249 -12  TD 0.2901  Tc 0.3314  Tw (a strongly typed language why allow a ) Tj173.4 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (Properties) Tj67.8 0  TD /F4 10.2  Tf0.2342  Tc (class) Tj-241.2 -12  TD 0.0175  Tc 0.0325  Tw (\(which specifically contains ) Tj116.4 0  TD /F2 10.2  Tf-0.02  Tc 0  Tw (String) Tj37.2 0  TD /F4 10.2  Tf-0.04  Tc -0.11  Tw (s for both keys and values\)) Tj-153.6 -12  TD 0.0754  Tc 0.0146  Tw (to be treated as a ) Tj72 0  TD /F2 10.2  Tf0.1371  Tc 0  Tw (HashMap) Tj45.6 0  TD /F4 10.2  Tf0.0653  Tc -0.0653  Tw (\(that can contain arbitrary objects\).) Tj-117.6 -12  TD -0.0334  Tc -0.3894  Tw (Anyway, I did things my way and refused to expose the container) Tj0 -12  TD 0.077  Tc 0  Tw (interface.) Tj11.4 -12  TD -0.1021  Tc 0.0378  Tw (The implementation language forced another difference \226 C++) Tj-11.4 -12  TD -0.0608  Tc 0.1108  Tw (doesn\222t allow null references, so I had to decide what to do when) Tj0 -12  TD -0.1302  Tc -0.4016  Tw (an invalid key was supplied. My decision caused a lot of discussion) TjT* -0.1069  Tc 0.4478  Tw (during the code review \(yes, this client has code reviews; no, the) TjT* -0.1028  Tc -0.5138  Tw (moderators don\222t stop digression into solutions\). What did I decide) TjT* -0.0906  Tc -0.1517  Tw (to do? Well, as I intend to cover the design options later, I\222ll avoid) TjT* -0.1011  Tc 0.1011  Tw (that discussion at this point.) Tj0 -18  TD /F0 12  Tf0.0492  Tc -0.2892  Tw (First Motif) TjT* /F4 10.2  Tf-0.1181  Tc 0.7681  Tw (The code went into production and I didn\222t look at it for several) Tj0 -12  TD -0.0555  Tc 0.0901  Tw (months.  I had no reason to until I happened to revisit some code) TjT* -0.0711  Tc 0.0711  Tw (that had used it \226 when I noticed that the classname had changed.) TjT* 0.1793  Tc 1.1107  Tw (Curiosity aroused I went to have a look. During the project) TjT* 0.3221  Tc 0.8779  Tw (lifecycle the original properties class had been renamed to) TjT* /F2 10.2  Tf-0.12  Tc 0  Tw (foo_properties) Tj87.6 0  TD /F4 10.2  Tf-0.0813  Tc 1.1313  Tw (and \223improved\224 by giving it a constructor) Tj-87.6 -12  TD 0.3301  Tc 0.9866  Tw (that parsed a domain specific string format and a member) Tj0 -12  TD -0.0239  Tc 1.1339  Tw (function to produce such a string. This format \(similar to field) TjT* -0.1019  Tc 1.4186  Tw (value pairs in a URL\) contains embedded key/value pairs. The) TjT* -0.0813  Tc 0.0813  Tw (developer in question needed this functionality and was evidently) TjT* 0.664  Tc 1.1194  Tw (convinced that this was the right class to support this) TjT* -0.0958  Tc 1.1458  Tw (functionality. \(After all there was no other class to which these) TjT* 0.1244  Tc 0.9923  Tw (functions belonged!\) There is even prior art: the Java library) TjT* /F2 10.2  Tf-0.12  Tc 0  Tw (Properties) Tj62.4 0  TD /F4 10.2  Tf-0.0775  Tc 0.1675  Tw (class can serialise and deserialise itself.) Tj-51 -12  TD -0.1562  Tc -0.2605  Tw (Personally I didn\222t \(and don\222t\) see why these functions belonged) Tj-11.4 -12  TD 0.0209  Tc 0.4291  Tw (as part of this class. It already did one thing well, and adding a) Tj-276.6 601.2  TD /F3 69  Tf-0.282  Tc 0  Tw (O) TjETq 82.2 699.6 513.6 15.6 re h W n BT82.2 702.6  TD/F3 13.8  Tf0.0992  Tc 0.2644  Tw (ne of the things that constantly surprises me is the differences in value placed) TjETQ q 82.2 679.8 513.6 15.6 re h W n BT82.2 682.8  TD/F3 13.8  Tf0.0999  Tc -0.1363  Tw (upon knowledge by those that have it and those that lack it. It often seems that) TjETQ q 82.2 660 513.6 15.6 re h W n BT82.2 663  TD/F3 13.8  Tf0.1083  Tc 0.763  Tw (anything that one knows is considered trivial or easy \226 and that anything one) TjETQ BT28.8 642.6  TD/F3 13.8  Tf0.0999  Tc -0.0363  Tw (doesn\222t know is correspondingly complicated or hard.) TjETendstreamendobj23 0 obj11181endobj21 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F3 14 0 R /F4 16 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 22 0 R>>endobj27 0 obj<</Length 28 0 R>>stream
BT558.6 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (5) Tj-221.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-307.8 -40.8  TD /F4 10.2  Tf-0.0869  Tc 0.5369  Tw (second role makes it less, not more usable. The class didn\222t need) Tj0 -12  TD 0.1099  Tc 0.3401  Tw (these functions to perform its role: they could be implemented) TjT* -0.0666  Tc 0.4566  Tw (efficiently via its public interface. And, if cohesion isn\222t a strong) TjT* 0.2399  Tc 0.6387  Tw (enough argument then consider the coupling introduced: the) TjT* /F2 10.2  Tf-0.12  Tc 0  Tw (properties) Tj62.4 0  TD /F4 10.2  Tf-0.0766  Tc -0.0734  Tw (class was now attached to this ) Tj122.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (foo) Tj21 0  TD /F4 10.2  Tf-0.1061  Tc -0.0439  Tw (string format.) Tj-194.4 -12  TD -0.0991  Tc -0.2309  Tw (There are several points to be considered here: when the change) Tj-11.4 -12  TD -0.0574  Tc -0.3592  Tw (was made there was only one client of the ) Tj168 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (properties) Tj62.4 0  TD /F4 10.2  Tf-0.0308  Tc -0.1192  Tw (class, so) Tj-230.4 -12  TD -0.0342  Tc -0.4389  Tw (it was simple to make the change. It is also a good pocket example) Tj0 -12  TD -0.0923  Tc -0.4577  Tw (of how adding functionality to a component reduces its reusability.) TjT* 0.0533  Tc 0.3967  Tw (For many of our colleagues this is counter-intuitive and a good) TjT* -0.0767  Tc 0.0017  Tw (supply of examples is needed to convince them otherwise.) Tj11.4 -12  TD -0.186  Tc -0.314  Tw (By the time I saw it, the code was in production \(changes manage) Tj-11.4 -12  TD -0.134  Tc -0.376  Tw (to achieve that without being reviewed\) and there was enough work) Tj0 -12  TD -0.0479  Tc 0.0779  Tw (to do without fixing things that were not manifesting problems to) TjT* -0.1215  Tc 0.1215  Tw (the user.  \(Like fixing things that didn\222t work.\)) Tj0 -18  TD /F0 12  Tf0.0164  Tc -0.2564  Tw (Second Motif) TjT* /F4 10.2  Tf-0.1029  Tc 1.1529  Tw (\223How do I return a ) Tj84 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NULL) Tj27.6 0  TD /F4 10.2  Tf-0.0522  Tc 1.1022  Tw (string?\224 came the voice from behind) Tj-111.6 -12  TD -0.0984  Tc 1.0099  Tw (me. Like most of these questions it is worth finding out a bit of) Tj0 -12  TD -0.0672  Tc 1.2808  Tw (the context: I could guess that the language was C++, but why) TjT* -0.1253  Tc 0.2753  Tw (would anyone want to return a ) Tj124.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NULL) Tj26.4 0  TD (std::string) Tj66 0  TD /F4 10.2  Tf0.2712  Tc (?) Tj-205.2 -12  TD -0.2893  Tc -0.3407  Tw (The answer to that wasn\222t illuminating: \223because that\222s what I\222d do) Tj-11.4 -12  TD -0.2842  Tc -0.3372  Tw (in C\224. My colleague knew that in C a string is represented as a ) Tj234.6 0  TD /F2 10.2  Tf-0.36  Tc 0  Tw (char*) Tj-234.6 -12  TD /F4 10.2  Tf-0.2846  Tc 0.1346  Tw (and that can be ) Tj60 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (NULL) Tj22.8 0  TD /F4 10.2  Tf-0.29  Tc 0.215  Tw (. But he also knew that a C++ ) Tj117 0  TD /F2 10.2  Tf-0.3382  Tc 0  Tw (std::string) Tj-199.8 -12  TD /F4 10.2  Tf-0.3277  Tc 0.1777  Tw (cannot be ) Tj39 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (NULL) Tj22.8 0  TD /F4 10.2  Tf-0.3183  Tc 0.1683  Tw (. Stop. Rewind. What was he trying to do?) Tj-50.4 -12  TD -0.0889  Tc 0.1889  Tw (It turns out that the problem is how to indicate a lookup failure) Tj-11.4 -12  TD -0.0991  Tc 0.4291  Tw (in an associative map of ) Tj100.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (string) Tj38.4 0  TD /F4 10.2  Tf-0.0929  Tc 0.2429  Tw (key to ) Tj28.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (string) Tj39 0  TD /F4 10.2  Tf-0.0878  Tc 0.2378  Tw (value. And, as) Tj-206.4 -12  TD 0.2447  Tc 0.3853  Tw (with the way my colleague would have implemented it in C,) Tj0 -12  TD 0.0452  Tc 0.4048  Tw (returning ) Tj40.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NULL) Tj27.6 0  TD /F4 10.2  Tf0.0119  Tc 0.4381  Tw (is exactly the choice made in the Java library\222s) Tj-68.4 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (Properties) Tj62.4 0  TD /F4 10.2  Tf-0.1774  Tc (class:) Tj-62.4 -16.2  TD /F2 10.2  Tf-0.12  Tc (public String getProperty\(String key\)) Tj11.4 -12  TD /F7 10.2  Tf-0.0868  Tc 0.257  Tw (Searches for the property with the specified key in this property list.) Tj0 -12  TD -0.0931  Tc -0.4692  Tw (If the key is not found in this property list, the default property list, and) TjT* -0.0955  Tc -0.0125  Tw (its defaults, recursively, are then checked. The method returns null if) TjT* -0.0786  Tc 0.0306  Tw (the property is not found.) Tj-11.4 -19.8  TD /F4 10.2  Tf0.0839  Tc 0.8661  Tw (So there are precedents for returning ) Tj160.8 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (NULL) Tj24.6 0  TD /F4 10.2  Tf-0.0055  Tc 1.3555  Tw (. Also, in the C++) Tj-185.4 -12  TD -0.0925  Tc 0.8425  Tw (standard library is a similar solution in a different but analogous) Tj0 -12  TD -0.0698  Tc -0.0802  Tw (situation. From \223Associative container requirements\224 \(23.1.2/7\):) Tj0 -16.2  TD /F2 10.2  Tf-0.12  Tc 0  Tw (a.find\(k\)) Tj11.4 -12  TD /F7 10.2  Tf-0.0673  Tc 0.292  Tw (returns an iterator pointing to an element with the key equivalent to) Tj0 -12  TD -0.0977  Tc 0.0497  Tw (k , or a.end\(\) if such an element is not found.) Tj-11.4 -19.8  TD /F4 10.2  Tf-0.1137  Tc 0.4137  Tw (This may not be ) Tj69.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NULL) Tj24 0  TD /F4 10.2  Tf-0.0539  Tc 0.5039  Tw (, but it is definitely a special value \226 with) Tj-93.6 -12  TD -0.1013  Tc 0.1013  Tw (all the difficulties that this causes the client code.) Tj286.2 528  TD 0.1264  Tc 0.1736  Tw (Returning to Java the ) Tj93.6 0  TD /F2 10.2  Tf0.24  Tc 0  Tw (Properties) Tj66 0  TD /F4 10.2  Tf0.1569  Tc 0.2931  Tw (class also provides an) Tj-171 -12  TD -0.0982  Tc -0.0518  Tw (alternative solution:) Tj0 -16.2  TD /F2 10.2  Tf-0.12  Tc 0  Tw (public String getProperty\(String key,) Tj144.6 -12  TD -1.2  Tw (String defaultValue\)) Tj-133.2 -12  TD /F7 10.2  Tf-0.0568  Tc 0.0634  Tw (Searches for the property with the specified key in this property list.) Tj0 -12  TD -0.0836  Tc -0.4358  Tw (If the key is not found in this property list, the default property list, and) TjT* -0.0412  Tc 0.5266  Tw (its defaults, recursively, are then checked. The method returns the) TjT* -0.0766  Tc 0.0286  Tw (default value argument if the property is not found.) Tj-11.4 -19.8  TD /F4 10.2  Tf-0.0811  Tc 0.6644  Tw (While we are considering possible solutions there is another one) Tj0 -12  TD -0.0934  Tc 0.0434  Tw (in the C++ standard library. \(From 23.1.1/12\)) Tj11.4 -16.2  TD /F7 10.2  Tf0.0524  Tc 0.2996  Tw (The member function ) Tj85.8 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (at\(\)) Tj27.6 0  TD /F7 10.2  Tf0.0733  Tc 0.4787  Tw (provides bounds-checked access to) Tj-113.4 -12  TD 0.027  Tc 0.225  Tw (container elements. ) Tj79.8 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (at\(\)) Tj28.8 0  TD /F7 10.2  Tf0.0211  Tc -0.0691  Tw (throws ) Tj29.4 0  TD /F2 10.2  Tf0.13  Tc 0  Tw (out_of_range) Tj78 0  TD /F7 10.2  Tf0.0387  Tc -0.0867  Tw (if ) Tj8.4 0  TD /F2 10.2  Tf0.08  Tc 2.8  Tw (n >=) Tj-224.4 -12  TD -0.345  Tc 0  Tw (a.size\(\)) Tj46.2 0  TD /F7 10.2  Tf-0.048  Tc (.) Tj-57.6 -19.8  TD /F4 10.2  Tf-0.0745  Tc 0.4154  Tw (Lets recap: we have seen three possible behaviours in the face of) Tj0 -12  TD -0.1011  Tc 0.1511  Tw (a request for the value associated with an unknown key:) TjT* -0.225  Tc 0  Tw (1.) Tj11.4 0  TD -0.0712  Tc 0.0212  Tw (Return a special value to indicate failure) Tj-11.4 -12  TD -0.225  Tc 0  Tw (2.) Tj11.4 0  TD -0.1105  Tc 0.1319  Tw (Return a default value supplied by the caller) Tj-11.4 -12  TD -0.225  Tc 0  Tw (3.) Tj11.4 0  TD -0.1324  Tc 0.2824  Tw (Throwing an exception) Tj-11.4 -12  TD 0.1961  Tc 0.9739  Tw (While these may all be reasonable solutions they are not all) Tj0 -12  TD -0.0752  Tc 0.9002  Tw (appropriate to every situation. And, there are additional options:) TjT* 0.3611  Tc 0.7746  Tw (\223fallible\224 return types; stipulating the result as \223undefined) TjT* 0.0282  Tc 1.2218  Tw (behaviour\224; aborting the program; user-supplied callbacks and) TjT* -0.0793  Tc 0.3293  Tw (status flags \(of various scopes\) indicators are all possibilities \(but) TjT* -0.0766  Tc 0.2266  Tw (less commonly used\).) Tj11.4 -12  TD -0.0818  Tc 0.3136  Tw (In order to recommend a solution it is necessary to know even) Tj-11.4 -12  TD -0.0888  Tc -0.0612  Tw (more about the problem. It turns out that my questioner was in the) Tj0 -12  TD -0.0777  Tc 0.5277  Tw (process of designing a class to hold the configuration parameters) TjT* -0.1033  Tc -0.2867  Tw (for an application. Hey! That sounds familiar, maybe there is some) TjT* -0.0914  Tc 0.0271  Tw (prior art \226 even an existing implementation somewhere?) Tj11.4 -12  TD 0.2414  Tc 0.2086  Tw (But before I could look for prior art or a library to use my) Tj-11.4 -12  TD -0.155  Tc -0.3284  Tw (questioner was gone with: \223the configuration values should be there) Tj0 -12  TD -0.0917  Tc -0.0583  Tw (\226 I\222ll throw an exception. Thanks!\224) Tj0 -18  TD /F0 12  Tf-0.036  Tc -0.204  Tw (Third Motif) TjT* /F4 10.2  Tf0.5794  Tc 1.3372  Tw (When I started this editorial I had three discussions of) Tj0 -12  TD -0.0017  Tc 1.2231  Tw (implementations of \223Property\224 classes to discuss. But between) TjT* -0.1961  Tc 0.0961  Tw (then and now one of them has evaporated into the mists of memory) TjT* -0.1758  Tc 0.1458  Tw (and been dispersed by the force of ongoing commitments. I\222ll have) TjT* -0.1652  Tc 0.0152  Tw (to trust that you have your own story to tell.) Tj11.4 -12  TD -0.0982  Tc 0.2482  Tw (I fear that you will.) Tj0 -12  TD -0.2882  Tc -0.4618  Tw (I wonder: how many times has this particular wheel been invented?) Tj201.6 -12  TD /F8 10.2  Tf-0.0748  Tc -0.3692  Tw (Alan Griffiths) Tj-84.6 -12  TD /F2 9  Tf0  Tc 0  Tw (alan@octopull.demon.co.uk) TjET1 1 1 rg 29.4 56.4 538.2 109.2 re f0.902 0.902 0.902 rg 30.6 57.6 535.8 106.8 re fBT205.8 145.8  TD0 0 0 rg /F9 18  Tf-0.0916  Tc -0.0284  Tw (Copyrights and Trade marks) Tj-169.8 -12  TD /F7 9  Tf-0.0102  Tc -0.1783  Tw (Some articles and other contributions use terms that are either registered trade marks or claimed as such.  The use of such terms is not intended to support nor) Tj0 -12  TD -0.0101  Tc -0.0025  Tw (disparage any trade mark claim.  On request we will withdraw all references to a specific trademark and its owner.) Tj5.4 -12  TD -0.0106  Tc 0.0199  Tw (By default the copyright of all material published by ACCU is the exclusive property of the author. By submitting material to ACCU for publication an author is,) Tj-5.4 -12  TD -0.0012  Tc -0.0692  Tw (by default, assumed to have granted ACCU the right to publish and republish that material in any medium as they see fit. An author of an article or column \(not) Tj0 -12  TD 0.0081  Tc -0.0812  Tw (a letter or a review of software or a book\) may explicitly offer single \(first serial\) publication rights and thereby retain all other rights.) Tj7.8 -12  TD 0.0045  Tc -0.1485  Tw (Except for licences granted to 1\) Corporate Members to copy solely for internal distribution 2\) members to copy source code for use on their own computers,) Tj-7.8 -12  TD -0.0231  Tc 0.0323  Tw (no material can be copied from Overload without written permission of the copyright holder.) TjETq 29.4 165.6 m 29.4 56.4 l 567.6 56.4 l 567.6 165.6 l 30.6 164.4 m 30.6 57.6 l 566.4 57.6 l 566.4 164.4 l h W* n 29.4 56.4 538.2 109.2 re fQ 0.9529 0.9529 0.9529 rg 30 174 537 52.2 re fBT33.6 213.6  TD0 0 0 rg /F0 12  Tf-0.0369  Tc 0.3969  Tw (Copy Deadlines) Tj0 -19.8  TD /F4 10.2  Tf-0.05  Tc 0.2  Tw (All articles intended for publication in ) Tj158.4 0  TD /F6 10.2  Tf-0.1325  Tc 0.5825  Tw (Overload 63) Tj53.4 0  TD /F4 10.2  Tf-0.0798  Tc 0.4548  Tw (should be submitted to the editor by September 1) Tj200.4 3.6  TD -0.4017  Tc 0  Tw (st) Tj9.6 -3.6  TD -0.1429  Tc 0.3929  Tw (2004, and for ) Tj57 0  TD /F6 10.2  Tf-0.0125  Tc 0.4625  Tw (Overload 64) Tj-478.8 -12  TD /F4 10.2  Tf-0.0686  Tc 0.2186  Tw (by November 1) Tj62.4 3.6  TD -0.4017  Tc 0  Tw (st) Tj9 -3.6  TD -0.15  Tc (2004.) TjETq 29.4 226.8 m 29.4 173.4 l 567.6 173.4 l 567.6 226.8 l 30 226.2 m 30 174 l 567 174 l 567 226.2 l h W* n 29.4 173.4 538.2 53.4 re fQ endstreamendobj28 0 obj12559endobj26 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font 35 0 R/ProcSet 2 0 R>>/Contents 27 0 R>>endobj35 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F6 24 0 R/F7 29 0 R/F8 31 0 R/F9 33 0 R>>endobj37 0 obj<</Length 38 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (6) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj0 -76.8  TD /F4 10.2  Tf-0.0919  Tc -0.0581  Tw (Dear Editor) Tj11.4 -12  TD 0.2616  Tc 1.3884  Tw (I was reading Stefan Heinzmann\222s paper \223The Tale of a) Tj-11.4 -12  TD -0.0535  Tc 0.5035  Tw (Struggling Template Programmer\224 in June 2004 Overload, and I) Tj0 -12  TD 0.1852  Tc 0.2648  Tw (could not help thinking that a 2 page long code listing cannot) TjT* -0.0656  Tc -0.0844  Tw (possibly be a proper solution to such a simple problem!) Tj11.4 -12  TD 0.2215  Tc 0.6785  Tw (To make the following discussion clearer, this is Stefan\222s) Tj-11.4 -12  TD -0.055  Tc 0.105  Tw (declaration of the ) Tj72.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (lookup) Tj38.4 0  TD /F4 10.2  Tf-0.0258  Tc (function:) Tj-96.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (template<class EKey, class EVal, unsigned n,) Tj48.6 -12  TD (class Key, class Val>) Tj-48.6 -12  TD (EVal lookup\(const Pair<EKey, EVal>\(&tbl\)[n],) Tj64.8 -12  TD (const Key & key, const Val & def\)) Tj-79.2 -12  TD 0 0 0 rg /F4 10.2  Tf0.2823  Tc 0.9677  Tw (As it is clearly stated by Phil Bass in his solution, the real) Tj0 -12  TD -0.0709  Tc 0.6209  Tw (problem in this declaration is the fact that we do not really want) TjT* 0.6648  Tc 0.3852  Tw (the types of the ) Tj78 0  TD /F2 10.2  Tf0.88  Tc 0  Tw (key) Tj24 0  TD /F4 10.2  Tf0.6904  Tc 0.3596  Tw (and ) Tj20.4 0  TD /F2 10.2  Tf0.88  Tc 0  Tw (def) Tj24.6 0  TD /F4 10.2  Tf0.5498  Tc 0.7002  Tw (function arguments to be) Tj-147 -12  TD -0.1072  Tc 1.2239  Tw (automatically deduced by compiler. What instead we want is to) Tj0 -12  TD -0.0664  Tc 1.183  Tw (force the compiler to deduce the types of the ) Tj193.2 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (EKey) Tj28.2 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj18 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (EVal) Tj-239.4 -12  TD /F4 10.2  Tf-0.0237  Tc 1.207  Tw (template arguments by looking at the type of the ) Tj210.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (tbl) Tj18.6 0  TD /F4 10.2  Tf-0.3822  Tc 0.8322  Tw (\222s ) Tj10.2 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (Pair) Tj-239.4 -12  TD /F4 10.2  Tf-0.0281  Tc 1.1327  Tw (elements, and then use these deduced types as the types of the) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (key) Tj20.4 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj17.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (def) Tj20.4 0  TD /F4 10.2  Tf-0.0911  Tc 0.5411  Tw (function arguments.) Tj-46.8 -12  TD -0.1159  Tc 0.1159  Tw (Using pseudo code this is how it would look:) Tj3 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<class K, class V, int N>) Tj0 -12  TD (V lookup\(const Pair<K, V>\(&tbl\)[N],) Tj48.6 -12  TD (typeof\(K\) key,) Tj0 -12  TD (typeof\(V\) const & def\)) Tj-63 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0758  Tc 0.1758  Tw (Now in order to translate this pseudo code into real code the only) Tj0 -12  TD -0.062  Tc 0.412  Tw (thing we need is a way to name the types of the ) Tj198 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (Pair) Tj24 0  TD /F4 10.2  Tf-0.3822  Tc 0.8322  Tw (\222s ) Tj9.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (K) Tj9 0  TD /F4 10.2  Tf-0.1096  Tc 0.5596  Tw (and ) Tj17.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (V) Tj-258 -12  TD /F4 10.2  Tf-0.0873  Tc -0.0627  Tw (template arguments. And by far the simplest way to create a name) Tj0 -12  TD -0.0569  Tc 1.1069  Tw (for the type of a template argument is by creating a ) Tj221.4 0  TD /F2 10.2  Tf-0.0343  Tc 0  Tw (typedef) Tj-221.4 -12  TD /F4 10.2  Tf-0.1161  Tc 0.3661  Tw (within the definition of the template itself:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<class K, class V>) Tj0 -12  TD (struct Pair {) Tj10.8 -12  TD (typedef K key_type;) Tj0 -12  TD (typedef V mapped_type;) TjT* (key_type key;) TjT* (mapped_type value;) Tj-10.8 -12  TD (};) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0616  Tc 1.1661  Tw (Once this is done we can rewrite the signature of the ) Tj227.4 0  TD /F2 10.2  Tf-0.02  Tc 0  Tw (lookup) Tj-227.4 -12  TD /F4 10.2  Tf-0.0853  Tc -0.0647  Tw (function this way:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<class K, class V, int N>) Tj0 -12  TD (typename Pair<K, V>::mapped_type) Tj21.6 -12  TD (const & lookup\(const Pair<K, V>\(&tbl\)[N],) Tj37.8 -12  TD (typename Pair<K, V>::key_type key,) Tj0 -12  TD (typename Pair<K, V>::mapped_type) Tj64.8 -12  TD (const & default_value\);) Tj-138.6 -12  TD 0 0 0 rg /F4 10.2  Tf-0.074  Tc 0.524  Tw (Which solves pretty much all of Stefan\222s problems related to the) Tj0 -12  TD /F2 10.2  Tf-0.02  Tc 0  Tw (lookup) Tj40.2 0  TD /F4 10.2  Tf-0.0054  Tc 1.1304  Tw (function \(no more ugly casts, function can return the) Tj-40.2 -12  TD -0.0287  Tc -0.1213  Tw (result by reference\).) Tj11.4 -12  TD -0.0757  Tc 0.1439  Tw (I am attaching the code for the complete solution at the bottom) Tj-11.4 -12  TD -0.1201  Tc 0.2701  Tw (of this mail.) Tj11.4 -12  TD -0.0732  Tc 0.5232  Tw (In order to keep the code as simple and as clean as possible, I) Tj-11.4 -12  TD -0.1613  Tc -0.3637  Tw (have decided to provide global definitions of the ) Tj189.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (<) Tj7.8 0  TD /F4 10.2  Tf-0.3096  Tc 0.1596  Tw (and ) Tj16.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (==) Tj13.8 0  TD /F4 10.2  Tf-0.2171  Tc (operators) Tj-227.4 -12  TD 0.0404  Tc -0.1904  Tw (for the ) Tj28.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (Pair) Tj25.8 0  TD /F4 10.2  Tf-0.0701  Tc -0.3049  Tw (type instead of resorting to a custom function object.) Tj-54.6 -12  TD 0.0589  Tc 0.1911  Tw (Given that the ) Tj62.4 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (Pair) Tj27.6 0  TD /F4 10.2  Tf0.0643  Tc 0.3857  Tw (type is a very simple type whose usage is) Tj-90 -12  TD -0.0687  Tc -0.0268  Tw (entirely under our control I feel this is not at all inappropriate.) Tj11.4 -12  TD -0.0932  Tc 0.5432  Tw (Kind Regards) Tj192.6 -12  TD /F8 10.2  Tf-0.1505  Tc 0.3065  Tw (Renato Mancuso) Tj-91.2 -12  TD /F2 9  Tf0  Tc 0  Tw (http://www.renatomancuso.com) Tj176.4 672  TD 0.2 0.2 0.2 rg /F5 9  Tf(#include <iostream>) Tj32.4 -12  TD 0 0 0 rg /F2 9  Tf(// for std::cout, std::cerr, std::endl) Tj-32.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(#include <algorithm> ) Tj113.4 0  TD 0 0 0 rg /F2 9  Tf(// for std::lower_bound) Tj-113.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(#include <cassert>   ) Tj113.4 0  TD 0 0 0 rg /F2 9  Tf(// for the assert macro) Tj-113.4 -24  TD (// This is the definition of the Pair) Tj0 -12  TD (// template class.) TjT* (// We do not declare a constructor since) TjT* (// we want this struct to be a POD type.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(template<class K, class V>) TjT* (struct Pair {) Tj10.8 -12  TD (typedef K key_type;) Tj0 -12  TD (typedef V mapped_type;) TjT* (key_type key;) TjT* (mapped_type value;) Tj-10.8 -12  TD (};) Tj0 -24  TD 0 0 0 rg /F2 9  Tf(// These are the global operator < and == for) Tj0 -12  TD (// the Pair template class. They define a weak) TjT* (// ordering relationship based on the value of) TjT* (// the Pair's key data member. NOTE: Comeau) TjT* (// 4.3.3 STL requires the declaration of the) TjT* (// complete set of relational operators. This) TjT* (// is not correct according to the Standard.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(template<class K, class V>) TjT* (inline bool operator<\(const Pair<K, V> & lhs,) Tj108 -12  TD (const Pair<K, V> & rhs\) {) Tj-97.2 -12  TD (return lhs.key < rhs.key;) Tj-10.8 -12  TD (}) Tj0 -12  TD (template<class K, class V>) TjT* (inline bool operator==\(const Pair<K, V> & lhs,) Tj108 -12  TD (const Pair<K, V> & rhs\) {) Tj-97.2 -12  TD (return lhs.key == rhs.key;) Tj-10.8 -12  TD (}) Tj0 -24  TD 0 0 0 rg /F2 9  Tf(// This is the lookup function. It assumes) Tj0 -12  TD (// that tbl's elements are sorted according) TjT* (// to the // global < and == operators.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(template<class K, class V, int N>) TjT* (typename Pair<K, V>::mapped_type const &) Tj32.4 -12  TD (lookup\(const Pair< K, V >\( &tbl \)[ N ],) Tj21.6 -12  TD (typename Pair<K, V>::key_type key,) Tj0 -12  TD (typename Pair<K, V>::mapped_type) Tj59.4 -12  TD (const & default_value\) {) Tj-102.6 -12  TD (typedef Pair<K, V> pair_type;) Tj0 -12  TD (typedef const pair_type * iterator_type;) TjT* (const pair_type target = { key };) TjT* (iterator_type first = tbl;) TjT* (iterator_type last  = tbl + N;) TjT* (iterator_type found =) Tj32.4 -12  TD (std::lower_bound\(first, last, target\);) Tj-32.4 -12  TD (if\(\(found != last\) && \(*found == target\)\) {) Tj10.8 -12  TD (return found->value;) Tj-10.8 -12  TD (}) Tj0 -12  TD (return default_value;) Tj-10.8 -12  TD (}) Tj96 -12  TD 0 0 0 rg /F2 7.8  Tf0.12  Tc ([concluded at foot of next page]) Tj-357 701.4  TD /F1 30  Tf0.0157  Tc 0.0443  Tw (Letters to the Editor\(s\)) TjETendstreamendobj38 0 obj9038endobj36 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font 39 0 R/ProcSet 2 0 R>>/Contents 37 0 R>>endobj39 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F8 31 0 R>>endobj41 0 obj<</Length 42 0 R>>stream
BT559.2 42  TD0 0 0 rg /F0 10.8  Tf0.2028  Tc 0  Tw (7) Tj-222 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-294 -38.4  TD /F1 18  Tf-0.1074  Tc -0.0966  Tw (A Template Programmer\222s) Tj25.2 -20.4  TD -0.0247  Tc -0.1793  Tw (Struggles Revisited) Tj-25.2 -13.8  TD /F0 10.2  Tf-0.0827  Tc -0.0913  Tw (by Chris Main) Tj-13.8 -16.2  TD /F4 10.2  Tf-0.039  Tc 1.209  Tw (Overload 61 included a couple of lengthy articles \([1] and [2]\)) Tj0 -12  TD 0.2132  Tc 0.9035  Tw (which demonstrated how difficult it is to undertake a small,) TjT* 0.2934  Tc 0.8423  Tw (realistic and well defined programming task using function) TjT* 0.1216  Tc 1.0484  Tw (templates and C++. The afterwords of the authors and of the) TjT* -0.0706  Tc -0.0194  Tw (editor of Overload suggested that C++ is too difficult to use.) Tj11.4 -12  TD 0.0853  Tc 0.3647  Tw (The solution in the second article does indeed look verbose.) Tj-11.4 -12  TD -0.1939  Tc -0.3715  Tw (Surely, I said to myself, there must be a better way. I wondered what) Tj0 -12  TD -0.0983  Tc 0.0483  Tw (I would have done if I had been faced with the same task.) Tj0 -18  TD /F0 12  Tf0.0104  Tc -0.2504  Tw (What\222s Required?) TjT* /F4 10.2  Tf-0.083  Tc -0.067  Tw (A lookup table.) Tj11.4 -12  TD -0.018  Tc 0.468  Tw (My initial reaction is to just use ) Tj134.4 0  TD /F2 10.2  Tf-0.045  Tc 0  Tw (std::map) Tj51.6 0  TD /F4 10.2  Tf0.027  Tc 0.423  Tw (unless there is a) Tj-197.4 -12  TD -0.0964  Tc -0.0536  Tw (good reason not to.) Tj11.4 -12  TD -0.0422  Tc -0.4078  Tw (Is there a good reason not to? In this case, yes, because it is also) Tj-11.4 -12  TD -0.1127  Tc 0.4961  Tw (required to hold the table in non-volatile memory, which requires) Tj0 -12  TD -0.1129  Tc -0.5871  Tw (the table to be POD \(a C-style array of a C-style struct\). ) Tj216 0  TD /F2 10.2  Tf-0.195  Tc 0  Tw (std::map) Tj-216 -12  TD /F4 10.2  Tf-0.1003  Tc 0.1003  Tw (does not fulfil this requirement.) Tj11.4 -12  TD 0.2142  Tc 1.3358  Tw (We need something that behaves like ) Tj171.6 0  TD /F2 10.2  Tf0.33  Tc 0  Tw (std::map) Tj55.2 0  TD /F4 10.2  Tf0.4722  Tc 1.1778  Tw (but is) Tj-238.2 -12  TD -0.1026  Tc -0.0474  Tw (implemented with POD.) Tj0 -18  TD /F0 12  Tf-0.0124  Tc 0.0724  Tw (First Pass: Defining the Interface) TjT* /F4 10.2  Tf-0.0962  Tc 0.0062  Tw (Let\222s borrow the bits of the interface we need from ) Tj205.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::map) Tj48 0  TD /F4 10.2  Tf0.1644  Tc (:) Tj-240 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (namespace rom {) Tj10.8 -12  TD (template<typename T1, typename T2>) Tj0 -12  TD (struct pair {) Tj10.8 -12  TD (typedef T1 first_type;) Tj275.4 348  TD (typedef T2 second_type;) Tj0 -12  TD (T1 first;) TjT* (T2 second;) Tj-10.8 -12  TD (};) Tj0 -24  TD (template<typename Key, typename T,) Tj43.2 -12  TD -0.0222  Tc -0.1278  Tw (typename Cmp = std::less<Key> >) Tj-43.2 -12  TD 0  Tc 0  Tw (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD (typedef Key key_type;) Tj0 -12  TD (typedef T mapped_type;) TjT* -0.0176  Tc 0.0176  Tw (typedef pair<const Key, T> value_type;) TjT* 0  Tc 0  Tw (typedef Cmp key_compare;) Tj-10.8 -12  TD (};) Tj-10.8 -12  TD (}) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0861  Tc 0.5361  Tw (I\222m sure if I had been doing this from scratch I would have tried) Tj0 -12  TD -0.1064  Tc 0.5564  Tw (to use ) Tj28.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::pair) Tj54 0  TD /F4 10.2  Tf-0.0428  Tc 0.8356  Tw (, then realised like Stefan that this wouldn\222t) Tj-82.2 -12  TD 0.247  Tc 0.863  Tw (work because it is not an aggregate. However I\222ve used the) Tj0 -12  TD -0.0848  Tc 0.5348  Tw (hindsight I gained from reading his article to go straight to using) TjT* -0.0796  Tc 0.1696  Tw (a pair that supports aggregate initialisation.) Tj11.4 -12  TD 0.0243  Tc 0.4257  Tw (Our new ) Tj39 0  TD /F2 10.2  Tf-0.045  Tc 0  Tw (rom::map) Tj51.6 0  TD /F4 10.2  Tf0.0212  Tc 0.4288  Tw (does not need a template parameter for) Tj-102 -12  TD 0.0898  Tc 0.3602  Tw (allocation, since the whole point of it is that it uses a statically) Tj0 -12  TD -0.0822  Tc -0.0678  Tw (initialised array, so we discard that parameter of ) Tj194.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::map) Tj48 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-231 -12  TD -0.1905  Tc 0.4405  Tw (The constructor of ) Tj76.2 0  TD /F2 10.2  Tf-0.195  Tc 0  Tw (rom::map) Tj50.4 0  TD /F4 10.2  Tf-0.0996  Tc 0.2496  Tw (seems to be the obvious way to) Tj-138 -12  TD -0.2708  Tc -0.4792  Tw (associate it with an array. The constructor would also be an ideal place) Tj0 -12  TD -0.0284  Tc 0.4238  Tw (to check that the array is sorted.  Stefan used template argument) TjT* -0.1385  Tc 0.5885  Tw (deduction to obtain the size of the array but, as this fails on some) TjT* -0.1899  Tc 0.1489  Tw (compilers, I pass the size as a separate argument. The arguments of) TjT* -0.1759  Tc 0.0259  Tw (the constructor suggest the member variables the class requires:) Tj148.2 -12  TD 0.2 0.2 0.2 rg /F5 7.8  Tf0.12  Tc 0  Tw ([continued on next page]) Tj-409.2 -48  TD 0 0 0 rg /F2 9  Tf0  Tc (// This template function checks that the) Tj0 -12  TD (// table is sorted and that the key values) TjT* (// are unique.) TjT* (// Since this is a template function, it is) TjT* (// only instantiated if it is called.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(template<class T, int N>) TjT* (bool is_sorted\(T\(&tbl\)[N]\) {) Tj10.8 -12  TD (for\(int i = 0; i < N - 1; ++i\) {) Tj10.8 -12  TD (if\(\(tbl[i+1] < tbl[i]\)) Tj21.6 -12  TD (|| \(tbl[i+1] == tbl[i]\)\) {) Tj-10.8 -12  TD (std::cerr << "Element at index " << i+1) Tj54 -12  TD (<< " is not greater than its ") Tj-1.2 -12  TD (<< "predecessor.\\n";) Tj-52.8 -12  TD (return false;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (return true;) Tj-10.8 -12  TD (}) Tj0 -24  TD 0 0 0 rg /F2 9  Tf(// This is our test array mapping error codes) Tj0 -12  TD (// to error messages.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(const Pair<int, char const *> table[] = {) Tj10.8 -12  TD ({ 0, "OK" },) Tj-0.6 -12  TD -0.5429  Tc -0.0571  Tw ({ 6, "minor glitch in self-destruction module" },) Tj0 -12  TD -0.5514  Tc 0.0264  Tw ({ 13, "Error logging printer out of paper" },) TjT* -0.5415  Tc -0.0585  Tw ({ 101, "Emergency cooling system inoperable" },) Tj0.6 -12  TD 0  Tc 0  Tw ({ 2349, "Dangerous substance released" },) Tj275.4 312  TD ({ 32767, "Game over, you lost" }) Tj-10.8 -12  TD (};) Tj0 -24  TD 0 0 0 rg /F2 9  Tf-0.0375  Tc 0.0375  Tw (// This is how we check that the array is) Tj0 -12  TD -0.0171  Tc 0.0171  Tw (// sorted. It is done only in DEBUG builds.) TjT* 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (#if !defined\(NDEBUG\)) TjT* (namespace {) Tj10.8 -12  TD (struct check_sorted {) Tj9.6 -12  TD -0.2195  Tc 0.2195  Tw (check_sorted\(\) { assert\(is_sorted\(table\)\); }) Tj-9.6 -12  TD 0  Tc 0  Tw (};) Tj0 -12  TD (check_sorted checker;) Tj-10.8 -12  TD (}) Tj0 -12  TD (#endif ) Tj37.8 0  TD /F2 9  Tf(/* !defined\(NDEBUG\) */) Tj-37.8 -24  TD /F5 9  Tf(int main\(\) {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf-0.0667  Tw (// no need to cast the third argument to a) Tj0 -12  TD -0.0176  Tc 0.0176  Tw (// \(char const*\) since now the type of the) TjT* -0.0167  Tc 0.0167  Tw (// default_value argument is deduced from) TjT* -0.0176  Tc 0.0176  Tw (// the type of the elements of table[]...) TjT* 0.2 0.2 0.2 rg /F5 9  Tf-0.0171  Tc 0.0171  Tw (const char* result = lookup\( table, 6, 0 \);) Tj0 -24  TD -0.0162  Tc 0.0162  Tw (std::cout << \(result ? result : "not found"\)) Tj54 -12  TD 0  Tc 0  Tw (<< std::endl;) Tj-54.6 -12  TD -0.2049  Tc -0.0351  Tw (std::cout << lookup\(table, 5, "unknown error"\)) Tj54.6 -12  TD 0  Tc 0  Tw (<< std::endl;) Tj-54 -12  TD (return 0;) Tj-10.8 -12  TD (}) Tj0.6 w 1 J 1 j 0 0 0 RG ET29.4 401.4 m 567.6 401.4 l S endstreamendobj42 0 obj8001endobj40 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 41 0 R>>endobj44 0 obj<</Length 45 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (8) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj14.4 -40.8  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Key, typename T,) Tj48.6 -12  TD (typename Cmp = std::less<Key> >) Tj-48.6 -12  TD (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD (typedef pair<const Key, T> value_type;) Tj0 -12  TD (map\(const value_type array[],) Tj21.6 -12  TD (unsigned int array_size\)) Tj10.8 -12  TD (: values\(array\), size\(array_size\) {}) Tj-43.2 -12  TD (private:) Tj10.8 -12  TD (const value_type * const values;) Tj0 -12  TD (unsigned int size;) Tj-10.8 -12  TD (};) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.2129  Tc 1.0914  Tw (The only member function we need is ) Tj158.4 0  TD /F2 10.2  Tf-0.22  Tc 0  Tw (find\(\)) Tj35.4 0  TD /F4 10.2  Tf-0.2794  Tc 0.7294  Tw (. For ) Tj22.8 0  TD /F2 10.2  Tf-0.195  Tc 0  Tw (std::map) Tj-216.6 -12  TD /F4 10.2  Tf-0.2757  Tc 0.3757  Tw (this returns an iterator, but we can simply return a value because we) Tj0 -12  TD -0.2246  Tc 1.1362  Tw (are supplying a default value to use if none can be found. At this) TjT* -0.2727  Tc 0.3073  Tw (stage I want to verify that the interface is sound, so to get something) TjT* -0.2603  Tc 0.9285  Tw (that I can try out as early as possible I implement ) Tj201 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (find\(\)) Tj37.8 0  TD /F4 10.2  Tf-0.0929  Tc 0.5429  Tw (with a) Tj-238.8 -12  TD -0.2786  Tc -0.0214  Tw (linear search rather than a more efficient binary search:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Key, typename T,) Tj48.6 -12  TD (typename Cmp = std::less<Key> >) Tj-48.6 -12  TD (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD -0.525  Tc -0.0083  Tw (const T &find\(const Key &k, const T &def\) const {) Tj10.8 -12  TD 0  Tc 0  Tw (for\(unsigned int n = 0; n != size; ++n\) {) Tj10.8 -12  TD (if\(!Cmp\(\)\(k, values[n].first\)) Tj16.2 -12  TD (&& !Cmp\(\)\(values[n].first, k\)\) {) Tj-5.4 -12  TD (return values[n].second;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (return def;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (};) Tj-14.4 -18  TD 0 0 0 rg /F0 12  Tf-0.0909  Tc 0.4509  Tw (Testing the Interface) Tj0 -18  TD /F4 10.2  Tf-0.331  Tc 0.781  Tw (Let\222s try it out. We know that the ) Tj133.8 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (rom::map) Tj49.2 0  TD /F4 10.2  Tf-0.2305  Tc 0.6805  Tw (should behave like a) Tj-183 -12  TD /F2 10.2  Tf-0.42  Tc 0  Tw (std::map) Tj46.2 0  TD /F4 10.2  Tf-0.2197  Tc 0.1364  Tw (, so we write a utility to populate a ) Tj137.4 0  TD /F2 10.2  Tf-0.345  Tc 0  Tw (std::map) Tj48.6 0  TD /F4 10.2  Tf-0.3429  Tc 0.7929  Tw (with the) Tj-232.2 -12  TD 0.0654  Tc 0.6846  Tw (same table as a ) Tj69 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (rom::map) Tj53.4 0  TD /F4 10.2  Tf0.0581  Tc 0.9919  Tw (and check that every entry in the) Tj-122.4 -12  TD /F2 10.2  Tf-0.42  Tc 0  Tw (std::map) Tj48.6 0  TD /F4 10.2  Tf-0.2922  Tc 0.1422  Tw (can be found in the ) Tj75.6 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (rom::map) Tj46.2 0  TD /F4 10.2  Tf-0.29  Tc -0.01  Tw (.  Additionally we check) Tj-170.4 -12  TD -0.0949  Tc 1.0115  Tw (that if an entry cannot be found in the ) Tj162.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (rom::map) Tj51.6 0  TD /F4 10.2  Tf-0.1302  Tc 1.1802  Tw (the supplied) Tj-214.2 -12  TD -0.2941  Tc 0.8041  Tw (default value is returned. \(For brevity, I have implemented my tests) Tj0 -12  TD -0.2139  Tc -0.1361  Tw (with plain C ) Tj49.2 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (assert) Tj34.8 0  TD /F4 10.2  Tf-0.3052  Tc 0.1552  Tw (s rather than use a unit test framework.\)) Tj-69.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (namespace {) Tj0 -12  TD (typedef rom::map<unsigned int,) Tj91.8 -12  TD (const char *> RomLookup;) Tj-91.8 -24  TD (RomLookup::value_type table[] = {) Tj10.8 -12  TD ({0,"Ok\224},) Tj0 -12  TD -0.2  Tc -0.1  Tw ({6,"Minor glitch in self-destruction module"},) TjT* 0  Tc 0  Tw ({13,"Error logging printer out of paper"},) TjT* ({101,"Emergency cooling system inoperable"},) TjT* ({2349,"Dangerous substances released"},) TjT* ({32767,"Game over, you lost"}) Tj-10.8 -12  TD (};) Tj0 -16.2  TD (typedef std::map<RomLookup::key_type,) Tj59.4 -12  TD (RomLookup::mapped_type> StdLookup;) Tj-59.4 -19.8  TD (void PopulateStdLookup\() Tj48.6 -12  TD (const RomLookup::value_type table[],) Tj0 -12  TD (unsigned int table_size,) TjT* (StdLookup &stdLookup\) {) Tj237 708  TD -0.1895  Tc -0.2391  Tw (for\(unsigned int n=0; n != table_size; ++n\) {) Tj10.8 -12  TD -0.2429  Tc -0.3571  Tw (stdLookup[table[n].first] = table[n].second;) Tj-10.8 -12  TD 0  Tc 0  Tw (}) Tj-10.8 -12  TD (}) Tj0 -24  TD (class CheckFind {) Tj0 -12  TD (public:) Tj10.8 -12  TD (CheckFind\(const RomLookup &romLookup,) Tj54 -12  TD -0.2444  Tc 0.2444  Tw (const RomLookup::mapped_type) Tj96 -12  TD -0.2727  Tc 0  Tw (&def_value\)) Tj-123 -12  TD 0  Tc (: lookup\(romLookup\), def\(def_value\) {}) Tj-27 -12  TD (void operator\(\)\(const StdLookup::value_type) Tj151.2 -12  TD (&value\) const {) Tj-140.4 -12  TD (assert\(lookup.find\(value.first, def\)) Tj32.4 -12  TD (== value.second\);) Tj-43.2 -12  TD (}) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (const RomLookup &lookup;) Tj0 -12  TD (const RomLookup::mapped_type &def;) Tj-10.8 -12  TD (};) Tj0 -12  TD (}) Tj0 -24  TD (int main\(int, char**\) {) Tj10.8 -12  TD (const unsigned int table_size) Tj54 -12  TD (= sizeof\(table\)/sizeof\(table[0]\);) Tj-54 -12  TD (RomLookup romLookup\(table, table_size\);) Tj0 -12  TD (StdLookup stdLookup;) TjT* (PopulateStdLookup\(table, table_size,) Tj97.2 -12  TD (stdLookup\);) Tj-97.2 -12  TD (std::for_each\(stdLookup.begin\(\),) Tj75.6 -12  TD (stdLookup.end\(\),) Tj0 -12  TD (CheckFind\(romLookup, 0\)\);) Tj-75.6 -12  TD (assert\(romLookup.find\(1, 0\) == 0\);) Tj0 -12  TD (return 0;) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0747  Tc 0.7554  Tw (This is all fine. We have a usable interface and set of test cases.) Tj0 -12  TD -0.0925  Tc 1.3425  Tw (Note that I didn\222t need to do any type casting to pass ) Tj229.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (0) Tj9.6 0  TD /F4 10.2  Tf-0.1122  Tc 1.1622  Tw (as the) Tj-238.8 -12  TD 0.1537  Tc 0.6963  Tw (default argument to ) Tj88.2 0  TD /F2 10.2  Tf0.1425  Tc 0  Tw (romLookup.find\(\)) Tj100.8 0  TD /F4 10.2  Tf0.1784  Tc 1.0716  Tw (, it just compiled) Tj-189 -12  TD -0.0804  Tc 0.0804  Tw (straight away with no problems.) Tj0 -18  TD /F0 12  Tf-0.0397  Tc 0.1997  Tw (Second Pass: Implementing the) Tj21.6 -12  TD 0.001  Tc 0.359  Tw (Binary Search) Tj-21.6 -18  TD /F4 10.2  Tf-0.0295  Tc 0.9595  Tw (Now we need to refine ) Tj100.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (find\(\)) Tj40.2 0  TD /F4 10.2  Tf-0.0271  Tc 1.1971  Tw (to use a binary search, which) Tj-140.4 -12  TD -0.1318  Tc -0.0182  Tw (requires ) Tj34.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::lower_bound) Tj96 0  TD /F4 10.2  Tf-0.1105  Tc 0.1105  Tw (. My first attempt is:) Tj-116.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Key, typename T,) Tj48.6 -12  TD (typename Cmp = std::less<Key> >) Tj-48.6 -12  TD (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD -0.525  Tc -0.075  Tw (const T &find\(const Key &k, const T &def\) const {) Tj10.8 -12  TD -0.2154  Tc 0.0654  Tw (const value_type *value = std::lower_bound\() Tj48.6 -12  TD 0  Tc 0  Tw (values, values+size, k, Cmp\(\)\);) Tj-48.6 -12  TD (if\(value == values+size) Tj16.2 -12  TD (|| Cmp\(\)\(k, value->first\)\) {) Tj-5.4 -12  TD (return def;) Tj-10.8 -12  TD (}) Tj0 -12  TD (else {) Tj10.8 -12  TD (return value->second;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (};) TjETendstreamendobj45 0 obj7891endobj43 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 44 0 R>>endobj48 0 obj<</Length 49 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf0.8  Tc 1.9833  Tw (This gives me a compiler error saying it can\222t pass) Tj0 -12  TD /F2 10.2  Tf0.0982  Tc 0  Tw (value_types) Tj70.8 0  TD /F4 10.2  Tf-0.0678  Tc -0.0822  Tw (to ) Tj10.8 0  TD /F2 10.2  Tf0.0918  Tc 0.3882  Tw (less<unsigned int>) Tj111.6 0  TD /F4 10.2  Tf0.0481  Tc 0.4019  Tw (. It isn\222t too hard) Tj-193.2 -12  TD 0.242  Tc 0.9171  Tw (to work out that this is because I am passing a ) Tj213 0  TD /F2 10.2  Tf0.255  Tc 0  Tw (key_type) Tj-213 -12  TD /F4 10.2  Tf0.0237  Tc 0.2263  Tw (comparison function to ) Tj99 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (std::lower_bound) Tj101.4 0  TD /F4 10.2  Tf0.0849  Tc 0.3651  Tw (which attempts) Tj-200.4 -12  TD 0.0339  Tc 0.7761  Tw (to use it to compare ) Tj87.6 0  TD /F2 10.2  Tf0.0436  Tc 0  Tw (value_types) Tj68.4 0  TD /F4 10.2  Tf0.0855  Tc 0.6645  Tw (. So in the private part of) Tj-156 -12  TD 0.842  Tc 0.808  Tw (the map I write a function object that adapts the key) Tj0 -12  TD 0.0349  Tc 0.4151  Tw (comparison function to work with ) Tj144 0  TD /F2 10.2  Tf0.0436  Tc 0  Tw (value_types) Tj68.4 0  TD /F4 10.2  Tf0.0557  Tc 0.3943  Tw (. Normally I) Tj-212.4 -12  TD 0.8273  Tc 0.8227  Tw (do not bother to derive private function objects from) Tj0 -12  TD /F2 10.2  Tf0.0379  Tc 0  Tw (std::unary_function) Tj121.2 0  TD /F4 10.2  Tf-0.0483  Tc 1.6983  Tw (or  ) Tj16.2 0  TD /F2 10.2  Tf0.09  Tc 0  Tw (std::binary_function) Tj123.6 0  TD /F4 10.2  Tf-0.15  Tc (,) Tj-261 -12  TD 0.1624  Tc 0.9376  Tw (but as this raised problems in the original article I did so on) Tj0 -12  TD 0.1027  Tc -0.2527  Tw (this occasion:) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Key, typename T,) Tj48.6 -12  TD (typename Cmp = std::less<Key> >) Tj-48.6 -12  TD (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD (const T &find\(const Key &k,) Tj75.6 -12  TD (const T &def\) const {) Tj-64.8 -12  TD (const value_type *value =) Tj27 -12  TD (std::lower_bound\() Tj91.8 0  TD -0.2211  Tc -0.3789  Tw (values, values+size,) Tj0 -12  TD -0.1895  Tc -0.4105  Tw (k, value_compare\(\)\);) Tj-118.8 -12  TD 0 0 0 rg /F2 9  Tf0  Tc 0  Tw (// rest of member function as before) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (struct value_compare) Tj10.8 -12  TD (: public std::binary_function<value_type,) Tj124.2 -12  TD (value_type, bool> {) Tj-124.2 -12  TD (bool operator\(\)\(const value_type &v1,) Tj70.2 -12  TD (const value_type &v2\) const {) Tj-59.4 -12  TD (return Cmp\(\)\(v1.first, v2.first\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (};) Tj-10.8 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.3366  Tc 0.7634  Tw (Still a compiler error, this time that I am trying to pass an) Tj0 -12  TD /F2 10.2  Tf0.7527  Tc 35.7273  Tw (unsigned int) Tj136.8 0  TD /F4 10.2  Tf0.6581  Tc 14.7919  Tw (as an argument to) Tj-136.8 -12  TD /F2 10.2  Tf0.6  Tc 0  Tw (value_compare::operator\(\)) Tj168 0  TD /F4 10.2  Tf0.5544  Tc 0.6156  Tw (. Again, it is not too) Tj-168 -12  TD 0.1436  Tc 1.1314  Tw (difficult to spot that I am passing a ) Tj159.6 0  TD /F2 10.2  Tf0.255  Tc 0  Tw (key_type) Tj54.6 0  TD /F4 10.2  Tf0.1171  Tc 1.5329  Tw (as the third) Tj-214.2 -12  TD -0.0822  Tc 1.1322  Tw (argument of ) Tj54 0  TD /F2 10.2  Tf-0.045  Tc 0  Tw (std::lower_bound) Tj101.4 0  TD /F4 10.2  Tf-0.0079  Tc 0.7579  Tw (where a ) Tj36.6 0  TD /F2 10.2  Tf-0.06  Tc 0  Tw (value_type) Tj64.8 0  TD /F4 10.2  Tf0.1983  Tc (is) Tj-256.8 -12  TD -0.0985  Tc 0.0235  Tw (required. We use the elegant fix employed in [2]:) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Key, typename T,) Tj48.6 -12  TD (typename Cmp = std::less<Key> >) Tj-48.6 -12  TD (class map {) Tj0 -12  TD (public:) Tj10.8 -12  TD (const T &find\(const Key &k,) Tj75.6 -12  TD (const T &def\) const {) Tj-64.8 -12  TD (const value_type key = { k };) Tj0 -12  TD (const value_type *value =) Tj16.2 -12  TD (std::lower_bound\(values, values+size,) Tj91.8 -12  TD (key, value_compare\(\)\);) Tj-108 -12  TD 0 0 0 rg /F2 9  Tf(// rest of member function as before) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj-10.8 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.6688  Tc 0.724  Tw (Now everything compiles cleanly \(including the use of) Tj0 -12  TD /F2 10.2  Tf0.03  Tc 0  Tw (std::binary_function) Tj123 0  TD /F4 10.2  Tf0.0753  Tc 1.2747  Tw (\) and the test code also executes) Tj-123 -12  TD -0.1083  Tc 0  Tw (successfully.) Tj0 -18  TD /F0 12  Tf0.0015  Tc -0.0415  Tw (Third Pass: Considering the) Tj22.2 -12  TD 0.0452  Tc 0  Tw (Disadvantages) Tj-22.2 -18  TD /F4 10.2  Tf-0.1096  Tc 1.1096  Tw (We have reached a solution that works. We reached it by a less) Tj0 -12  TD -0.0827  Tc 0.26  Tw (painful route, with less code and with simpler code. But does this) TjT* -0.1047  Tc 0.1047  Tw (solution have some disadvantages the original did not have?) Tj286.2 708  TD 0.0041  Tc 0.4459  Tw (Most obviously, it does not provide a mechanism that can be) Tj-11.4 -12  TD -0.0234  Tc 0.4734  Tw (used equally well for any map-like container: it is a less general) Tj0 -12  TD -0.0477  Tc 0.4977  Tw (solution. I\222m not convinced this is a disadvantage. \223Why restrict) TjT* -0.0827  Tc 0.0527  Tw (ourselves to arrays?\224 asks [2]. I\222m tempted to reply \223Why not?\224) Tj11.4 -12  TD -0.0487  Tc 0.4987  Tw (Another difference is that our ) Tj124.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (rom::map) Tj48 0  TD /F4 10.2  Tf-0.0393  Tc 0.4893  Tw (s have two member) Tj-183.6 -12  TD -0.0917  Tc 0.0017  Tw (variables that take up memory which the original solution did not.) Tj0 -12  TD -0.0332  Tc 0.4832  Tw (This may be insignificant, but since the context of the task is an) TjT* 0.1249  Tc 0.3251  Tw (embedded system it is conceivable that we may be required to) TjT* -0.0804  Tc 0.5304  Tw (conserve memory. If this is the case there is a simple refactoring) TjT* 0.0517  Tc 0.3983  Tw (that can be applied to the ) Tj108.6 0  TD /F2 10.2  Tf0.105  Tc 0  Tw (rom::map) Tj49.2 0  TD /F4 10.2  Tf0.0429  Tc 0.4071  Tw (. The array can be passed) Tj-157.8 -12  TD -0.1355  Tc -0.4145  Tw (directly to the ) Tj55.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (find\(\)) Tj37.8 0  TD /F4 10.2  Tf-0.1795  Tc -0.3705  Tw (member function, which can be made static,) Tj-93 -12  TD 0.0763  Tc 0.3737  Tw (and the constructor and member variables removed. \(If we had) Tj0 -12  TD -0.0649  Tc -0.5214  Tw (implemented a check that the array is sorted in the constructor, that) TjT* -0.0851  Tc 0.0018  Tw (code could also be refactored into a static member function\).) Tj11.4 -12  TD -0.0862  Tc -0.3638  Tw (At this stage, if I had a smart enough compiler, I could try to use) Tj-11.4 -12  TD -0.1144  Tc -0.5689  Tw (template argument deduction to determine the array size rather than) Tj0 -12  TD -0.1224  Tc -0.3776  Tw (pass it as an explicit parameter. Personally, I don\222t think I would go) TjT* -0.0487  Tc 0.0987  Tw (to that trouble. ) Tj0 -18  TD /F0 12  Tf-0.0182  Tc 0.0782  Tw (Fourth Pass: Things Get Nasty) TjT* /F4 10.2  Tf-0.0914  Tc 1.1414  Tw (If we find it necessary to eliminate the constructor and member) Tj0 -12  TD -0.1035  Tc 0.1535  Tw (variables, leaving only a static member function, the next obvious) TjT* -0.082  Tc 1.082  Tw (refactoring is to turn it into a standalone function. But if we do) TjT* 0.1385  Tc 1.0206  Tw (that, we run into the problems experienced in [1]. So we are) TjT* -0.0868  Tc 1.2035  Tw (faced with a choice: proceed with the refactoring and introduce) TjT* -0.0844  Tc 0.2617  Tw (the necessary traits class as in [2], or abandon the refactoring and) TjT* -0.0969  Tc 0.1183  Tw (stick with what we have. I\222d go for the latter. The syntax is a little) TjT* -0.1192  Tc 0.0892  Tw (less elegant, but overall it\222s simpler.) Tj0 -18  TD /F0 12  Tf0.0324  Tc 0  Tw (Conclusion) TjT* /F4 10.2  Tf-0.1118  Tc 0.2618  Tw (Why did things run more smoothly with the approach I took? It is) Tj0 -12  TD -0.0763  Tc 0.7663  Tw (because my solution uses a class template rather than a function) TjT* 0.5534  Tc 0.7538  Tw (template. It therefore does much less template argument) TjT* -0.0908  Tc 0.0265  Tw (deduction, which avoids a whole host of problems.) Tj11.4 -12  TD 0.2621  Tc 0.7212  Tw (This suggests a design guideline: if you are struggling to) Tj-11.4 -12  TD -0.0198  Tc 0.4698  Tw (implement a function template, consider re-implementing it as a) Tj0 -12  TD -0.093  Tc 0.1144  Tw (class template \(as an alternative to introducing traits\).) Tj223.8 -12  TD /F8 10.2  Tf-0.084  Tc 0.24  Tw (Chris Main) Tj-106.2 -12  TD /F2 9  Tf0  Tc 0  Tw (chris@chrismain.uklinux.net) Tj-117.6 -18  TD /F0 12  Tf0.0507  Tc (Afterword) Tj0 -18  TD /F4 10.2  Tf-0.0948  Tc 1.1994  Tw (Is C++ too difficult? I\222m not so sure. I think I\222ve demonstrated) Tj0 -12  TD 0.3464  Tc 0.7703  Tw (that the code which provoked comments to that effect was) TjT* 0.0058  Tc 1.1533  Tw (unnecessarily complicated. I think I did so not because I am a) TjT* -0.0261  Tc 1.0761  Tw (C++ expert but because I followed strategies that are generally) TjT* 0.4566  Tc 0.6684  Tw (useful when programming: follow the pattern of a known) TjT* -0.0812  Tc 0.5312  Tw (working solution to a similar problem \(in this case ) Tj210 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::map) Tj48 0  TD /F4 10.2  Tf-0.2733  Tc (\),) Tj-258 -12  TD 0.0454  Tc 1.0046  Tw (work incrementally towards the solution, try to keep things as) Tj0 -12  TD -0.158  Tc 0.608  Tw (simple as possible.) Tj11.4 -12  TD 0.2574  Tc 0.7926  Tw (How would the problem be solved in other programming) Tj-11.4 -12  TD -0.0808  Tc 0.2642  Tw (languages? In C you could use the standard library ) Tj207 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (bsearch\(\)) Tj54 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-261 -12  TD -0.0834  Tc 0.4534  Tw (I have used it, but it is quite fiddly to get the casting to and from) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (void *) Tj38.4 0  TD /F4 10.2  Tf-0.0533  Tc -0.0967  Tw (right, so in my experience it is not significantly easier to) Tj-38.4 -12  TD -0.102  Tc 0.027  Tw (use than C++. What other languages could be used?) Tj0 -18  TD /F0 12  Tf-0.018  Tc 0  Tw (References) TjT* /F4 10.2  Tf0.2448  Tc 3.5052  Tw ([1] S. Heinzmann, \223The Tale of a Struggling Template) Tj11.4 -12  TD -0.089  Tc -0.061  Tw (Programmer\224, ) Tj59.4 0  TD /F6 10.2  Tf-0.1325  Tc -0.0175  Tw (Overload 61) Tj50.4 0  TD /F4 10.2  Tf-0.0274  Tc -0.1226  Tw (, June 2004) Tj-121.2 -12  TD 0.1983  Tc 1.4517  Tw ([2] S. Heinzmann and P. Bass, \223A Template Programmer\222s) Tj11.4 -12  TD -0.1041  Tc -0.0459  Tw (Struggles Resolved\224, ) Tj86.4 0  TD /F6 10.2  Tf-0.1325  Tc 0.5825  Tw (Overload 61) Tj50.4 0  TD /F4 10.2  Tf-0.1607  Tc 0.3107  Tw (, June 2004) Tj106.2 -19.8  TD /F0 10.8  Tf0.1872  Tc 0  Tw (9) Tj-221.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj49 0 obj11210endobj46 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font 50 0 R/ProcSet 2 0 R>>/Contents 48 0 R>>endobj50 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F8 31 0 R>>endobj52 0 obj<</Length 53 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (10) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj14.4 -38.4  TD /F1 18  Tf-0.0318  Tc 0.1278  Tw (Handling Exceptions in) Tj25.2 -18  TD 0.2 0.2 0.2 rg /F5 18  Tf0  Tc 0  Tw (finally) Tj-25.2 -14.4  TD 0 0 0 rg /F0 10.2  Tf-0.2448  Tc 0.3708  Tw (by Tony Barrett-Powell) Tj-11.4 -18  TD /F4 10.2  Tf-0.0872  Tc 0.0572  Tw (Recently I was reviewing some old Java code that performs SQL) Tj-3 -12  TD -0.0734  Tc 0.59  Tw (queries against a database and closes the resources in ) Tj222 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (finally) Tj-222 -12  TD /F4 10.2  Tf-0.0935  Tc 0.2435  Tw (blocks.  When I examined the code I realized that the handling of) Tj0 -12  TD -0.0846  Tc 1.1346  Tw (the resources was flawed if an exception occurred.  This article) TjT* -0.0409  Tc 1.1509  Tw (looks at how the handling of the resources and exceptions was) TjT* -0.0689  Tc 0.0047  Tw (problematic and some approaches to solving these problems.) Tj4.8 -18  TD /F0 12  Tf-0.0731  Tc -0.1669  Tw (The Problems) Tj-4.8 -18  TD /F4 10.2  Tf-0.0836  Tc 0.5881  Tw (The code in question was made up of static methods where each) Tj0 -12  TD 0.2886  Tc 0.5614  Tw (method used a ) Tj67.8 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (Connection) Tj68.4 0  TD /F4 10.2  Tf0.2727  Tc 0.7773  Tw (parameter and performed the) Tj-136.2 -12  TD 0.3142  Tc 0.9358  Tw (necessary actions to create a query, perform the query and) Tj0 -12  TD 0.05  Tc 1.2728  Tw (process the results of the query.  My problem came from the) TjT* -0.0595  Tc 0.8695  Tw (handling of the query and results resources, i.e. the instances of) TjT* /F2 10.2  Tf-0.12  Tc 0  Tw (PreparedStatement) Tj104.4 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj17.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (ResultSet) Tj54 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-164.4 -12  TD -0.287  Tc 0.137  Tw (The ) Tj18 0  TD /F2 10.2  Tf-0.2612  Tc 0  Tw (PreparedStatement) Tj102 0  TD /F4 10.2  Tf-0.1096  Tc 0.5596  Tw (and ) Tj16.8 0  TD /F2 10.2  Tf-0.2533  Tc 0  Tw (ResultSet) Tj55.2 0  TD /F4 10.2  Tf-0.2463  Tc 0.6963  Tw (were created in) Tj-203.4 -12  TD -0.2378  Tc 0.0878  Tw (the main ) Tj36 0  TD /F2 10.2  Tf-0.52  Tc 0  Tw (try) Tj19.8 0  TD /F4 10.2  Tf-0.2672  Tc 0.1838  Tw (block of the method and were closed in the associated) Tj-55.8 -12  TD /F2 10.2  Tf-0.2914  Tc 0  Tw (finally) Tj42.6 0  TD /F4 10.2  Tf-0.2973  Tc -0.2527  Tw (block.  The ) Tj44.4 0  TD /F2 10.2  Tf-0.4629  Tc 0  Tw (close\(\)) Tj42 0  TD /F4 10.2  Tf-0.2919  Tc -0.3581  Tw (method of these classes can throw a) Tj-129 -12  TD /F2 10.2  Tf-0.42  Tc 0  Tw (SQLException) Tj70.8 0  TD /F4 10.2  Tf-0.3411  Tc -0.2089  Tw (and in the ) Tj37.8 0  TD /F2 10.2  Tf-0.2914  Tc 0  Tw (finally) Tj42 0  TD /F4 10.2  Tf-0.2612  Tc -0.1888  Tw (block each ) Tj42.6 0  TD /F2 10.2  Tf-0.3771  Tc 0  Tw (close\(\)) Tj41.4 0  TD /F4 10.2  Tf-0.3  Tc (method) Tj-234.6 -12  TD 0.1043  Tc -0.1043  Tw (was wrapped in a ) Tj74.4 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (try) Tj18.6 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj3 0  TD /F2 10.2  Tf-0.12  Tc (catch) Tj33 0  TD /F4 10.2  Tf0.0521  Tc -0.2021  Tw (where the ) Tj43.2 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (SQLException) Tj75.6 0  TD /F4 10.2  Tf-0.087  Tc (was) Tj-247.8 -12  TD -0.3365  Tc -0.2935  Tw (caught and converted into a ) Tj103.8 0  TD /F2 10.2  Tf-0.4575  Tc 0  Tw (RuntimeException) Tj93 0  TD /F4 10.2  Tf-0.3909  Tc -0.3591  Tw (to be thrown.  The) Tj-196.8 -12  TD -0.2856  Tc 0.0756  Tw (outline of the original code is shown in the following listing:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (public static ArrayList foo\(Connection conn\)) Tj135 -12  TD (throws SQLException {) Tj-124.2 -12  TD (ArrayList results = null;) Tj0 -12  TD (PreparedStatement ps = null;) TjT* (ResultSet rs = null;) TjT* (try {   ) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(// create a query, perform the query and) Tj0 -12  TD (// process the results) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj0 -12  TD (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (rs.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (throw new RuntimeException\(ex\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (try {) Tj10.8 -12  TD (ps.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (throw new RuntimeException\(ex\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (return results;) Tj-10.8 -12  TD (}) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0779  Tc -0.0721  Tw (There are a number of problems with this code:) Tj0 -12  TD 0.3  Tc 0  Tw (1) Tj11.4 0  TD 0.0469  Tc 0.4031  Tw (If an exception is thrown in the ) Tj134.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (try) Tj21 0  TD /F4 10.2  Tf0.05  Tc 0.4  Tw (block and a subsequent) Tj-155.4 -12  TD 0.311  Tc 1.099  Tw (exception is thrown in the ) Tj123.6 0  TD /F2 10.2  Tf0.3086  Tc 0  Tw (finally) Tj49.2 0  TD /F4 10.2  Tf0.2462  Tc 1.7038  Tw (block the original) Tj-172.8 -12  TD -0.0844  Tc -0.0656  Tw (exception is lost.) Tj0 -12  TD 0.1471  Tc 0.3029  Tw (The problem where an exception is hidden by a subsequent) TjT* -0.0852  Tc -0.1739  Tw (exception is well known and is discussed in a number of books:) TjT* -0.0889  Tc 0.3589  Tw (Thinking in Java [Eckel] \221the lost exception\222,  Java in Practice) TjT* 0.009  Tc 0.441  Tw ([Warren] and Practical Java - Programming Language Guide) TjT* 0.107  Tc 0.293  Tw ([Hagger] to name a few.  All discuss the problem and I will) TjT* -0.0795  Tc -0.0705  Tw (present a trivial version here with some example code:) Tj277.8 708  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (public void foo\(\) {) Tj21.6 -12  TD (try {) Tj10.8 -12  TD (throw new RuntimeException\("Really) Tj145.8 -12  TD (important"\);) Tj-156.6 -12  TD (}) Tj0 -12  TD (finally {) Tj10.8 -12  TD (throw new RuntimeException\("Just) Tj145.8 -12  TD (trivial"\);) Tj-156.6 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.196  Tc -0.554  Tw (A caller of this function would receive the \223Just trivial\224 exception,) Tj0 -12  TD -0.1736  Tc -0.3764  Tw (there would be no evidence that the \223Really important\224 exception) TjT* -0.1624  Tc -0.0421  Tw (ever occurred at all. In the original code if an exception occurred) TjT* -0.1527  Tc 0.0027  Tw (in the finally block after a ) Tj103.8 0  TD /F2 10.2  Tf-0.22  Tc 0  Tw (SQLException) Tj73.2 0  TD /F4 10.2  Tf-0.1212  Tc -0.0288  Tw (had been thrown in) Tj-177 -12  TD -0.1548  Tc 0.0048  Tw (the ) Tj14.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (try) Tj20.4 0  TD /F4 10.2  Tf-0.1865  Tc 0.3365  Tw (block, the ) Tj40.8 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (SQLException) Tj72.6 0  TD /F4 10.2  Tf-0.1181  Tc -0.0319  Tw (would be lost.) Tj-159 -12  TD 0.3  Tc 0  Tw (2) Tj10.8 0  TD -0.0943  Tc -0.2557  Tw (The use of ) Tj43.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (RuntimeException) Tj96 0  TD /F4 10.2  Tf-0.0695  Tc -0.3805  Tw (s to throw the ) Tj55.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (Exception) Tj54 0  TD /F4 10.2  Tf0.2322  Tc (s) Tj-248.4 -12  TD -0.0721  Tc -0.0779  Tw (caught in the ) Tj54.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (finally) Tj44.4 0  TD /F4 10.2  Tf-0.1258  Tc 0.0758  Tw (block when the method would throw a) Tj-99 -12  TD /F2 10.2  Tf0.33  Tc 0  Tw (SQLException) Tj83.4 0  TD /F4 10.2  Tf0.2724  Tc 3.1776  Tw (from the) Tj0  Tc 0.45  Tw ( ) Tj46.2 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (try) Tj25.2 0  TD /F4 10.2  Tf0.3123  Tc 3.1377  Tw (block is inconsistent,) Tj-154.8 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (SQLException) Tj75 0  TD /F4 10.2  Tf-0.0854  Tc -0.0646  Tw (should be used for both.) Tj-85.8 -12  TD 0.3  Tc 0  Tw (3) Tj10.8 0  TD -0.0914  Tc -0.1186  Tw (If an exception is thrown by the closing of the ) Tj183.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (ResultSet) Tj54 0  TD /F4 10.2  Tf0.35  Tc -1.1  Tw (, no) Tj-237.6 -12  TD -0.0808  Tc 0.4308  Tw (attempt is made to close the ) Tj116.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (PreparedStatment) Tj96 0  TD /F4 10.2  Tf-0.0018  Tc 0.1518  Tw (, that may) Tj-212.4 -12  TD -0.1152  Tc 0.2652  Tw (cause a possible resource leak.) Tj-6.6 -18  TD /F0 12  Tf0.0093  Tc 0  Tw (Solutions) Tj-4.2 -18  TD /F4 10.2  Tf0.1541  Tc 1.0596  Tw (We can fix some of the problems very easily by nesting the) Tj0 -12  TD 0.6537  Tc 0.7563  Tw (handling of the resources in ) Tj139.2 0  TD /F2 10.2  Tf0.88  Tc 0  Tw (try) Tj20.4 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj3.6 0  TD /F2 10.2  Tf0.8229  Tc (finally) Tj52.2 0  TD /F4 10.2  Tf0.5861  Tc 1.0639  Tw (blocks \(as) Tj-215.4 -12  TD 0.1303  Tc 1.1447  Tw (demonstrated in [Griffiths]\) and to remove the conversion to) Tj0 -12  TD /F2 10.2  Tf0.105  Tc 0  Tw (RuntimeException) Tj100.2 0  TD /F4 10.2  Tf0.1156  Tc 1.0201  Tw (s.  This would be implemented in the) Tj-100.2 -12  TD -0.0708  Tc -0.0792  Tw (method as follows:) Tj13.8 -12  TD /F2 9  Tf0  Tc 0  Tw (// assign query to ps) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(try {   ) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(// perform the query and assign result to rs) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(try {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(// process the results ) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj0 -12  TD (finally { rs.close\(\); }) Tj-10.8 -12  TD (}) Tj0 -12  TD (finally { ps.close\(\); }) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.4478  Tc 0.8022  Tw (This solves the second problem, as the method is already) Tj0 -12  TD -0.113  Tc 0.563  Tw (declared to throw a ) Tj82.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (SQLException) Tj75 0  TD /F4 10.2  Tf-0.0477  Tc 0.6977  Tw (no conversion is required,) Tj-157.2 -12  TD -0.0551  Tc 0.7779  Tw (and the third problem, because even if a exception is thrown by) Tj0 -12  TD /F2 10.2  Tf0.6  Tc 0  Tw (rs.close\(\)) Tj71.4 0  TD /F4 10.2  Tf0.6452  Tc 0.4048  Tw (the ) Tj18 0  TD /F2 10.2  Tf0.72  Tc 0  Tw (ps.close\(\)) Tj71.4 0  TD /F4 10.2  Tf0.6456  Tc 0.4044  Tw (will always be called.) Tj-160.8 -12  TD -0.0708  Tc -0.0125  Tw (However this leaves the first problem of the lost exception.) Tj10.8 -12  TD -0.0682  Tc 0.5182  Tw (The suggested approach in [Warren] is to ) Tj172.2 0  TD /F7 10.2  Tf-0.0044  Tc -0.0436  Tw (\223Never let exceptions) Tj-183 -12  TD -0.0624  Tc 0.0144  Tw (propagate out of a ) Tj69.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (finally) Tj44.4 0  TD /F7 10.2  Tf-0.0596  Tc (block\224) Tj23.4 0  TD /F4 10.2  Tf-0.0567  Tc -0.0933  Tw (,  this would be implemented in) Tj-137.4 -12  TD -0.1548  Tc 0.6048  Tw (the ) Tj14.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (finally) Tj44.4 0  TD /F4 10.2  Tf-0.1064  Tc -0.0436  Tw (block as follows:) Tj-45 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (rs.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(/* exception ignored */) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj0 -12  TD (try {) Tj10.8 -12  TD (ps.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(/* exception ignored */) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj-10.8 -12  TD (}) TjETendstreamendobj53 0 obj11453endobj51 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font 54 0 R/ProcSet 2 0 R>>/Contents 52 0 R>>endobj54 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F7 29 0 R>>endobj56 0 obj<</Length 57 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf-0.0469  Tc 1.1635  Tw (This approach only solves the hidden exception problem in the) Tj0 -12  TD -0.1753  Tc 0.0253  Tw (original code but as a consequence adds an additional problem: it is) TjT* -0.1852  Tc 0.0352  Tw (possible for the ) Tj62.4 0  TD /F2 10.2  Tf-0.24  Tc 0  Tw (rs.close\(\)) Tj61.2 0  TD /F4 10.2  Tf-0.177  Tc 0.127  Tw (to be the original exception and this) Tj-123.6 -12  TD -0.0795  Tc 1.1295  Tw (is ignored.  Ignoring an exception is likely to make recovery in) Tj0 -12  TD -0.1652  Tc 0.0613  Tw (higher levels of the code more difficult, if not impossible.  It is also) TjT* -0.1728  Tc 0.2536  Tw (likely to mislead a user trying to determine the cause of a failure; a) TjT* -0.19  Tc 0.7734  Tw (later related exception may be mistakenly diagnosed as the source) TjT* 0.059  Tc 0.991  Tw (of the problem.  The consequences of ignoring exceptions are) TjT* -0.178  Tc 0.028  Tw (discussed further in [Bloch] \223Item 47: Don\222t ignore exceptions\224.) Tj11.4 -12  TD -0.1197  Tc -0.297  Tw ([Hagger] offers a different solution to this problem by collecting) Tj-11.4 -12  TD -0.0822  Tc 0.4231  Tw (up the exceptions thrown during processing of a method.  This is) Tj0 -12  TD -0.0547  Tc -0.0353  Tw (achieved by the creation of a derived exception class containing a) TjT* -0.1466  Tc -0.3784  Tw (collection of other exceptions \(a slightly modified version follows\):) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class FooException extends Exception {) Tj10.8 -12  TD (private ArrayList exceptions;) Tj0 -12  TD (public FooException\(ArrayList exs\) {) Tj10.8 -12  TD (exceptions = exs;) Tj-10.8 -12  TD (}) Tj0 -12  TD (public ArrayList getExceptions\(\) {) Tj10.8 -12  TD (return exceptions;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0907  Tc -0.0047  Tw (And the original code is modified to make use of this exception:) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (public static ArrayList foo\(Connection conn\)) Tj59.4 -12  TD (throws FooException {) Tj-48.6 -12  TD (ArrayList exceptions = new ArrayList\(\); ) Tj0 -12  TD (ArrayList results = null;) TjT* (PreparedStatement ps = null;) TjT* (ResultSet rs = null;) TjT* (try {   ) Tj10.8 -12  TD /F2 9  Tf(// create a query, perform the query and) Tj0 -12  TD (// process the results) Tj-10.8 -12  TD /F5 9  Tf(}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (exceptions.add\(exception\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (rs.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (exceptions.add\(ex\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (try {) Tj10.8 -12  TD (ps.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (exceptions.add\(ex\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (if\(exceptions.size\(\) != 0\) {) Tj10.8 -12  TD (throw new FooException\(exceptions\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (return results;) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0865  Tc 0.6565  Tw (This approach doesn\222t lose any of the exceptions thrown and the) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (PreparedStatement) Tj105.6 0  TD /F4 10.2  Tf-0.0786  Tc 1.2036  Tw (will be closed even if the close of the) Tj-105.6 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (ResultSet) Tj57 0  TD /F4 10.2  Tf-0.079  Tc 0.604  Tw (throws an exception, but now the method throws a) Tj-57 -12  TD 0.1517  Tc 0.2983  Tw (user-defined ) Tj56.4 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (Exception) Tj60.6 0  TD /F4 10.2  Tf0.2452  Tc 0.5048  Tw (instead of ) Tj46.8 0  TD /F2 10.2  Tf0.23  Tc 0  Tw (SQLException) Tj75.6 0  TD /F4 10.2  Tf0.2429  Tc 1.1071  Tw (. It is) Tj-239.4 -12  TD -0.0732  Tc 0.9898  Tw (better to use standard exceptions where possible as discussed in) Tj274.8 708  TD 0.4341  Tc 0.6159  Tw ([Bloch] ) Tj37.8 0  TD /F7 10.2  Tf0.3999  Tc 0.7521  Tw (Item 42: Favor the use of standard exceptions.  More) Tj-37.8 -12  TD -0.0795  Tc 0.0315  Tw (importantly the exceptions are collected as peers not as causes, and so) Tj0 -12  TD 0.0289  Tc 1.0631  Tw (is not idiomatic \(at least not since JDK1.4\) where the ) Tj214.2 0  TD /F2 9  Tf0.0667  Tc 0  Tw (Throwable) Tj-214.2 -12  TD /F7 10.2  Tf-0.0841  Tc 0.0361  Tw (class allows nesting of another ) Tj116.4 0  TD /F2 9  Tf0  Tc 0  Tw (Throwable) Tj51 0  TD /F7 10.2  Tf-0.0107  Tc -0.0373  Tw (as a cause) Tj42 0  TD /F4 10.2  Tf0.02  Tc -0.17  Tw ([ JDK14].) Tj-198 -12  TD /F2 10.2  Tf-0.07  Tc 0  Tw (SQLException) Tj75.6 0  TD /F4 10.2  Tf-0.0348  Tc 0.3134  Tw (was written before JDK1.4 and has its own) Tj-87 -12  TD -0.2076  Tc -0.3924  Tw (mechanism for nesting other ) Tj111 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (SQLException) Tj70.2 0  TD /F4 10.2  Tf-0.2152  Tc -0.3848  Tw (s, this is supported by) Tj-181.2 -12  TD -0.224  Tc 0.674  Tw (methods ) Tj34.8 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (setNextException\(\)) Tj106.2 0  TD /F4 10.2  Tf-0.3096  Tc 0.1596  Tw (and ) Tj15.6 0  TD /F2 10.2  Tf-0.2867  Tc 0  Tw (getNextException\(\)) Tj104.4 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-261 -12  TD -0.1948  Tc -0.4352  Tw (This mechanism, being limited to ) Tj130.2 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (SQLException) Tj70.2 0  TD /F4 10.2  Tf-0.1829  Tc -0.5671  Tw (, is not generally) Tj-200.4 -12  TD -0.2419  Tc 0.2919  Tw (idiomatic for all ) Tj63.6 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (Throwable) Tj54.6 0  TD /F4 10.2  Tf-0.2219  Tc -0.2709  Tw (types and so will be not be considered) Tj-118.2 -12  TD -0.1819  Tc 0.0319  Tw (for the purposes of this article.) Tj4.2 -18  TD /F0 12  Tf-0.0115  Tc 0.1715  Tw (A More Idiomatic Approach?) Tj-4.2 -18  TD /F4 10.2  Tf-0.3  Tc 0.15  Tw (So a ) Tj19.2 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (Throwable) Tj54 0  TD /F4 10.2  Tf-0.2918  Tc 0.1418  Tw (\(and its derived classes\) can be constructed with a) Tj-73.2 -12  TD -0.2591  Tc 1.2491  Tw (cause \(if this support has been implemented\), or can be initialized) Tj0 -12  TD -0.3381  Tc 0.5481  Tw (with a cause using the ) Tj88.2 0  TD /F2 10.2  Tf-0.4473  Tc 0  Tw (initCause\(\)) Tj66 0  TD /F4 10.2  Tf-0.2961  Tc 0.3461  Tw (method.  Nesting exceptions) Tj-154.2 -12  TD -0.0827  Tc 1.1327  Tw (at different levels of abstraction has been idiomatic even before) Tj0 -12  TD -0.2561  Tc 0.8561  Tw (support was added to ) Tj87.6 0  TD /F2 10.2  Tf-0.3867  Tc 0  Tw (Throwable) Tj52.2 0  TD /F4 10.2  Tf-0.2618  Tc 1.0718  Tw (, an implementation of this can) Tj-139.8 -12  TD 0.4011  Tc 0.4489  Tw (be found at ) Tj55.2 0  TD /F2 9  Tf0.5657  Tc 0  Tw (http://www.javaworld.com/javaworld/) Tj-55.2 -12  TD -0.0462  Tc (javatips/jw-javatip91.html) Tj139.2 0  TD /F4 10.2  Tf-0.1672  Tc 1.2172  Tw (.  So to be more idiomatic the) Tj-139.2 -12  TD -0.2916  Tc 0.0666  Tw (same approach should be taken within the original method.) Tj11.4 -12  TD -0.1393  Tc -0.0774  Tw (We can use a modified version of Hagger\222s solution, combining) Tj-11.4 -12  TD -0.0525  Tc 0.1025  Tw (this with nested ) Tj65.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (try) Tj18 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj2.4 0  TD /F2 10.2  Tf-0.12  Tc (finally) Tj45 0  TD /F4 10.2  Tf-0.0814  Tc -0.0686  Tw (blocks from the first solution and) Tj-130.8 -12  TD 0.0719  Tc 0.3781  Tw (nest the ) Tj35.4 0  TD /F2 10.2  Tf0.0185  Tc 0  Tw (SQLExceptions) Tj82.8 0  TD /F4 10.2  Tf0.1393  Tc 0.3107  Tw (using ) Tj25.8 0  TD /F2 10.2  Tf-0.0109  Tc 0  Tw (initCause\(\)) Tj67.8 0  TD /F4 10.2  Tf0.0235  Tc 0.4265  Tw (, if required.) Tj-211.8 -12  TD -0.1005  Tc 0.0705  Tw (Thus the original code is rewritten:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf-0.015  Tc 0.015  Tw (public static ArrayList foo\(Connection conn\)) Tj54 -12  TD 0  Tc 0  Tw (throws SQLException {) Tj-43.2 -12  TD (SQLException cachedException = null;) Tj0 -12  TD (ArrayList results = null;) TjT* (PreparedStatement ps = null;) TjT* (ResultSet rs = null;) TjT* 0 0 0 rg /F2 9  Tf(// assign query to ps) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(try {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf-0.0182  Tc 0.0182  Tw (// perform query and assign result to rs) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (try {) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(// process the results ) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (cachedException = ex;) Tj0 -12  TD (throw ex;) Tj-10.8 -12  TD (}) Tj0 -12  TD (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (rs.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (if\(cachedException != null\) {) Tj10.8 -12  TD (ex.initCause\(cachedException\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (cachedException = ex;) TjT* (throw ex;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (if\(cachedException != null\) {) Tj10.8 -12  TD (ex.initCause\(cachedException\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (cachedException = ex;) TjT* (throw ex;) Tj-10.8 -12  TD (}) Tj226.2 -19.8  TD 0 0 0 rg /F0 10.8  Tf-0.0048  Tc (11) Tj-218.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj57 0 obj9426endobj55 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F7 29 0 R >>/ProcSet 2 0 R>>/Contents 56 0 R>>endobj59 0 obj<</Length 60 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (12) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj25.2 -40.8  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (ps.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (if\(cachedException != null\) {) Tj10.8 -12  TD (ex.initCause\(cachedException\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (throw ex;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (return results;) Tj-10.8 -12  TD (}) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0984  Tc 0.5484  Tw (This solves the three problems of the original code, no exception) Tj0 -12  TD 0.1913  Tc 1.0087  Tw (is lost, the exception thrown is a  ) Tj152.4 0  TD /F2 10.2  Tf0.23  Tc 0  Tw (SQLException) Tj79.8 0  TD /F4 10.2  Tf0.1678  Tc 0.8822  Tw (and the) Tj-232.2 -12  TD /F2 10.2  Tf-0.0141  Tc 0  Tw (PreparedStatement) Tj107.4 0  TD /F4 10.2  Tf-0.0231  Tc 1.2445  Tw (is closed even if the attempt to close) Tj-107.4 -12  TD 0.0452  Tc 0.4048  Tw (the ) Tj15.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (ResultSet) Tj57.6 0  TD /F4 10.2  Tf-0.1451  Tc 0.7951  Tw (results in an ) Tj53.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (Exception) Tj54 0  TD /F4 10.2  Tf-0.0728  Tc 0.9228  Tw (.  Unfortunately this) Tj-180.6 -12  TD -0.0869  Tc 0.0569  Tw (isn\222t a general solution, the ) Tj111 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (initCause\(\)) Tj69 0  TD /F4 10.2  Tf-0.0922  Tc -0.0578  Tw (method is used to set) Tj-180 -12  TD -0.0131  Tc 0.4631  Tw (the cause of a ) Tj60 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (SQLException) Tj75 0  TD /F4 10.2  Tf-0.1637  Tc 0.8137  Tw (if an existing ) Tj57 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (SQLException) Tj-192 -12  TD /F4 10.2  Tf-0.0685  Tc -0.0815  Tw (had been caught, but ) Tj85.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (initCause\(\)) Tj68.4 0  TD /F4 10.2  Tf-0.0847  Tc -0.0653  Tw (has some restrictions:) Tj-136.2 -12  TD /F7 10.2  Tf0.0486  Tc 0  Tw (\223) Tj3.6 0  TD /F2 9  Tf0  Tc -0.2  Tw (public Throwable initCause\(Throwable cause\)) Tj-15 -12  TD /F7 10.2  Tf-0.0416  Tc 0.5936  Tw (Initializes the cause of this throwable to the specified value. \(The) Tj0 -12  TD -0.0384  Tc 0.4104  Tw (cause is the throwable that caused this throwable to get thrown.\)) TjT* -0.0891  Tc 0.2411  Tw (This method can be called at most once. It is generally called from) TjT* -0.0759  Tc -0.0471  Tw (within the constructor, or immediately after creating the throwable.) TjT* -0.109  Tc 0.361  Tw (If this throwable was created with ) Tj128.4 0  TD /F2 9  Tf0  Tc 0  Tw (Throwable\(Throwable\)) Tj110.4 0  TD /F7 10.2  Tf0.126  Tc (or) Tj-238.8 -12  TD /F2 9  Tf0.2889  Tc (Throwable\(String,Throwable\)) Tj153 0  TD /F7 10.2  Tf0.1529  Tc 0.2491  Tw (, this method cannot be) Tj-153 -12  TD -0.1185  Tc 0.0705  Tw (called even once.\224 [JDK14]) Tj-6 -12  TD /F4 10.2  Tf-0.0977  Tc 0.8144  Tw (This means that if the exceptions caught in the ) Tj196.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (finally) Tj45.6 0  TD /F4 10.2  Tf-0.2129  Tc (block) Tj-241.8 -12  TD -0.112  Tc 1.162  Tw (already have a cause then the ) Tj126.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (initCause\(\)) Tj69.6 0  TD /F4 10.2  Tf-0.0429  Tc 1.0929  Tw (method call will) Tj-196.2 -12  TD 0.1043  Tc 0.7457  Tw (fail with a ) Tj49.2 0  TD /F2 10.2  Tf0.151  Tc 0  Tw (java.lang.IllegalStateException) Tj193.8 0  TD /F4 10.2  Tf-0.4274  Tc 1.4774  Tw (.  To) Tj-243 -12  TD 0.0213  Tc 1.1787  Tw (explain further this example demonstrates how to provoke the) Tj0 -12  TD -0.0072  Tc 0  Tw (failure:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (void AnotherThrowingMethod\(\) {) Tj10.8 -12  TD (throw new RuntimeException\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (void ThrowingMethod\(\) {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (AnotherThrowingMethod\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(RuntimeException ex\) {) Tj10.8 -12  TD (throw new RuntimeException\(ex\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (void foo\(\) throws Exception {) Tj10.8 -12  TD (Exception cachedException = null;) Tj0 -12  TD (try {) Tj10.8 -12  TD (ThrowingMethod\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(Exception ex\) {) Tj10.8 -12  TD (cachedException = ex;) Tj0 -12  TD (throw ex;) Tj-10.8 -12  TD (}) Tj0 -12  TD (finally {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (ThrowingMethod\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(Exception ex\) {) Tj10.8 -12  TD (if\(cachedException != null\) {) Tj10.8 -12  TD (ex.initCause\(cachedException\);) Tj274.8 708  TD 0 0 0 rg /F2 9  Tf(// error: IllegalStateException ) Tj0 -12  TD (// Exception ex already has a cause) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(}) Tj0 -12  TD (throw ex;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.3849  Tc 0.7984  Tw (The idiomatic approach could be written to check for this) Tj0 -12  TD 0.6426  Tc 11.3074  Tw (situation, for example the handling of the) TjT* /F2 10.2  Tf-0.1553  Tc 0  Tw (PreparedStatement) Tj104.4 0  TD /F4 10.2  Tf-0.0685  Tc -0.0815  Tw (could become:) Tj-90.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (if\(ps != null\) {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (ps.close\(\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(SQLException ex\) {) Tj10.8 -12  TD (if\(ex.getCause\(\) == null\) {) Tj10.8 -12  TD (if\(cachedException != null\) {) Tj10.8 -12  TD (ex.initCause\(cachedException\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj0 -12  TD (throw ex;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0751  Tc 0.2524  Tw (But this will mean that the original exception is lost, as discussed) Tj0 -12  TD -0.0995  Tc 0.0352  Tw (above, making Hagger\222s approach better in this case.) Tj4.2 -18  TD /F0 12  Tf-0.0411  Tc 0  Tw (Summary) Tj-4.2 -18  TD /F4 10.2  Tf0.3245  Tc 0.8255  Tw (Handling exceptions thrown while in a ) Tj178.8 0  TD /F2 10.2  Tf0.3943  Tc 0  Tw (finally) Tj49.2 0  TD /F4 10.2  Tf0.3332  Tc 0.7168  Tw (block is) Tj-228 -12  TD -0.0789  Tc 1.0622  Tw (problematic in the context of an existing exception. This article) Tj0 -12  TD 0.0023  Tc 1.1677  Tw (has presented some approaches that solve at least some of the) TjT* -0.0772  Tc 1.1272  Tw (problems discovered in the example but no approach is entirely) TjT* 0.0159  Tc 1.1091  Tw (satisfactory.  For the example presented the idiomatic solution) TjT* -0.107  Tc 0.2142  Tw (works and is the best solution.  ) Tj10.8 -12  TD 0.044  Tc 0.406  Tw (In the wider context of a general solution each approach has) Tj-10.8 -12  TD -0.0446  Tc 0.4946  Tw (drawbacks or will not work, for example the idiomatic approach) Tj0 -12  TD -0.1063  Tc -0.1822  Tw (will fail if the exception being handled already has a cause.  Of the) TjT* 0.1882  Tc 0.2618  Tw (approaches presented I would use, in order of preference, the) TjT* -0.0901  Tc -0.2849  Tw (idiomatic version, then Hagger\222s approach \(if the exceptions being) TjT* 0.1459  Tc 0.3041  Tw (handled could already have a cause\).  I would resist using the) TjT* -0.0869  Tc 0.4702  Tw (approach in [Warren] as ignoring exceptions is a particularly bad) TjT* -0.0966  Tc 0.1181  Tw (idiom and should be avoided under any circumstances.) Tj190.2 -12  TD /F8 10.2  Tf-0.0453  Tc -0.3987  Tw (Tony Barrett-Powell) Tj-121.2 -12  TD /F2 9  Tf0  Tc 0  Tw (tony.barrett-powell@blueyonder.co.uk) Tj-64.8 -30  TD /F0 12  Tf0.012  Tc (Bibliography) Tj-4.2 -18  TD /F4 10.2  Tf-0.0023  Tc 0.2523  Tw ([Bloch] Joshua Bloch, ) Tj94.8 0  TD /F6 10.2  Tf-0.0114  Tc 0.4614  Tw (Effective Java - Programming Language) Tj-84 -12  TD 0.0542  Tc 0  Tw (Guide) Tj24.6 0  TD /F4 10.2  Tf-0.1176  Tc -0.0324  Tw (, Addison-Wesley 0-201-31005-8) Tj-35.4 -12  TD -0.0862  Tc -0.0638  Tw ([Eckel] Bruce Eckel, ) Tj86.4 0  TD /F6 10.2  Tf-0.0888  Tc 0.0888  Tw (Thinking in Java, 3rd Edition) Tj118.2 0  TD /F4 10.2  Tf-0.0812  Tc -0.0688  Tw (, Prentice-Hall) Tj-193.8 -12  TD -0.0661  Tc -0.0839  Tw (0-131-002872  ) Tj-10.8 -12  TD -0.106  Tc 0.356  Tw ([Griffiths] Alan Griffiths, \223More Exceptional Java,\224 ) Tj212.4 0  TD /F6 10.2  Tf-0.0125  Tc 0.4625  Tw (Overload 49) Tj-201.6 -12  TD /F4 10.2  Tf-0.1193  Tc -0.3307  Tw (and also available at ) Tj81 0  TD /F2 9  Tf-0.0375  Tc 0  Tw (http://www.octopull.demon.co.uk/) Tj-81 -12  TD 0  Tc (java/MoreExceptionalJava.html) Tj-10.8 -12  TD /F4 10.2  Tf-0.1071  Tc 0.1571  Tw ([Hagger] Peter Hagger, ) Tj96.6 0  TD /F6 10.2  Tf-0.1167  Tc 0.4167  Tw (Practical Java - Programming Language) Tj-85.8 -12  TD 0.0542  Tc 0  Tw (Guide) Tj24.6 0  TD /F4 10.2  Tf-0.1176  Tc -0.0324  Tw (, Addison-Wesley 0-201-61646-7) Tj-35.4 -12  TD 0.0443  Tc 0.4057  Tw ([JDK14] ) Tj39 0  TD /F2 9  Tf0.21  Tc 0  Tw (http://java.sun.com/j2se/1.4.2/docs/api/) Tj-28.2 -12  TD 0  Tc (java/lang/Throwable.html) Tj-10.8 -12  TD /F4 10.2  Tf-0.2509  Tc -0.1991  Tw ([Warren] Nigel Warren and Philip Bishop, ) Tj165 0  TD /F6 10.2  Tf-0.1354  Tc -0.4646  Tw (Java in Practice - Design) Tj-154.2 -12  TD 0.0028  Tc 0.4472  Tw (Styles and Idioms for Effective Java) Tj149.4 0  TD /F4 10.2  Tf-0.0523  Tc 0.2023  Tw (, Addison-Wesley 0-201-) Tj-149.4 -12  TD 0.0291  Tc 0  Tw (36065-9) TjETendstreamendobj60 0 obj9449endobj58 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font 61 0 R/ProcSet 2 0 R>>/Contents 59 0 R>>endobj61 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F7 29 0 R/F8 31 0 R>>endobj63 0 obj<</Length 64 0 R>>stream
BT552.6 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (13) Tj-215.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-294 -38.4  TD /F1 18  Tf0.0172  Tc 0.0788  Tw (ACCU Mentored Developers) Tj25.2 -20.4  TD -0.0018  Tc -0.2022  Tw (XML Project) Tj-25.2 -15  TD /F0 13.8  Tf0.14  Tc -0.046  Tw (Exercise 1: Validate XML) Tj15.6 -15  TD 0.1065  Tc 0.1875  Tw (Files and Display) Tj15.6 -15  TD 0.1342  Tc -0.4402  Tw (Element Structure) Tj-31.2 -12  TD /F0 10.2  Tf-0.15  Tc 0.096  Tw (by Paul Grenyer and Jez Higgins) Tj-13.8 -21  TD /F4 10.2  Tf-0.0821  Tc 1.2521  Tw (This article was originally written in December 2002 as part of) Tj0 -12  TD 0.6418  Tc 1.9682  Tw (the ACCU Mentored Developers [MDevelopers] XML) TjT* -0.0219  Tc 1.2969  Tw ([XMLRec] project. It has now been revised, with considerable) TjT* -0.0978  Tc 0.205  Tw (help from Jez Higgins, for publication in Overload.) Tj11.4 -12  TD 0.1394  Tc 0.3106  Tw (The first exercise set for the project students by the project) Tj-11.4 -12  TD -0.1229  Tc 0.3729  Tw (mentors was as follows:) Tj11.4 -12  TD 0.2567  Tc 6.3133  Tw (Incorporate either the Xerces[Xerces] or Microsoft) Tj-11.4 -12  TD -0.0825  Tc -0.0008  Tw (XML[MSXML] parsers into a C++ project and use it to:) Tj0 -12  TD -0.225  Tc 0  Tw (1.) Tj11.4 0  TD -0.1002  Tc -0.0498  Tw (Parse XML strings and files.) Tj-11.4 -12  TD -0.225  Tc 0  Tw (2.) Tj11.4 0  TD -0.1114  Tc 0.1328  Tw (Output the element structure as an indented tree.) Tj-11.4 -12  TD -0.1108  Tc 1.0408  Tw (As most of my development experience has been on Windows I) Tj0 -12  TD -0.1018  Tc 0.1518  Tw (followed the MSXML route.) Tj0 -18  TD /F0 12  Tf0.0166  Tc -0.0566  Tw (Downloading and Installing MSXML) TjT* /F4 10.2  Tf0.1745  Tc 1.1755  Tw (The MSXML parser can be downloaded from the Microsoft) Tj0 -12  TD 0.1251  Tc 0.1067  Tw (website. The latest version at the time of writing is version 4.0) TjT* 0.8722  Tc 2.1492  Tw (and requires the latest Windows installer, which is) TjT* 0.4278  Tc 0.965  Tw (incorporated into Windows XP and comes with Windows) TjT* 0.1027  Tc 0.4673  Tw (service pack 3. The installer can also be downloaded as single) TjT* 0.1135  Tc 0.3365  Tw (executable [InstMsi].) Tj11.4 -12  TD -0.1367  Tc -0.4133  Tw (Assuming the latest Windows Installer is present on your system) Tj-11.4 -12  TD -0.1642  Tc -0.4658  Tw (installing MSXML is simply a case of running the installer package.) Tj0 -12  TD -0.1071  Tc 0.5571  Tw (As MSXML is Component Object Model \(COM\) based this will) TjT* -0.0356  Tc 0.4856  Tw (register the MSXML dynamic link library \() Tj178.2 0  TD /F2 10.2  Tf-0.06  Tc 0  Tw (msxml4.dll) Tj60.6 0  TD /F4 10.2  Tf0.0785  Tc 0.3715  Tw (\). The) Tj-238.8 -12  TD -0.0734  Tc 0.2234  Tw (installer also creates a directory with all necessary files needed to) Tj0 -12  TD -0.0857  Tc 0.1357  Tw (use the parser in a C++ project.) Tj274.8 402.6  TD /F0 12  Tf-0.036  Tc -0.204  Tw (Testing MSXML) Tj0 -18.6  TD /F4 10.2  Tf-0.1797  Tc 0.2297  Tw (Although there are the usual Microsoft help files incorporated with) Tj0 -12  TD -0.2035  Tc 1.3626  Tw (MSXML there aren\222t any examples, so I used Google to try and) TjT* -0.1966  Tc 1.2466  Tw (find some and found the PerfectXML[PerfectXML] website. The) TjT* -0.2578  Tc 1.1878  Tw (website includes a number of MSXML C++ examples and one in) TjT* -0.198  Tc 0.348  Tw (particular, Using DOM [UsingDOM], that downloads an XML file) TjT* -0.1828  Tc 0.6828  Tw (from an Internet location, parses it, modifies it and writes it to the) TjT* -0.1799  Tc 0.3299  Tw (local hard disk. I used this example as a template for the following) TjT* -0.1916  Tc 0.0416  Tw (simple MSXML console application test program:) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 7.8  Tf0.12  Tc 0  Tw (#include <iostream>) Tj0 -12  TD (#include <string>) TjT* (#include <windows.h>) TjT* (#include <atlbase.h>) TjT* (#import "msxml4.dll") TjT* (int main\(\) {) Tj9.6 -12  TD 0.1057  Tc 0.0143  Tw (std::cout << "MSXML DOM: Simple Test 1: Creating") Tj14.4 -12  TD 0.1033  Tc 0.0167  Tw (<< " of COM object and parsing of XML.\\n\\n";) Tj-14.4 -12  TD 0.12  Tc 0  Tw (::CoInitialize\(0\);) Tj0 -12  TD ({) Tj9.6 -12  TD (MSXML2::IXMLDOMDocument2Ptr pXMLDoc = 0;) Tj0 -12  TD 0 0 0 rg /F2 7.8  Tf(// Create MSXML DOM object) TjT* 0.2 0.2 0.2 rg /F5 7.8  Tf(HRESULT hr = pXMLDoc.CreateInstance\() Tj72 -12  TD ("Msxml2.DOMDocument.4.0"\);) Tj-72 -12  TD (if \(SUCCEEDED\(hr\)\) {) Tj9.6 -12  TD 0 0 0 rg /F2 7.8  Tf(// Load the document synchronously) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 7.8  Tf(pXMLDoc->async = false;) TjT* (_variant_t varLoadResult\(\(bool\)false\);) TjT* (const std::string xmlFile\("poem.xml"\);) TjT* 0 0 0 rg /F2 7.8  Tf(// Load the XML document) TjT* 0.2 0.2 0.2 rg /F5 7.8  Tf-0.0667  Tc -0.1133  Tw (varLoadResult = pXMLDoc->load\(xmlFile.c_str\(\)\);) TjT* 0.12  Tc 0  Tw (if\(varLoadResult\) {) Tj7.8 -12  TD -0.08  Tc 0.1  Tw (std::cout << "Successfully loaded XML file: ") Tj46.2 -12  TD -0.072  Tc 0.0206  Tw (<< " file: " << xmlFile << "\\n";) Tj-54 -12  TD 0.12  Tc 0  Tw (}) TjET1 1 1 rg 29.4 61.2 538.2 301.8 re f0.9529 0.9529 0.9529 rg 30 61.8 537 300.6 re fBT33 350.4  TD0 0 0 rg /F0 12  Tf-0.034  Tc 0.094  Tw (An XML Mini-Glossary) Tj0 -24.6  TD /F10 10.2  Tf-0.1558  Tc 0  Tw (Attributes) Tj46.2 0  TD /F4 10.2  Tf-0.1125  Tc -0.1575  Tw (\226 XML elements can have attributes.  An attribute is a) Tj-35.4 -12  TD -0.0317  Tc 0.4817  Tw (name-value pair attach to the element\222s start tag.  Names are) Tj0 -12  TD -0.0429  Tc 0.4929  Tw (separated from their values by an equals sign, and values are) TjT* 0.1474  Tc 0.2426  Tw (enclosed in single or double quotes.  Attribute order is not) TjT* -0.0012  Tc 0  Tw (significant.) TjT* /F2 7.8  Tf-0.0447  Tc -0.4353  Tw (<bigbrain invented=\224SGML\224>Charles Goldfarb</bigbrain>) Tj-10.8 -12  TD /F10 10.2  Tf-0.1096  Tc 0  Tw (DOM) Tj26.4 0  TD /F4 10.2  Tf-0.0767  Tc -0.1483  Tw (\226 The Document Object Model is a W3C recommendation) Tj-15.6 -12  TD -0.1265  Tc -0.5235  Tw (which an application programming interface well-formed XML) Tj0 -12  TD 0.2721  Tc 1.3779  Tw (documents [DOMRec], defining the logical structure of) TjT* 0.2812  Tc 3.1688  Tw (documents and the way a document is accessed and) TjT* -0.0309  Tc 0.3809  Tw (manipulated. The DOM is defined in programming-language) TjT* -0.1437  Tc -0.2463  Tw (neutral terms.  This leads to some slightly clumsy looking code,) TjT* -0.0763  Tc -0.1283  Tw (but that aside the DOM is widely used \(if not necessarily well-) TjT* -0.0177  Tc 0.4677  Tw (loved\).  Its in-memory representation makes it well suited to) TjT* -0.0679  Tc 0.0179  Tw (document editing, navigation and data retrieval applications.) Tj-10.8 -12  TD /F10 10.2  Tf-0.1774  Tc 0  Tw (DTD) Tj24.6 0  TD /F4 10.2  Tf0.1117  Tc 0.2526  Tw (\226 Document Type Definition, the original XML schema) Tj-13.8 -12  TD -0.1456  Tc -0.4544  Tw (language described in the XML recommendation.  A Document) Tj0 -12  TD -0.0815  Tc 0.5315  Tw (Type Definition defines the legal building blocks of an XML) TjT* -0.0984  Tc -0.1116  Tw (document. It defines the document structure with a list of legal) TjT* -0.0778  Tc 0.0135  Tw (elements, each element\222s allowed content and so on.) Tj-10.8 -12  TD /F10 10.2  Tf-0.2382  Tc 0.0882  Tw (Elements & Tags) Tj74.4 0  TD /F4 10.2  Tf-0.1468  Tc 0.0968  Tw (\226 Here\222s a tiny XML document ) Tj-63.6 -12  TD /F2 9  Tf0  Tc 0  Tw (<bigbrain>Charles Golbfarb</bigbrain>) Tj271.8 276  TD /F4 10.2  Tf0.2576  Tc 0.5353  Tw (It consists of a single element named ) Tj167.4 0  TD /F2 9  Tf0.3  Tc 0  Tw (bigbrain) Tj49.2 0  TD /F4 10.2  Tf0.2678  Tc 0.7822  Tw (and the) Tj-216.6 -12  TD -0.0479  Tc 0.4979  Tw (element\222s content, the text string ) Tj136.8 0  TD /F2 9  Tf0  Tc 1.2  Tw (Charles Goldfarb) Tj88.2 0  TD /F4 10.2  Tf-0.1027  Tc 0.2527  Tw (.  The) Tj-225 -12  TD -0.0815  Tc 0.1886  Tw (element is delimited by the start tag ) Tj145.8 0  TD /F2 9  Tf0  Tc 0  Tw (<bigbrain>) Tj56.4 0  TD /F4 10.2  Tf-0.1247  Tc 0.2747  Tw (and the end) Tj-202.2 -12  TD -0.1548  Tc 0.0048  Tw (tag ) Tj14.4 0  TD /F2 9  Tf0  Tc 0  Tw (</bigbrain>) Tj59.4 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-85.2 -12  TD /F10 10.2  Tf0.0386  Tc (Valid) Tj29.4 0  TD /F4 10.2  Tf0.272  Tc 2.1494  Tw (\226 Documents which conform to a particular XML) Tj-18 -12  TD -0.0536  Tc -0.0964  Tw (application are said to be ) Tj103.2 0  TD /F6 10.2  Tf0  Tc 0  Tw (valid) Tj19.8 0  TD /F4 10.2  Tf-0.0981  Tc 0.1731  Tw (.  In the early days of XML \(all) Tj-123 -12  TD -0.1035  Tc 0.2263  Tw (of five years ago\) validity meant conforming to a DTD.  With) Tj0 -12  TD 0.1107  Tc 0.3393  Tw (the development and widespread adoption of other schema) TjT* -0.0807  Tc 0.5307  Tw (languages, valid has come to mean ) Tj145.2 0  TD /F6 10.2  Tf-0.1009  Tc 0.5509  Tw (valid to whatever schema) Tj-145.2 -12  TD -0.0903  Tc -0.0597  Tw (you happen to be using) Tj92.4 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (.) Tj-103.8 -12  TD /F10 10.2  Tf-0.1926  Tc (Well-formed) Tj55.8 0  TD /F4 10.2  Tf-0.1052  Tc -0.3448  Tw (\226 Not all, quite probably most, XML documents are) Tj-44.4 -12  TD -0.0936  Tc 0.4513  Tw (not valid, nor do they need to be.  However they are all ) Tj228.6 0  TD /F6 10.2  Tf0  Tc 0  Tw (well-) Tj-228.6 -12  TD -0.1161  Tc (formed) Tj28.8 0  TD /F4 10.2  Tf-0.0503  Tc 0.4403  Tw (.  An XML document is well-formed if it satisfies the) Tj-28.8 -12  TD -0.1686  Tc -0.3814  Tw (basic XML grammar \226 the elements are properly delimited, start) Tj0 -12  TD -0.1125  Tc 0.1471  Tw (and end tags match and so on.  A document which is not well-) TjT* -0.0634  Tc 0.5134  Tw (formed is like a C++ program with a missing semi-colon, no) TjT* -0.0964  Tc -0.0536  Tw (good for anything.) Tj-11.4 -12  TD /F10 10.2  Tf-0.1576  Tc 0.0076  Tw (XML Application) Tj78 0  TD /F4 10.2  Tf-0.1067  Tc 0.4233  Tw (\226 A set of XML elements and attributes for a) Tj-66.6 -12  TD -0.1787  Tc -0.1963  Tw (particular purpose \226 for instance DocBook, SVG, WSDL, Open) Tj0 -12  TD -0.0196  Tc 0.3839  Tw (Office file format \226 is called an ) Tj133.2 0  TD /F6 10.2  Tf0.0235  Tc 0.4265  Tw (XML application) Tj69.6 0  TD /F4 10.2  Tf-0.1798  Tc 0.6298  Tw (.  An XML) Tj-202.8 -12  TD 0.1115  Tc 0.3385  Tw (application is often expressed in one of the many available) Tj0 -12  TD 0.1744  Tc 4.2756  Tw (schema languages \226 DTD, XML Schema, RelaxNG,) TjT* 0.0188  Tc 0.2598  Tw (Schematron, etc.  An XML application is ) Tj174 0  TD /F6 10.2  Tf-0.1452  Tc 0  Tw (not) Tj16.2 0  TD /F4 10.2  Tf0.0186  Tc 0.4314  Tw (an application) Tj-190.2 -12  TD -0.0852  Tc 0.2352  Tw (which uses XML.) TjETq 29.4 363 m 29.4 61.2 l 567.6 61.2 l 567.6 363 l 30 362.4 m 30 61.8 l 567 61.8 l 567 362.4 l h W* n 29.4 61.2 538.2 301.8 re fQ endstreamendobj64 0 obj11081endobj62 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font 67 0 R/ProcSet 2 0 R>>/Contents 63 0 R>>endobj67 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F10 65 0 R>>endobj69 0 obj<</Length 70 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (14) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj43.2 -40.8  TD 0.2 0.2 0.2 rg /F5 7.8  Tf0.12  Tc 0  Tw (else {) Tj9.6 -12  TD (std::cout << "Failed to load XML file: " ) Tj48 -12  TD (<< xmlFile << "\\n";) Tj-48 -12  TD 0 0 0 rg /F2 7.8  Tf(// Get parseError interface) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 7.8  Tf(MSXML2::IXMLDOMParseErrorPtr pError = 0;) TjT* (if\(SUCCEEDED\(pXMLDoc->get_parseError\() Tj144 -12  TD (&pError\)\)\) {) Tj-134.4 -12  TD (USES_CONVERSION;) Tj0 -12  TD (std::cout << "Error: " ) Tj48 -12  TD (<< W2A\(pError->reason\) << "\\n";) Tj-57.6 -12  TD (}) Tj-9.6 -12  TD (}) Tj-9.6 -12  TD (}) Tj0 -12  TD (else {) Tj9.6 -12  TD (std::cout << "Failed to create MS XML COM ") Tj48 -12  TD (<< "object.\\n";) Tj-57.6 -12  TD (}) Tj-9.6 -12  TD (}) Tj0 -12  TD (::CoUninitialize\(\);) TjT* (return 0;) Tj-9.6 -12  TD (}) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf-0.1186  Tc 0.2352  Tw (This program takes the following XML file and parses it:) Tj14.4 -12  TD /F2 9  Tf0  Tc 0  Tw (<?xml version="1.0" encoding="UTF-8"?>) Tj0 -12  TD (<poem>) Tj10.8 -12  TD (<line>Roses are red,</line> ) Tj0 -12  TD (<line>Violets are blue.</line> ) TjT* (<line>Sugar is sweet,</line> ) TjT* (<line>and I love you</line>) Tj-10.8 -12  TD (</poem>) Tj-14.4 -12  TD /F4 10.2  Tf0.1104  Tc 1.0596  Tw (If the parse fails an error message is written to ) Tj208.2 0  TD /F2 10.2  Tf0.1467  Tc 0  Tw (std::cout) Tj-208.2 -12  TD /F4 10.2  Tf0.0408  Tc 0.2092  Tw (giving the reason. Although this code snippet does the intended) Tj0 -12  TD 0.0582  Tc 0.8072  Tw (job, it is a bit rough and needs some work in order to achieve) TjT* 0.2374  Tc 1.1459  Tw (the objective of this exercise. Among other things it would) TjT* 0.0392  Tc 0.7108  Tw (benefit from wrapping of MSXML and some proper exception) TjT* 0.15  Tc 0  Tw (handling.) Tj11.4 -12  TD -0.1136  Tc -0.1864  Tw (It is worth noting ) Tj69.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (#import) Tj44.4 0  TD /F4 10.2  Tf-0.1277  Tc -0.3823  Tw (is specific to Microsoft Visual C++) Tj-125.4 -12  TD -0.0795  Tc -0.0705  Tw (and is not supported by other Win32 compilers. ) Tj0 -18  TD /F0 12  Tf0.0147  Tc -0.0547  Tw (Engineering the Exercise Solution:) Tj22.2 -12  TD 0.0168  Tc -0.2568  Tw (Part 1) Tj-22.2 -18  TD /F4 10.2  Tf-0.0789  Tc 0.8789  Tw (I\222m going to look at the exercise solution in two parts. The first) Tj0 -12  TD -0.132  Tc 0.4487  Tw (part will reengineer the PerfectXML example into a more general) TjT* 0.1678  Tc 1.1822  Tw (solution with a clean interface, proper runtime handling and) TjT* 0.2028  Tc 0.8472  Tw (exception handling. The second part will look at writing the) TjT* -0.0843  Tc 0.0843  Tw (element structure to a stream.) Tj0 -18  TD /F0 12  Tf0.0084  Tc -0.2484  Tw (COM Runtime) TjT* /F4 10.2  Tf-0.0283  Tc 1.0783  Tw (As MSXML is COM based, the COM runtime must be started) Tj0 -12  TD -0.3175  Tc 1.3675  Tw (before any COM objects can be instantiated. The COM runtime is) TjT* -0.2548  Tc 0.9048  Tw (started by the ) Tj57.6 0  TD /F2 10.2  Tf-0.3343  Tc 0  Tw (CoInitializeEx) Tj83.4 0  TD /F4 10.2  Tf-0.281  Tc 1.331  Tw (API function and stopped with) Tj-141 -12  TD /F2 10.2  Tf0.6086  Tc 0  Tw (CoUninitialize) Tj93.6 0  TD /F4 10.2  Tf0.4577  Tc 4.1923  Tw (. MSDN states that every call to) Tj-93.6 -12  TD /F2 10.2  Tf0.6086  Tc 0  Tw (CoInitializeEx) Tj102 0  TD /F4 10.2  Tf0.4628  Tc 5.3872  Tw (must be matched by a call to) Tj-102 -12  TD /F2 10.2  Tf-0.3343  Tc 0  Tw (CoUninitialize) Tj81 0  TD /F4 10.2  Tf-0.32  Tc 0.17  Tw (, even if ) Tj33 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (CoInitializeEx) Tj82.8 0  TD /F4 10.2  Tf-0.2524  Tc 0.1024  Tw (fails. ) Tj-185.4 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (CoUninitialize) Tj87 0  TD /F4 10.2  Tf-0.0636  Tc 0.3422  Tw (must not be called until all COM objects) Tj-98.4 -12  TD -0.0891  Tc 0.2664  Tw (have been released. For instance in the example above there is an) Tj0 -12  TD 0.2385  Tc 5.5365  Tw (extra scope wrapping the MSXML code so that the) TjT* /F2 10.2  Tf0.1642  Tc 0  Tw (IXMLDOMDocument2Ptr) Tj121.8 0  TD /F4 10.2  Tf0.1141  Tc 0.3359  Tw (smart pointer destructor is called,) Tj-121.8 -12  TD -0.1011  Tc 0.1011  Tw (destroying the DOM, before ) Tj115.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (CoUninitialize) Tj86.4 0  TD /F4 10.2  Tf-0.079  Tc -0.071  Tw (is called.) Tj-190.8 -12  TD 0.4466  Tc 0.1834  Tw (The easiest way to achieve this, even in the presence of) Tj-11.4 -12  TD 0.4554  Tc 0.2946  Tw (exceptions, is to take advantage of C++\222s RAII \(Resource) Tj275.4 708  TD 0.0904  Tc 0.2396  Tw (Acquisition Is Initialization\) and place ) Tj165 0  TD /F2 10.2  Tf0.0943  Tc 0  Tw (CoInitialiseEx) Tj90.6 0  TD /F4 10.2  Tf0.2322  Tc (in) Tj-255.6 -12  TD 0.4425  Tc 0.7075  Tw (the constructor of a class and ) Tj140.4 0  TD /F2 10.2  Tf0.5229  Tc 0  Tw (CoUninitialize) Tj97.2 0  TD /F4 10.2  Tf0.24  Tc 1.41  Tw (in the) Tj-237.6 -12  TD 0.041  Tc 0.359  Tw (destructor and to create an instance of the class on the stack, at) Tj0 -12  TD 0.4897  Tc 4.7603  Tw (the beginning of the program before anything else.) TjT* /F2 10.2  Tf0.3086  Tc 0  Tw (COMRuntimeInit) Tj90 0  TD /F4 10.2  Tf0.2479  Tc 0.3521  Tw (, shown below, is just such a class. The) Tj-90 -12  TD 0.075  Tc -0.3107  Tw (copy constructor and copy-assignment operator are both private) Tj0 -12  TD 0.3428  Tc 0.0215  Tw (and undefined, to prevent copying.  A ) Tj172.2 0  TD /F2 10.2  Tf0.4371  Tc 0  Tw (COMRuntimeInit) Tj-172.2 -12  TD /F4 10.2  Tf0.1324  Tc -0.2824  Tw (object has no state and therefore it does not make sense to copy) Tj0 -12  TD 0.2515  Tc 0.2585  Tw (it. This method of preventing copying and some more of the) TjT* 0.1989  Tc 0.5844  Tw (reasons behind it are discussed by Scott Meyers in Effective) TjT* 0.1207  Tc 0  Tw (C++[EC++].) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 7.8  Tf0.12  Tc (#include <stdexcept>) Tj0 -12  TD (#include <string>) TjT* (#include <windows.h>) TjT* (class COMRuntimeInit {) TjT* (public:) Tj9.6 -12  TD (COMRuntimeInit\(\) {) Tj9.6 -12  TD (HRESULT hr = ::CoInitializeEx\(0,) Tj100.8 -12  TD (COINIT_APARTMENTTHREADED\);) Tj-100.8 -12  TD (if\(FAILED\(hr\)\) {) Tj9.6 -12  TD (UnInitialize\(\);) Tj0 -12  TD (std::string errorMsg = "Failed to start COM ") Tj110.4 -12  TD ("Runtime: ";) Tj-110.4 -12  TD (switch\(hr\) {) Tj9.6 -12  TD (case E_INVALIDARG:) Tj9.6 -12  TD (errorMsg += "An invalid parameter was ") Tj57.6 -12  TD ("passed to the returning ") Tj0 -12  TD ("function.";) Tj-57.6 -12  TD (break;) Tj-9.6 -12  TD (case E_OUTOFMEMORY:) Tj9.6 -12  TD (errorMsg += "Out of memory.";) Tj0 -12  TD (break;) Tj-9.6 -12  TD (case E_UNEXPECTED:) Tj9.6 -12  TD (errorMsg += "Unexpected error.";) Tj0 -12  TD (break;) Tj-9.6 -12  TD (case S_FALSE:) Tj9.6 -12  TD (errorMsg += "The COM library is already ") Tj57.6 -12  TD ("initialized on this ") Tj0 -12  TD ("thread.";) Tj-57.6 -12  TD (break;) Tj-9.6 -12  TD (default:) Tj9.6 -12  TD (errorMsg += "Unknown.";) Tj0 -12  TD (break;) Tj-19.2 -12  TD (}) Tj0 -12  TD (throw std::runtime_error\(errorMsg\);) Tj-9.6 -12  TD (}) Tj-9.6 -12  TD (}) Tj0 -12  TD (~COMRuntimeInit\(\) {) Tj9.6 -12  TD (UnInitialize\(\);) Tj-9.6 -12  TD (}) Tj-9.6 -12  TD (private:) Tj9.6 -12  TD (void UnInitialize\(\) const {) Tj9.6 -12  TD (::CoUninitialize\(\);) Tj-9.6 -12  TD (}) Tj0 -12  TD (COMRuntimeInit\(const COMRuntimeInit&\);) TjT* (COMRuntimeInit& operator=\(const COMRuntimeInit&\);) Tj-9.6 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.5734  Tc 4.2766  Tw (There are of course times when the initial call to) Tj0 -12  TD /F2 10.2  Tf0.0086  Tc 0  Tw (CoInitialiseEx) Tj89.4 0  TD /F4 10.2  Tf-0.0059  Tc 1.2059  Tw (may fail. The cause of the failure can be) Tj-89.4 -12  TD -0.2  Tc 0.05  Tw (ascertained from its return value. The obvious way to communicate) TjETendstreamendobj70 0 obj8095endobj68 0 obj<</Type /Page/Parent 47 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 69 0 R>>endobj73 0 obj<</Length 74 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf-0.1963  Tc 0.4321  Tw (the cause of the failure to the user is via an exception. This has the) Tj0 -12  TD 0.5648  Tc 0.4852  Tw (drawback that the destructor will not be called when the) TjT* 0.0278  Tc 0.7222  Tw (constructor throws and therefore ) Tj140.4 0  TD /F2 10.2  Tf0.0943  Tc 0  Tw (CoUninitialize) Tj90 0  TD /F4 10.2  Tf0.0887  Tc 0.9613  Tw (must be) Tj-230.4 -12  TD 0.1998  Tc 0.7002  Tw (called manually. For now ) Tj115.2 0  TD /F2 10.2  Tf0.2467  Tc 0  Tw (std::runtime_error) Tj118.2 0  TD /F4 10.2  Tf0.25  Tc 0.8  Tw (will be) Tj-233.4 -12  TD -0.119  Tc 0.569  Tw (thrown when ) Tj57 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (CoInitializeEx) Tj87.6 0  TD /F4 10.2  Tf-0.0412  Tc 1.0912  Tw (fails, later on we\222ll look at a) Tj-144.6 -12  TD -0.202  Tc 0.052  Tw (custom exception type. ) Tj11.4 -12  TD 0.1705  Tc 0.2795  Tw (As stated above, the ) Tj89.4 0  TD /F2 10.2  Tf0.2229  Tc 0  Tw (COMRuntimeInit) Tj91.2 0  TD /F4 10.2  Tf0.2219  Tc 0.2281  Tw (instance must be) Tj-192 -12  TD -0.1013  Tc 0.0113  Tw (declared before any other object on the stack. The instance cannot) Tj0 -12  TD -0.1682  Tc -0.3818  Tw (be put at file scope as it throws an exception if it fails, so the obvious) TjT* -0.0757  Tc 0.4257  Tw (place is at the top of ) Tj86.4 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (main) Tj24.6 0  TD /F4 10.2  Tf-0.2338  Tc 0.0838  Tw (\222s scope. A ) Tj46.8 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (try) Tj18.6 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj2.4 0  TD /F2 10.2  Tf0.12  Tc (catch) Tj33.6 0  TD /F4 10.2  Tf-0.0273  Tc 0.4773  Tw (block is also) Tj-212.4 -12  TD -0.0806  Tc -0.0694  Tw (needed to detect the failure.) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (#include <iostream>) Tj0 -12  TD (#include "comruntimeinit.h") TjT* (int main\(\) {) Tj10.8 -12  TD (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\( const std::runtime_error& e\) {) Tj10.8 -12  TD (std::cout << e.what\(\) << "\\n";) Tj-10.8 -12  TD (}) Tj0 -12  TD (return 0;) Tj-10.8 -12  TD (}) Tj-13.8 -18  TD 0 0 0 rg /F0 12  Tf-0.029  Tc -0.011  Tw (Instantiating the MSXML DOM) Tj0 -18  TD /F4 10.2  Tf-0.0829  Tc 1.1875  Tw (Code that uses COM, as with most Microsoft API code, is just) Tj0 -12  TD 0.2738  Tc 0.9095  Tw (plain ugly and really should be hidden behind an interface.) TjT* -0.1029  Tc 0.3347  Tw (Exercise 1 of the XML project states that either the Xerces parser) TjT* -0.087  Tc 0.5915  Tw (or the MSXML parser can be used. Ideally they should be easily) TjT* -0.0468  Tc 1.1718  Tw (interchangeable and their use completely hidden from the user.) TjT* 0.6239  Tc 2.8261  Tw (Hiding the ugly code) Tj0  Tc 0.45  Tw ( ) Tj112.8 0  TD /F6 10.2  Tf0.5  Tc 0  Tw (and) Tj23.4 0  TD /F4 10.2  Tf0.666  Tc 2.784  Tw (making the parsers easily) Tj-136.2 -12  TD 0.4207  Tc 0.7043  Tw (interchangeable can be achieved with the Pimpl Idiom, as) Tj0 -12  TD -0.0757  Tc 0.0115  Tw (discussed by Herb Sutter in Exceptional C++ [ExC++].) Tj11.4 -12  TD -0.0175  Tc 0.4675  Tw (The first stage in the exercise is to create the MSXML DOM) Tj-11.4 -12  TD -0.1005  Tc 0.0362  Tw (parser. This is achieved with the DOM class:) Tj13.8 -16.2  TD /F2 9  Tf0  Tc 0  Tw (// dom.h) Tj0 -12  TD (// Forward declaration so that implementation ) TjT* (// can be completely hidden.) Tj0 -19.8  TD 0.2 0.2 0.2 rg /F5 9  Tf(class DOMImpl;) Tj0 -12  TD (class DOM {) TjT* (private:) Tj10.8 -12  TD (DOMImpl *impl_;) Tj-10.8 -12  TD (public:) Tj10.8 -12  TD (DOM\(\);) Tj0 -12  TD (~DOM\(\);) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (DOM\(const DOM&\);) Tj0 -12  TD (DOM& operator=\(const DOM&\);) Tj-10.8 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.087  Tc 0.537  Tw (The ) Tj18.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOM) Tj20.4 0  TD /F4 10.2  Tf-0.0622  Tc 0.4372  Tw (class will form a basic wrapper for the ) Tj160.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOMImpl) Tj45 0  TD /F4 10.2  Tf-0.0058  Tc (class) Tj-244.2 -12  TD -0.0262  Tc 1.0762  Tw (which will do all the work.  ) Tj121.8 0  TD /F2 10.2  Tf-0.0343  Tc 0  Tw (DOMImpl) Tj46.2 0  TD /F4 10.2  Tf-0.0326  Tc 1.2826  Tw (is forward declared, so) Tj-168 -12  TD -0.0978  Tc 0.0478  Tw (that its implementation can be completely hidden.) Tj11.4 -12  TD -0.087  Tc -0.063  Tw (The ) Tj18.6 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (DOM) Tj21.6 0  TD /F4 10.2  Tf0.0569  Tc 0.3931  Tw (class implementation is shown below. It creates an) Tj-51.6 -12  TD -0.122  Tc -0.428  Tw (instance of the ) Tj58.8 0  TD /F2 10.2  Tf-0.17  Tc 0  Tw (DOMImplclass) Tj73.2 0  TD /F4 10.2  Tf-0.0836  Tc -0.5664  Tw (on the heap in the constructor and) Tj-132 -12  TD -0.1175  Tc 0.1175  Tw (deletes it in the destructor.) Tj13.8 -12  TD /F2 9  Tf0  Tc 0  Tw (// dom.cpp) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(#include "dom.h") TjT* (#include "domimpl.h") TjT* (DOM::DOM\(\) : impl_\(new DOMImpl\) {}) TjT* (DOM::~DOM\(\) { delete impl_; }) Tj261 708  TD 0 0 0 rg /F2 10.2  Tf-0.12  Tc (DOMImpl) Tj45 0  TD /F4 10.2  Tf-0.1092  Tc 0.8259  Tw (creates the MSXML DOM parser in the same way as) Tj-45 -12  TD -0.0861  Tc -0.0639  Tw (the PerfectXML example:) Tj14.4 -16.2  TD /F2 9  Tf0  Tc 0  Tw (// domimpl.h) Tj0 -19.8  TD 0.2 0.2 0.2 rg /F5 9  Tf(#import "msxml4.dll") Tj0 -12  TD (class DOMImpl {) TjT* (private:) Tj10.8 -12  TD (MSXML2::IXMLDOMDocument2Ptr xmlDoc_;) Tj-10.8 -12  TD (public:) Tj10.8 -12  TD (DOMImpl\(\) : xmlDoc_\(0\) {) Tj10.8 -12  TD (xmlDoc_.CreateInstance\() Tj86.4 -12  TD -0.0231  Tc ("Msxml2.DOMDocument.4.0"\);) Tj-97.2 -12  TD 0  Tc (}) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (DOMImpl\(const DOMImpl&\);) Tj0 -12  TD (DOMImpl& operator=\(const DOMImpl&\);) Tj-10.8 -12  TD (};) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf0.1403  Tc 0.3097  Tw (Both ) Tj24 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (DOM) Tj22.8 0  TD /F4 10.2  Tf0.0904  Tc 0.3596  Tw (and ) Tj18.6 0  TD /F2 10.2  Tf0.2229  Tc 0  Tw (DOMImpl) Tj47.4 0  TD /F4 10.2  Tf0.1201  Tc 1.2299  Tw (have private copy constructors and) Tj-112.8 -12  TD -0.1058  Tc 0.1558  Tw (copy assignment operators, again to prevent copying.) Tj11.4 -12  TD 0.281  Tc 0.289  Tw (The above code does not include any error checking. It is) Tj-11.4 -12  TD 0.2671  Tc 2.8829  Tw (possible for the call to) Tj0  Tc 0.45  Tw ( ) Tj114.6 0  TD /F2 10.2  Tf0.3086  Tc 0  Tw (CreateInstance) Tj95.4 0  TD /F4 10.2  Tf0.2657  Tc 2.8843  Tw (to fail. The) Tj-210 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (msxml4.dll) Tj62.4 0  TD /F4 10.2  Tf-0.0797  Tc -0.2203  Tw (may not be registered, for example. The success or) Tj-62.4 -12  TD -0.1652  Tc 0.0152  Tw (failure of the ) Tj52.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (CreateInstance) Tj85.8 0  TD /F4 10.2  Tf-0.0964  Tc -0.4536  Tw (call can be detected by its return) Tj-138 -12  TD -0.1072  Tc -0.0428  Tw (value. ) Tj14.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (DOMImpl\(\) : xmlDoc_\(0\) {) Tj10.8 -12  TD (HRESULT hr = xmlDoc_.CreateInstance\() Tj91.8 -12  TD -0.0231  Tc ("Msxml2.DOMDocument.4.0"\);) Tj-91.8 -12  TD 0  Tc (if\(FAILED\(hr\)\) {) Tj10.8 -12  TD -0.0171  Tc 0.0171  Tw (std::string errorMsg = "Failed to start ") Tj124.2 -12  TD -0.0462  Tc 0.0462  Tw ("create MSXML ") Tj0 -12  TD 0  Tc 0  Tw ("DOM: ";) Tj-124.2 -12  TD (switch\(hr\) {) Tj10.8 -12  TD (case CO_E_NOTINITIALIZED:) Tj10.8 -12  TD -0.02  Tc 0.02  Tw (errorMsg += "CoInitialize has not ") Tj64.8 -12  TD 0  Tc 0  Tw ("been called.";) Tj-64.8 -12  TD (break;) Tj-10.8 -12  TD (case CO_E_CLASSSTRING:) Tj10.8 -12  TD -0.0188  Tc 0.0188  Tw (errorMsg += "Invalid class string.";) Tj0 -12  TD 0  Tc 0  Tw (break;) Tj-10.8 -12  TD (case REGDB_E_CLASSNOTREG:) Tj10.8 -12  TD -0.0207  Tc 0.0207  Tw (errorMsg += "A specified class is ") Tj64.8 -12  TD 0  Tc 0  Tw ("not registered.") Tj-64.8 -12  TD (break;) Tj-10.8 -12  TD (case CLASS_E_NOAGGREGATION:) Tj10.8 -12  TD -0.0207  Tc 0.0207  Tw (errorMsg += "This class cannot be ") Tj64.8 -12  TD 0  Tc -0.12  Tw ("created as part of an ") Tj0 -12  TD 0  Tw ("aggregate.";) Tj-64.8 -12  TD (break;) Tj-10.8 -12  TD (case E_NOINTERFACE:) Tj10.8 -12  TD -0.0207  Tc 0.0207  Tw (errorMsg += "The specified class ") Tj64.8 -12  TD 0  Tc -0.15  Tw ("does not implement the ") Tj0 -12  TD -0.0286  Tc 0.0286  Tw ("requested interface";) Tj-64.8 -12  TD 0  Tc 0  Tw (break;) Tj-10.8 -12  TD (default:) Tj10.8 -12  TD (errorMsg += "Unknown error.";) Tj0 -12  TD (break;) Tj-21.6 -12  TD (}) Tj0 -12  TD (throw std::runtime_error\(errorMsg \);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj234 -19.8  TD 0 0 0 rg /F0 10.8  Tf0.0912  Tc (15) Tj-215.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj74 0 obj8891endobj71 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 73 0 R>>endobj76 0 obj<</Length 77 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (16) Tj0 734.4  TD /F0 12  Tf0.0229  Tc (NonCopyable) Tj0 -18.6  TD /F4 10.2  Tf-0.0799  Tc 1.2499  Tw (We now have three classes which are \223copy prevented\224, with a) Tj0 -12  TD -0.0992  Tc 0.0826  Tw (private copy constructor and copy assignment operator. There is a) TjT* -0.0786  Tc 0.2055  Tw (clearer way to document the fact that a class is not intended to be) TjT* 0.2931  Tc 0.8769  Tw (copied. When used by a number of different classes it also) TjT* -0.0313  Tc -0.1187  Tw (reduces the amount of code.) Tj11.4 -12  TD 0.113  Tc 0.337  Tw (The ) Tj19.8 0  TD /F2 10.2  Tf0.0982  Tc 0  Tw (NonCopyable) Tj72 0  TD /F4 10.2  Tf0.1074  Tc 0.5426  Tw (class, show below, has a private copy) Tj-103.2 -12  TD 0.0494  Tc -0.3708  Tw (constructor and assignment operator to prevent prevent copying.) Tj0 -12  TD 0.0713  Tc 0.6187  Tw (When another class inherits from ) Tj144.6 0  TD /F2 10.2  Tf0.1527  Tc 0  Tw (NonCopyable) Tj68.4 0  TD /F4 10.2  Tf0.0964  Tc 0.6536  Tw (, the private) Tj-213 -12  TD 0.2485  Tc 0.373  Tw (copy constructor and assignment operator are also inherited.) Tj0 -12  TD 0.4643  Tc 2.1607  Tw (This both prevents the subclass from being copied and) TjT* 0.457  Tc 7.073  Tw (documents the intention. The relationship between) TjT* /F2 10.2  Tf0.0982  Tc 0  Tw (NonCopyable) Tj72 0  TD /F4 10.2  Tf0.078  Tc 0.672  Tw (and its subclass is not IS-A and therefore the) Tj-72 -12  TD 0.1342  Tc -0.1342  Tw (inheritance can be private. ) Tj11.4 -12  TD 0.0339  Tc -0.1839  Tw (As ) Tj14.4 0  TD /F2 10.2  Tf0.1527  Tc 0  Tw (NonCopyable) Tj70.8 0  TD /F4 10.2  Tf0.1327  Tc -0.1827  Tw (is intended only to provide behaviour to) Tj-96.6 -12  TD 0.2271  Tc 0.4537  Tw (a derived class, rather than act as a class in its own right, its) Tj0 -12  TD 0.4638  Tc 6.5862  Tw (default constructor is protected, preventing a free) TjT* /F2 10.2  Tf0.4255  Tc 0  Tw (NonCopyable) Tj75 0  TD /F4 10.2  Tf0.3166  Tc 0.562  Tw (object being created.  Its destructor too, is) Tj-75 -12  TD 0.2394  Tc 0.2706  Tw (protected to prevent a subclass being deleted via a pointer to) Tj0 -12  TD /F2 10.2  Tf0.5345  Tc 0  Tw (NonCopyable) Tj73.2 0  TD /F4 10.2  Tf0.4546  Tc 0.8526  Tw (.  To further document this intention, the) Tj-73.2 -12  TD 0.1387  Tc 0.1113  Tw (destructor is not virtual.) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class NonCopyable {) Tj0 -12  TD (protected:) Tj10.8 -12  TD (NonCopyable\(\) {}) Tj0 -12  TD (~NonCopyable\(\) {}) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (NonCopyable\(const NonCopyable&\);) Tj0 -12  TD (NonCopyable& operator=\(const NonCopyable&\);) Tj-10.8 -12  TD (};) Tj-14.4 -19.8  TD 0 0 0 rg /F4 10.2  Tf-0.087  Tc -0.063  Tw (The ) Tj18 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NonCopyable) Tj69 0  TD /F4 10.2  Tf-0.1197  Tc 0.1411  Tw (class was written by Dave Abrahams for the) Tj-87 -12  TD 0.7087  Tc 0.6413  Tw (boost [boost] library. I have recreated it here so that a) Tj0 -12  TD -0.106  Tc 0.156  Tw (dependency on the boost library is avoided.) Tj11.4 -12  TD 0.2807  Tc 0.9693  Tw (Now that the ) Tj63 0  TD /F2 10.2  Tf0.3164  Tc 0  Tw (NonCopyable) Tj74.4 0  TD /F4 10.2  Tf0.277  Tc 1.373  Tw (class is in place the copy) Tj-148.8 -12  TD 0.2691  Tc 0.5238  Tw (constructors and assignment operators can be removed from) Tj0 -12  TD /F2 10.2  Tf0.2657  Tc 0  Tw (COMRuntimeInit) Tj90 0  TD /F4 10.2  Tf0.45  Tc (, ) Tj6 0  TD /F2 10.2  Tf0.48  Tc (DOM) Tj22.8 0  TD /F4 10.2  Tf0.2904  Tc 0.1596  Tw (and ) Tj18.6 0  TD /F2 10.2  Tf0.2229  Tc 0  Tw (DOMImpl) Tj45 0  TD /F4 10.2  Tf0.2956  Tc 0.3044  Tw (. They can then be) Tj-182.4 -12  TD -0.0567  Tc -0.0933  Tw (changed to privately inherit from ) Tj135 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (NonCopyable) Tj66 0  TD /F4 10.2  Tf-0.15  Tc (. ) Tj-186.6 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class COMRuntimeInit : private NonCopyable {) Tj10.8 -12  TD (...) Tj-10.8 -12  TD (};) Tj0 -24  TD (class DOM : private NonCopyable {) Tj10.8 -12  TD (...) Tj-10.8 -12  TD (};) Tj0 -24  TD (class DOMImpl : private NonCopyable {) Tj10.8 -12  TD (...) Tj-10.8 -12  TD (};) Tj-14.4 -18  TD 0 0 0 rg /F0 12  Tf0.0037  Tc -0.0937  Tw (Loading and Validating the XML) Tj0 -18  TD /F4 10.2  Tf-0.1348  Tc 0.6393  Tw (The MSXML DOM has a method that loads and parses an XML) Tj0 -12  TD -0.0663  Tc 1.1625  Tw (file. While parsing the file it is checked to make sure it is well) TjT* 0.1996  Tc 1  Tw (formed and if there is a DTD or Schema specified it is also) TjT* 0.1219  Tc 1.0372  Tw (validated. If the file cannot be opened, is not well formed or) TjT* -0.0908  Tc 0.0608  Tw (cannot be validated the call fails.) Tj11.4 -12  TD -0.0836  Tc -0.0664  Tw (The method is called ) Tj85.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (load) Tj26.4 0  TD /F4 10.2  Tf-0.086  Tc -0.064  Tw (and takes a single parameter which) Tj-123.6 -12  TD -0.1123  Tc 0.2823  Tw (is the full path to the XML file. To load and parse an XML file, a) Tj0 -12  TD 0.0314  Tc 0.3186  Tw (similar method can be added to ) Tj133.8 0  TD /F2 10.2  Tf-0.0343  Tc 0  Tw (DOMImpl) Tj46.2 0  TD /F4 10.2  Tf-0.0125  Tc 0.4625  Tw (and a corresponding) Tj-180 -12  TD -0.0723  Tc -0.0777  Tw (forwarding function added to ) Tj119.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOM) Tj18 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj151.8 708  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class DOMImpl : private NonCopyable {) Tj0 -12  TD (public:) Tj10.8 -12  TD (...) Tj0 -12  TD (void Load\(const std::string& fullPath\) {) Tj10.8 -12  TD (xmlDoc_->load\(fullPath.c_str\(\)\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F2 10.2  Tf-0.12  Tc (main) Tj26.4 0  TD /F4 10.2  Tf-0.0514  Tc 0.0105  Tw (can then be modified to call the new function with the path) Tj-26.4 -12  TD -0.2479  Tc 0.4979  Tw (to an XML file.) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj0 -12  TD (DOM dom;) TjT* (dom.Load\("poem.xml"\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(const std::runtime_error& e\) {) Tj10.8 -12  TD (std::cout << e.what\(\) << "\\n";) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.235  Tc 0.335  Tw (Once again there is no way of detecting failure and the return value) Tj0 -12  TD -0.3201  Tc 0.4701  Tw (of the MSXML DOM ) Tj88.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (load) Tj26.4 0  TD /F4 10.2  Tf-0.212  Tc 0.287  Tw (method must be tested to find out if it) Tj-115.2 -12  TD -0.1919  Tc 0.0419  Tw (failed. If a failure has occurred an exception should be thrown.) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (void Load\(const std::string& fullPath\) {) Tj10.8 -12  TD (if\(!xmlDoc_->load\( fullPath.c_str\(\)\)\) {) Tj10.8 -12  TD (throw std::runtime_error\(ErrorMessage\(\)\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.0562  Tc 1.1938  Tw (The method of extracting an error message from an MSXML) Tj0 -12  TD -0.0207  Tc 1.2091  Tw (DOM is a little fiddly, so I have placed it in its own function,) TjT* /F2 10.2  Tf-0.17  Tc 0  Tw (ErrorMessage) Tj71.4 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-57.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class DOMImpl : private NonCopyable {) Tj0 -12  TD (public:) Tj10.8 -12  TD (...) Tj0 -12  TD (std::string ErrorMessage\(\) const {) Tj10.8 -12  TD (std::string result = "Failed to extract ") Tj113.4 -12  TD ("error.";) Tj-113.4 -12  TD (MSXML2::IXMLDOMParseErrorPtr pError =) Tj113.4 -12  TD (xmlDoc_->parseError;) Tj-113.4 -12  TD (if\(pError->reason.length\(\)\) {) Tj10.8 -12  TD (result = pError->reason;) Tj-10.8 -12  TD (}) Tj0 -12  TD (return result;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.6431  Tc 0.5269  Tw (A parse error is extracted from an MSXML DOM as an) Tj0 -12  TD /F2 10.2  Tf-0.1553  Tc 0  Tw (XMLDOMParserError) Tj105 0  TD /F4 10.2  Tf-0.0545  Tc 0.6245  Tw (object. The error description is fetched) Tj-105 -12  TD -0.1562  Tc 0.9062  Tw (from the ) Tj39.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (reason) Tj40.2 0  TD /F4 10.2  Tf-0.0223  Tc 1.158  Tw (property.  If no description is available, the) Tj-79.8 -12  TD /F2 10.2  Tf-0.22  Tc 0  Tw (bstr_t) Tj39 0  TD /F4 10.2  Tf-0.0386  Tc 0.7886  Tw (returned by ) Tj50.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (reason) Tj39.6 0  TD /F4 10.2  Tf-0.0266  Tc 0.9766  Tw (has a length of 0.  ) Tj80.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (bstr_t) Tj39 0  TD /F4 10.2  Tf0.2226  Tc 0.2274  Tw (is a) Tj-248.4 -12  TD 0.0436  Tc 1.0064  Tw (wrapper class for COM\222s native ) Tj140.4 0  TD /F2 10.2  Tf0.0514  Tc 2.8286  Tw (unsigned short*) Tj99.6 0  TD /F4 10.2  Tf0.1274  Tc 0  Tw (string) Tj-240 -12  TD -0.1035  Tc 0.8106  Tw (type.  It provides a conversion to ) Tj138.6 0  TD /F2 10.2  Tf-0.12  Tc 1.8  Tw (const char*) Tj67.8 0  TD /F4 10.2  Tf-0.0945  Tc 0.9445  Tw (, and thus can) Tj-206.4 -12  TD -0.1094  Tc -0.0406  Tw (be assigned to a ) Tj66 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::string) Tj66 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-132 -18  TD /F0 12  Tf-0.03  Tc -0.21  Tw (Custom Exception Types) Tj0 -18  TD /F4 10.2  Tf-0.287  Tc 0.137  Tw (Our ) Tj18 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (main) Tj26.4 0  TD /F4 10.2  Tf-0.1228  Tc 0.2728  Tw (function\222s body is) Tj-30.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj0 -12  TD (DOM dom;) TjT* (dom.Load\("poem.xml"\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(const std::runtime_error& e\) {) Tj10.8 -12  TD (std::cout << e.what\(\) << "\\n";) Tj-10.8 -12  TD (}) Tj-289.2 748.8  TD 0 0 0 rg /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj77 0 obj9927endobj75 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 76 0 R>>endobj79 0 obj<</Length 80 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf-0.1005  Tc 0.4305  Tw (Currently the example throws a ) Tj130.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::runtime_error) Tj111 0  TD /F4 10.2  Tf0.1007  Tc 0.3493  Tw (if the) Tj-241.8 -12  TD -0.0696  Tc 0.8696  Tw (COM runtime fails to initialise or if there is an XML failure. In) Tj0 -12  TD -0.0844  Tc 0.4799  Tw (both cases the error message is prefixed with a description of the) TjT* -0.1091  Tc 0.4591  Tw (type of error.  Exceptions thrown as a result of the COM runtime) TjT* -0.0784  Tc 1.3084  Tw (failing to initialise are probably fatal and it may be appropriate) TjT* -0.0171  Tc 1.1762  Tw (for the program to exit, while for exceptions thrown due to an) TjT* -0.0824  Tc 0.5324  Tw (XML parse fail it might be more appropriate to log the error and) TjT* -0.0588  Tc -0.0912  Tw (move on to the next file.  ) Tj11.4 -12  TD 0.2524  Tc 4.9119  Tw (These different categories of error would be better) Tj-11.4 -12  TD -0.0826  Tc 0.1508  Tw (communicated by the exception\222s actual type and it is easy to add) Tj0 -12  TD -0.0985  Tc -0.5015  Tw (custom exceptions. Throwing different types of exceptions helps to) TjT* -0.151  Tc -0.479  Tw (maintain the context in which the exception was thrown and enables) TjT* -0.1903  Tc -0.3097  Tw (the behaviour of a program to change based on the type of exception) TjT* -0.0577  Tc 0.1077  Tw (that is thrown. ) Tj11.4 -12  TD 0.4259  Tc 0.0241  Tw (Deriving from ) Tj67.2 0  TD /F2 10.2  Tf0.5229  Tc 0  Tw (std::exception) Tj96 0  TD /F4 10.2  Tf0.4167  Tc 0.2333  Tw (not only means that) Tj-174.6 -12  TD 0.1178  Tc -0.4678  Tw (custom exception types can be caught along with other standard) Tj0 -12  TD 0.1469  Tc 0.3031  Tw (exception types in a single ) Tj116.4 0  TD /F2 10.2  Tf0.12  Tc 0  Tw (catch) Tj34.8 0  TD /F4 10.2  Tf0.0849  Tc 0.3651  Tw (statement if necessary, but) Tj-151.2 -12  TD 0.4468  Tc 0.4318  Tw (also provides an implementation for the custom exception) Tj0 -12  TD 0.103  Tc 0  Tw (object.) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class BadCOMRuntime : public std::exception {) Tj0 -12  TD (public:) Tj10.8 -12  TD (BadCOMRuntime\(const std::string& msg\)) Tj32.4 -12  TD (: exception\(msg.c_str\(\)\) {}) Tj-43.2 -12  TD (};) Tj-13.8 -12  TD 0 0 0 rg /F2 10.2  Tf0.0086  Tc (std::exception) Tj85.8 0  TD /F4 10.2  Tf-0.0076  Tc 0.9076  Tw (\222s constructor takes a ) Tj94.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (char*) Tj30.6 0  TD /F4 10.2  Tf0.0393  Tc 1.0107  Tw (, but I know) Tj-210.6 -12  TD 0.2669  Tc 0.9831  Tw (that I will be building exception messages with strings and) Tj0 -12  TD 0.6459  Tc 6.4041  Tw (following the model of) Tj0  Tc 1.05  Tw ( ) Tj136.8 0  TD /F2 10.2  Tf0.7467  Tc 0  Tw (std::runtime_error) Tj124.2 0  TD /F4 10.2  Tf-0.15  Tc (,) Tj-261 -12  TD /F2 10.2  Tf-0.12  Tc (BadCOMRuntime) Tj78 0  TD /F4 10.2  Tf-0.1339  Tc 0.1339  Tw (\222s constructor takes a ) Tj86.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::string) Tj66 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-219 -12  TD /F2 10.2  Tf-0.2057  Tc (COMRuntimeInit) Tj82.8 0  TD /F4 10.2  Tf-0.1696  Tc -0.3233  Tw (\222s constructor must be modified for the new) Tj-94.2 -12  TD -0.1693  Tc 0  Tw (exception:) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (COMRuntimeInit\(\) {) Tj10.8 -12  TD (HRESULT hr = ::CoInitialize\(0\);) Tj0 -12  TD (if\(FAILED\(hr\)\) {) Tj10.8 -12  TD (UnInitialize\(\);) Tj0 -12  TD (std::string errorMsg = "Unknown.";) TjT* (switch\(hr\) {) Tj10.8 -12  TD (case E_INVALIDARG:) Tj10.8 -12  TD (errorMsg = "An invalid parameter was ") Tj59.4 -12  TD ("passed to the returning ") Tj0 -12  TD ("function.";) Tj-59.4 -12  TD (break;) Tj-10.8 -12  TD (...) Tj0 -12  TD (default:) Tj10.8 -12  TD (break;) Tj-21.6 -12  TD (}) Tj0 -12  TD (throw BadCOMRuntime\(errorMsg\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.1096  Tc 0.5596  Tw (and ) Tj16.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (main) Tj26.4 0  TD /F4 10.2  Tf-0.0732  Tc 0.0089  Tw (must be modified to catch the new exception:) Tj-29.4 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj0 -12  TD (DOM dom;) TjT* (dom.Load\("poem.xml"\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(const BadCOMRuntime& e\) {) Tj10.8 -12  TD (std::cout << "COM initialisation error: ") Tj54 -12  TD (<< e.what\(\)) Tj0 -12  TD (<< "\\n";) Tj-64.8 -12  TD (}) Tj0 -12  TD (...) Tj261 708  TD 0 0 0 rg /F4 10.2  Tf0.677  Tc 1.123  Tw (The exceptions thrown by ) Tj131.4 0  TD /F2 10.2  Tf0.8229  Tc 0  Tw (DOMImpl) Tj52.8 0  TD /F4 10.2  Tf0.7107  Tc 1.3393  Tw (are a little more) Tj-184.2 -12  TD 0.0827  Tc 0.3673  Tw (complicated. ) Tj57 0  TD /F2 10.2  Tf0.1371  Tc 0  Tw (DOMImpl) Tj46.8 0  TD /F4 10.2  Tf0.0442  Tc 0.8558  Tw (throws exceptions when two ) Tj125.4 0  TD /F6 10.2  Tf0.0258  Tc 0  Tw (different) Tj-229.2 -12  TD /F4 10.2  Tf0.1648  Tc 1.0567  Tw (things happen and therefore requires two different exception) Tj0 -12  TD -0.1319  Tc 1.5637  Tw (types, which should be in some way related. One way to solve) TjT* 0.0949  Tc 1.0218  Tw (this is to have a common exception type for ) Tj196.2 0  TD /F2 10.2  Tf0.0514  Tc 0  Tw (DOMImpl) Tj47.4 0  TD /F4 10.2  Tf-0.0072  Tc (from) Tj-243.6 -12  TD -0.0653  Tc 0.0153  Tw (which two other exception types derive. ) Tj11.4 -12  TD /F2 10.2  Tf0.2229  Tc 0  Tw (DOMImpl) Tj46.8 0  TD /F4 10.2  Tf0.1429  Tc 0.3071  Tw (is the implementation of ) Tj106.8 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (DOM) Tj21.6 0  TD /F4 10.2  Tf0.1523  Tc 0.2977  Tw (and any exception) Tj-186.6 -12  TD 0.1379  Tc 0.3121  Tw (thrown by ) Tj46.2 0  TD /F2 10.2  Tf0.2229  Tc 0  Tw (DOMImpl) Tj46.8 0  TD /F4 10.2  Tf0.1482  Tc 0.3018  Tw (is most likely to be caught outside ) Tj149.4 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (DOM) Tj18.6 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-261 -12  TD -0.0785  Tc 0.1685  Tw (Therefore, to the user of ) Tj100.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOM) Tj18 0  TD /F4 10.2  Tf-0.1041  Tc 0.4341  Tw (, who is unaware of ) Tj82.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOMImpl) Tj42 0  TD /F4 10.2  Tf0.1151  Tc -0.2651  Tw (, it is) Tj-243.6 -12  TD -0.087  Tc 0.537  Tw (more logical for ) Tj67.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (DOM) Tj21 0  TD /F4 10.2  Tf-0.0815  Tc 0.4315  Tw (to be throwing exceptions of type ) Tj138.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (BadDOM) Tj-227.4 -12  TD /F4 10.2  Tf-0.0551  Tc 0.2051  Tw (rather than ) Tj45.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (BadDOMImpl) Tj60 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-91.2 -17.4  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (#include <stdexcept>) Tj0 -12  TD (#include <string>) Tj0 -18.6  TD (class BadDOM : public std::exception {) Tj0 -12  TD (public:) Tj10.8 -12  TD (BadDOM\(const std::string& msg\)) Tj32.4 -12  TD (: exception\(msg.c_str\(\)\) {}) Tj-43.2 -12  TD (};) Tj0 -17.4  TD (class CreateFailed : public BadDOM {) Tj0 -12  TD (public:) Tj10.8 -12  TD (CreateFailed\(const std::string& msg\)) Tj32.4 -12  TD (: BadDOM\(msg\) {}) Tj-43.2 -12  TD (};) Tj0 -18.6  TD (class BadParse : public BadDom {) Tj0 -12  TD (public:) Tj10.8 -12  TD (BadParse\(const std::string& msg\)) Tj32.4 -12  TD (: BadDOM\(msg\) {}) Tj-43.2 -12  TD (};) Tj-14.4 -12  TD 0 0 0 rg /F4 10.2  Tf0.0894  Tc 0.5606  Tw (The constructor and ) Tj88.8 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (Load) Tj28.8 0  TD /F4 10.2  Tf0.0668  Tc 0.3832  Tw (function in ) Tj49.8 0  TD /F2 10.2  Tf0.0514  Tc 0  Tw (DOMImpl) Tj47.4 0  TD /F4 10.2  Tf0.0812  Tc 0.9688  Tw (can now be) Tj-214.8 -12  TD 0.135  Tc 0.84  Tw (modified to use the new exception types and ) Tj197.4 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (main) Tj28.8 0  TD /F4 10.2  Tf0.121  Tc (modified) Tj-226.2 -12  TD 0.1767  Tc -0.1267  Tw (to catch a ) Tj43.2 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (BadDOM) Tj40.2 0  TD /F4 10.2  Tf0.0963  Tc 0.1537  Tw (exception.  For completeness sake, we also) Tj-83.4 -12  TD 0.9146  Tc 0.3354  Tw (need a third ) Tj63.6 0  TD /F2 10.2  Tf1.08  Tc 0  Tw (catch) Tj39.6 0  TD /F4 10.2  Tf0.8464  Tc 0.6836  Tw (block.  The COM smart pointers) Tj-103.2 -12  TD 0.1593  Tc 0.5907  Tw (generated by ) Tj60 0  TD /F2 10.2  Tf0.3086  Tc 0  Tw (#import) Tj48.6 0  TD /F4 10.2  Tf0.2356  Tc 0.5144  Tw (raise a ) Tj33 0  TD /F2 10.2  Tf0.24  Tc 0  Tw (_com_error) Tj67.2 0  TD /F4 10.2  Tf0.2402  Tc 1.1098  Tw (if a function) Tj-208.8 -12  TD 0.1157  Tc 0.3343  Tw (call fails.) Tj14.4 -15  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj0 -12  TD (DOM dom;) TjT* (dom.Load\("poem.xml"\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (catch\(const BadCOMRuntime& e\) {) Tj10.8 -12  TD -0.0167  Tc 0.0167  Tw (std::cout << "COM initialisation error: ") Tj54 -12  TD 0  Tc 0  Tw (<< e.what\(\) << "\\n";) Tj-64.8 -12  TD (}) Tj0 -12  TD (catch\(const BadDOM& e\) {) Tj10.8 -12  TD (std::cout << "DOM error: ") Tj54 -12  TD (<< e.what\(\) << "\\n";) Tj-64.8 -12  TD (}) Tj0 -12  TD (catch\(const _com_error& e\) {) Tj10.8 -12  TD (std::cout << "COM error: ") Tj54 -12  TD (<< e.ErrorMessage\(\) << "\\n";) Tj-64.8 -12  TD (} ) Tj-14.4 -24.6  TD 0 0 0 rg /F0 12  Tf0.0341  Tc -0.2741  Tw (Engineering the Exercise Solution:) Tj22.2 -12  TD -0.0072  Tc -0.2328  Tw (Part 2) Tj-22.2 -20.4  TD /F4 10.2  Tf-0.0995  Tc 0.8222  Tw (Now that the DOM is loading and validating XML the next part) Tj0 -12  TD 0.0074  Tc 1.0926  Tw (of the exercise is write the elements to an output stream as an) TjT* -0.1514  Tc 0.6014  Tw (indented tree.) Tj249 -19.8  TD /F0 10.8  Tf0.099  Tc 0  Tw (17) Tj-216 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj80 0 obj9882endobj78 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 79 0 R>>endobj82 0 obj<</Length 83 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (18) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj0 -34.2  TD 0.0268  Tc -0.0668  Tw (Writing the Element Structure) Tj0 -18.6  TD /F4 10.2  Tf-0.0928  Tc 0.6928  Tw (The first step in enabling the elements to be written to an output) Tj0 -12  TD -0.1067  Tc 0.1817  Tw (stream is to pass one in. The obvious way to do this is to is to add) TjT* 0.249  Tc 0.601  Tw (a function to ) Tj60.6 0  TD /F2 10.2  Tf0.1371  Tc 0  Tw (DOMImpl) Tj44.4 0  TD /F4 10.2  Tf0.2217  Tc 0.8283  Tw (, and a forwarding function to ) Tj137.4 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (DOM) Tj18.6 0  TD /F4 10.2  Tf-0.15  Tc (,) Tj-261 -12  TD -0.1108  Tc 0.1608  Tw (which takes a ) Tj57 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::ostream) Tj74.4 0  TD /F4 10.2  Tf-0.0884  Tc (reference.) Tj-117 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (#include <ostream>) Tj0 -12  TD (class DOMImpl : private NonCopyable {) TjT* (...) TjT* (public:) Tj10.8 -12  TD (void WriteTree\(std::ostream& out\) {}) Tj-10.8 -12  TD (...) Tj0 -12  TD (};) Tj-14.4 -19.8  TD 0 0 0 rg /F4 10.2  Tf-0.0484  Tc 0.4984  Tw (Modifying ) Tj46.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (main) Tj27 0  TD /F4 10.2  Tf-0.0992  Tc 0.7742  Tw (to call the new function means that results can) Tj-73.2 -12  TD 0.1288  Tc 1.0212  Tw (be seen straight away as the ) Tj126.6 0  TD /F2 10.2  Tf0.1467  Tc 0  Tw (WriteTree) Tj60.6 0  TD /F4 10.2  Tf0.1476  Tc 0.9024  Tw (implementation is) Tj-187.2 -12  TD -0.0072  Tc 0  Tw (developed.) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (try {) Tj10.8 -12  TD (COMRuntimeInit comRuntime;) Tj0 -12  TD (DOM dom;) TjT* (dom.Load\("poem.xml"\);) TjT* (dom.WriteTree\(std::cout\);) Tj-10.8 -12  TD (}) Tj0 -12  TD (...) Tj-14.4 -19.8  TD 0 0 0 rg /F4 10.2  Tf0.2786  Tc 1.1314  Tw (In order to write the complete tree, every element must be) Tj0 -12  TD 0.6748  Tc 0.7952  Tw (visited.  Starting with the root element, the rest of the) TjT* 0.1285  Tc 0.6215  Tw (elements can then be visited in a depth-first traversal. I wrote) TjT* 0.449  Tc 1.051  Tw (the following function, based on some Delphi written by) TjT* 0.1161  Tc 0.0612  Tw (Adrian Fagg, which gets a pointer to the root element and then) TjT* 0.0902  Tc 0.9598  Tw (calls the function ) Tj79.2 0  TD /F2 10.2  Tf0.1527  Tc 0  Tw (WriteBranch) Tj72.6 0  TD /F4 10.2  Tf0.1439  Tc 1.0561  Tw (which recurses the rest of) Tj-151.8 -12  TD 0.112  Tc -0.262  Tw (the tree.) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (void WriteTree\(std::ostream& out\) {) Tj10.8 -12  TD (MSXML2::IXMLDOMElementPtr root =) Tj102.6 -12  TD (xmlDoc_->documentElement;) Tj-102.6 -12  TD (WriteBranch\(root, 0, out\);) Tj-10.8 -12  TD (}) Tj-14.4 -19.8  TD 0 0 0 rg /F4 10.2  Tf0.113  Tc 0.337  Tw (The ) Tj19.8 0  TD /F2 10.2  Tf0.0982  Tc 0  Tw (WriteBranch) Tj72.6 0  TD /F4 10.2  Tf0.0622  Tc 1.0878  Tw (function is also based on Adrian Fagg\222s) Tj-92.4 -12  TD -0.0692  Tc -0.0808  Tw (Delphi code. The code is self explanatory, but basically it:) Tj0 -24  TD 0.375  Tc 0  Tw (1.) Tj11.4 0  TD -0.0412  Tc -0.1088  Tw (Gets the tag name of the element passed to it.) Tj-11.4 -12  TD 0.375  Tc 0  Tw (2.) Tj11.4 0  TD -0.1143  Tc -0.0357  Tw (Writes tag names to the supplied ) Tj132 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (std::ostream) Tj74.4 0  TD /F4 10.2  Tf-0.1122  Tc -0.0378  Tw (at twice the) Tj-206.4 -12  TD -0.0891  Tc -0.0609  Tw (specified indentation.) Tj-11.4 -12  TD 0.375  Tc 0  Tw (3.) Tj11.4 0  TD 0.0585  Tc 0.3915  Tw (The supplied element is then used to get a pointer to its first) Tj0 -12  TD -0.125  Tc 0  Tw (child.) Tj-11.4 -12  TD 0.375  Tc (4.) Tj11.4 0  TD -0.0902  Tc 0.0688  Tw (If the child pointer is not 0, it is used to get the node type.) Tj-11.4 -12  TD 0.375  Tc 0  Tw (5.) Tj11.4 0  TD 0.0735  Tc 0.2765  Tw (If the node is of type ) Tj91.2 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (NODE_ELEMENT) Tj77.4 0  TD /F4 10.2  Tf0.0452  Tc -0.1952  Tw (the ) Tj15.6 0  TD /F2 10.2  Tf0.1527  Tc 0  Tw (WriteBranch) Tj-184.2 -12  TD /F4 10.2  Tf-0.0888  Tc 0.2388  Tw (method is called again \(recursion\).) Tj-11.4 -12  TD 0.375  Tc 0  Tw (6.) Tj11.4 0  TD -0.0795  Tc -0.0105  Tw (The child pointer is then used to get the next sibling.) Tj-11.4 -12  TD 0.375  Tc 0  Tw (7.) Tj11.4 0  TD -0.0912  Tc 0.0745  Tw (If there are no more siblings, the method returns. ) Tj3 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (void WriteBranch\() Tj64.8 -12  TD (MSXML2::IXMLDOMElementPtr element, ) Tj0 -12  TD (unsigned long indentation,) TjT* (std::ostream& out\) {) Tj-54 -12  TD (bstr_t cbstr element->tagName;) Tj0 -12  TD (out << std::string\(2 * indentation, ' '\) ) Tj21.6 -12  TD (<< cbstr << std::endl;) Tj-21.6 -12  TD (MSXML2::IXMLDOMNodePtr child =) Tj129.6 -12  TD (element->firstChild;) Tj145.2 708  TD (while\(child != 0\) {) Tj10.8 -12  TD (if\(child->nodeType ==) Tj97.2 -12  TD (MSXML2::NODE_ELEMENT\) {) Tj-86.4 -12  TD (WriteBranch\(child,) Tj64.8 -12  TD (indentation + 1, out\);) Tj-75.6 -12  TD (}) Tj0 -12  TD (child = child->nextSibling;) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (}) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.0584  Tc 1.2721  Tw (The result of running the program is now that the following is) Tj0 -12  TD -0.1447  Tc 0.1947  Tw (written to the console:) Tj13.8 -12  TD /F2 9  Tf0  Tc 0  Tw (poem) Tj10.8 -12  TD (line) Tj0 -12  TD (line) TjT* (line) TjT* (line) Tj-24.6 -12  TD /F4 10.2  Tf-0.0975  Tc -0.0525  Tw (With that the exercise is complete.) Tj0 -18  TD /F0 12  Tf-0.1425  Tc 0.5025  Tw (Next Step) TjT* /F4 10.2  Tf-0.0974  Tc 0.3293  Tw (The logical next step would of course be exercise 2. However, as) Tj0 -12  TD 0.019  Tc 1.031  Tw (well as completing the exercises which help the students learn) TjT* -0.1259  Tc 0.6359  Tw (about XML, one of the aims of the ACCU Mentored Developers) TjT* -0.0872  Tc 1.4372  Tw (XML Project is to write a standard interface behind which any) TjT* -0.0843  Tc 1.3143  Tw (parser, such as MSXML or Xerces can be used. Therefore, the) TjT* -0.0982  Tc 0.0573  Tw (next step is to design a common interface to the DOM. ) Tj157.8 -12  TD /F8 10.2  Tf-0.0305  Tc -0.1135  Tw (Paul Grenyer and Jez Higgins) Tj-13.2 -12  TD /F2 9  Tf0  Tc 0  Tw (paul@paulgrenyer.co.uk) Tj37.8 -12  TD (jez@jezuk.co.uk) Tj-182.4 -18  TD /F0 12  Tf-0.096  Tc -0.144  Tw (Thank You) Tj0 -18  TD /F4 10.2  Tf-0.3038  Tc 0.0338  Tw (Thanks to all the members of the ACCU Mentored Developers XML) Tj0 -12  TD -0.1954  Tc 1.1596  Tw (Project, especially Adrian Fagg, Rob Hughes, Thaddaeus Frogley) TjT* -0.2692  Tc -0.2141  Tw (and Alan Griffiths for the proof reading and code suggestions.) Tj0 -18  TD /F0 12  Tf-0.018  Tc 0  Tw (References) TjT* /F4 10.2  Tf-0.0909  Tc 0.0909  Tw ([boost] The boost library: ) Tj104.4 0  TD /F2 9  Tf0  Tc 0  Tw (http://www.boost.org) Tj-104.4 -12  TD /F4 10.2  Tf-0.1424  Tc 0.1124  Tw ([DOMRec] W3C Document Object Model \(DOM\):) Tj10.8 -12  TD /F2 9  Tf0  Tc 0  Tw (http://www.w3.org/DOM/) Tj-10.8 -12  TD /F4 10.2  Tf-0.1136  Tc -0.2364  Tw ([EC++] Scott Meyers, ) Tj90 0  TD /F6 10.2  Tf-0.1169  Tc -0.5331  Tw (Effective C++: 50 Specific Ways to improve) Tj-79.2 -12  TD 0.018  Tc 0.432  Tw (Your Programs and Designs) Tj118.8 0  TD /F4 10.2  Tf0.0331  Tc 0.2669  Tw (. Addison Wesley: ISBN 0-201-) Tj-118.8 -12  TD -0.1161  Tc 0  Tw (9288-9) Tj-10.8 -12  TD -0.0857  Tc 0.3357  Tw ([ExC++] Herb Sutter, ) Tj91.2 0  TD /F6 10.2  Tf-0.0642  Tc 0.5142  Tw (Exceptional C++) Tj72 0  TD /F4 10.2  Tf-0.1041  Tc 0.3541  Tw (. Addison Wesley: ISBN) Tj-152.4 -12  TD -0.12  Tc 0  Tw (0201615622) Tj-10.8 -12  TD -0.1266  Tc -0.0234  Tw ([InstMsi] Windows Installer 2.0:) Tj10.8 -12  TD /F2 9  Tf-0.0255  Tc 0  Tw (http://www.microsoft.com/downloads/details.aspx) Tj0 -12  TD 0.0913  Tc (?FamilyID=4b6140f9-2d36-4977-8fa1-6f8a0f5dca8f) TjT* 0  Tc (&displaylang=en) Tj-10.8 -12  TD /F4 10.2  Tf-0.1053  Tc -0.0447  Tw ([MDevelopers] ACCU Mentored Developers:) Tj10.8 -12  TD /F2 9  Tf0  Tc 0  Tw (http://www.accu.org/mdevelopers/) Tj-10.8 -12  TD /F4 10.2  Tf-0.1325  Tc -0.0175  Tw ([MSXML] Microsoft XML parser:) Tj10.8 -12  TD /F2 9  Tf-0.0255  Tc 0  Tw (http://www.microsoft.com/downloads/details.aspx) Tj0 -12  TD 0.0913  Tc (?FamilyID=3144b72b-b4f2-46da-b4b6-c5d7485f2b42) TjT* 0  Tc (&displaylang=en) Tj-10.8 -12  TD /F4 10.2  Tf-0.2057  Tc -0.3443  Tw ([PerfectXML] PerfectXML:  ) Tj114.6 0  TD /F2 9  Tf-0.0857  Tc 0  Tw (www.perfectxml.com/msxml.asp) Tj-114.6 -12  TD /F4 10.2  Tf-0.1451  Tc -0.0049  Tw ([UsingDOM] Using DOM:) Tj13.2 -12  TD /F2 9  Tf-0.0766  Tc 0  Tw (http://www.perfectxml.com/CPPMSXML/20020710.asp) Tj-13.2 -12  TD /F4 10.2  Tf-0.0934  Tc -0.0566  Tw ([Xerces] Xerces XML parser:) Tj10.8 -12  TD /F2 9  Tf0  Tc 0  Tw (http://xml.apache.org/xerces-c ) Tj-10.8 -12  TD /F4 10.2  Tf-0.1102  Tc -0.0398  Tw ([XMLRec] Extensible Markup Language \(XML\):) Tj10.8 -12  TD /F2 9  Tf0  Tc 0  Tw (http://www.w3.org/XML/) TjETendstreamendobj83 0 obj9182endobj81 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font 84 0 R/ProcSet 2 0 R>>/Contents 82 0 R>>endobj84 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F8 31 0 R>>endobj86 0 obj<</Length 87 0 R>>stream
BT552.6 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (19) Tj-215.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-294 -38.4  TD /F1 18  Tf0.0095  Tc 0.0865  Tw (The Curious Case of the) Tj25.2 -18  TD -0.0306  Tc -0.1734  Tw (Compile-Time Function) Tj-25.2 -16.2  TD /F0 13.8  Tf0.0269  Tc 0.2671  Tw (\(An Exercise in Template) Tj25.8 -16.2  TD 0.1573  Tc 0  Tw (Meta-Programming\)) Tj-25.8 -12  TD /F0 10.2  Tf-0.2226  Tc 0.3486  Tw (by Phil Bass) Tj-13.8 -18  TD /F0 12  Tf-0.0142  Tc -0.0758  Tw (A Crime Has Been Committed) Tj0 -18  TD /F4 10.2  Tf0.2972  Tc 0.8862  Tw (18 months ago I described a version of my Event/Callback) Tj0 -12  TD -0.0816  Tc 0.4116  Tw (library in an Overload article [1]. This library is used extensively) TjT* -0.0822  Tc 1.0656  Tw (in my employer\222s control systems software. A typical use looks) TjT* -0.0527  Tc -0.0973  Tw (like this:) Tj13.8 -16.2  TD /F2 9  Tf0  Tc 0  Tw (// A class of objects that monitor some event.) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(class Observer {) TjT* (public:) Tj10.8 -12  TD (Observer\(Event<int>& event\)) Tj10.8 -12  TD (: callback\(bind_1st\(memfun\() Tj75.6 -12  TD (&Observer::handler\), this\)\)) Tj-75.6 -12  TD (, connection\(event, &callback\) {}) Tj-21.6 -12  TD (private:) Tj10.8 -12  TD (void handler\(int\);  ) Tj108 0  TD 0 0 0 rg /F2 9  Tf(// the event handler) Tj-108 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(typedef Callback::Adapter<) Tj70.2 -12  TD (void \(Observer::*\)\(int\)>::type) Tj-48.6 -12  TD (Callback_Type;) Tj-21.6 -12  TD (Callback_Type callback; ) Tj129.6 0  TD 0 0 0 rg /F2 9  Tf(// a function object) Tj-129.6 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(Callback::Connection<int> connection;) Tj124.2 -12  TD 0 0 0 rg /F2 9  Tf(// event <-> callback) Tj-135 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj18 -12  TD 0 0 0 rg /F10 10.2  Tf-0.058  Tc -0.092  Tw (Exhibit 1: The event/callback library in action.) Tj-31.8 -19.8  TD /F4 10.2  Tf0.5062  Tc 0.5983  Tw (The key feature in this example is that a callback and an) Tj0 -12  TD 0.0526  Tc 0.9117  Tw (event/callback connection are both stored in the ) Tj207 0  TD /F2 9  Tf0.225  Tc 0  Tw (Observer) Tj48 0  TD /F4 10.2  Tf0.2517  Tc (as) Tj-255 -12  TD -0.1  Tc 0.13  Tw (data members. Some attempt has been made to support this idiom) Tj0 -12  TD -0.0143  Tc 0.8243  Tw (by providing various helpers \(the ) Tj142.8 0  TD /F2 9  Tf0.06  Tc 0  Tw (bind_1st\(\)) Tj58.8 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj18 0  TD /F2 9  Tf0.075  Tc 0  Tw (memfun\(\)) Tj-219.6 -12  TD /F4 10.2  Tf-0.029  Tc 1.079  Tw (function templates) Tj76.8 2.4  TD /F4 7.2  Tf0  Tc 0  Tw (1) Tj7.2 -2.4  TD /F4 10.2  Tf0.0678  Tc 0.6822  Tw (and the ) Tj34.8 0  TD /F2 9  Tf0.1364  Tc 0  Tw (Callback::Adapter<Pmf>) Tj124.8 0  TD /F4 10.2  Tf0.1142  Tc (class) Tj-243.6 -12  TD 0.0775  Tc 1.0325  Tw (template\). However, there is still quite a lot of rather verbose) Tj0 -12  TD -0.0677  Tc -0.2023  Tw (boilerplate code. And that\222s a crime.) Tj11.4 -12  TD 0.3818  Tc 0.1182  Tw (It has been clear for some time that we should be able to) Tj-11.4 -12  TD 0.0663  Tc 0.4437  Tw (improve on this. There seems to be no fundamental reason, for) Tj0 -12  TD 0.045  Tc 0.0717  Tw (example, why we can\222t combine the callback and its connection) TjT* 0.0031  Tc 0.6869  Tw (into a single class template \() Tj119.4 0  TD /F2 9  Tf0.1286  Tc 0  Tw (Bound_Callback) Tj77.4 0  TD /F4 10.2  Tf-0.0569  Tc 0.8069  Tw (, say\) and use it) Tj-196.8 -12  TD -0.1194  Tc 0.5694  Tw (like this:) Tj13.8 -16.2  TD /F2 9  Tf0  Tc 0  Tw (// A class of objects that monitor some event.) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(class Observer {) TjT* (public:) Tj10.8 -12  TD (Observer\(Event<int>& event\)) Tj16.2 -12  TD (: callback\(event, &Observer::handler,) Tj59.4 -12  TD (this\) {}) Tj-86.4 -12  TD (private:) Tj10.8 -12  TD (void handler\(int\);  ) Tj108 0  TD 0 0 0 rg /F2 9  Tf(// the event handler) Tj-108 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(Bound_Callback<void \(Observer::*\)\(int\)>) Tj16.2 -12  TD (callback;) Tj-27 -12  TD (};) Tj75.6 -12  TD 0 0 0 rg /F10 10.2  Tf-0.1  Tc -0.05  Tw (Exhibit 2: The goal.) Tj-89.4 -19.8  TD /F4 10.2  Tf0.6463  Tc 10.6037  Tw (The question is how should we write the) Tj0 -12  TD /F2 9  Tf0  Tc 0  Tw (Bound_Callback<Pmf>) Tj105 0  TD /F4 10.2  Tf-0.1397  Tc (template?) Tj169.8 678.6  TD /F0 12  Tf0.0142  Tc 0.1458  Tw (Suspects and Red Herrings) Tj0 -18.6  TD /F4 10.2  Tf-0.0976  Tc 0.5476  Tw (The first thing that comes to mind is Boost [2]. There\222s bound to) Tj0 -12  TD -0.076  Tc 1.226  Tw (be a Boost library that provides what we need. The trouble is I) TjT* -0.1001  Tc -0.0499  Tw (can\222t find one.) Tj11.4 -12  TD -0.0934  Tc 0.4434  Tw (Boost.Bind provides a lovely family of ) Tj161.4 0  TD /F2 9  Tf0  Tc 0  Tw (bind\(\)) Tj35.4 0  TD /F4 10.2  Tf-0.0357  Tc 0.4857  Tw (functions that) Tj-208.2 -12  TD -0.0613  Tc 0.5113  Tw (generate all kinds of function objects. Unfortunately, their return) Tj0 -12  TD -0.0773  Tc 0.4673  Tw (types are unspecified, so we can\222t declare data members of those) TjT* -0.1137  Tc 0  Tw (types.) Tj11.4 -12  TD 0.0622  Tc 0.3878  Tw (Then there\222s Boost.Function, which was designed for a very) Tj-11.4 -12  TD -0.084  Tc 0.234  Tw (similar job and does provide types we can use as data members. I) Tj0 -12  TD -0.0715  Tc 0.0929  Tw (believe we could, in fact, use the ) Tj135 0  TD /F2 9  Tf0  Tc 0  Tw (boost::function<>) Tj94.2 0  TD /F4 10.2  Tf-0.0411  Tc (template) Tj-229.2 -12  TD -0.0773  Tc 0.0273  Tw (as the callback part of our ) Tj105.6 0  TD /F2 9  Tf0  Tc 0  Tw (Bound_Callback) Tj75.6 0  TD /F4 10.2  Tf-0.0765  Tc -0.0735  Tw (. What I haven\222t told) Tj-181.2 -12  TD 0.1543  Tc 0.2957  Tw (you, though, is that an ) Tj98.4 0  TD /F2 9  Tf0.3  Tc 0  Tw (Event<Arg>) Tj59.4 0  TD /F4 10.2  Tf0.1496  Tc 0.3004  Tw (can only be connected to) Tj-157.8 -12  TD -0.0986  Tc -0.4514  Tw (callbacks derived from ) Tj93 0  TD /F2 9  Tf0  Tc 0  Tw (Callback::Function<Arg>) Tj124.2 0  TD /F4 10.2  Tf-0.0932  Tc -0.3568  Tw (. Clearly, as) Tj-217.2 -12  TD /F2 9  Tf0  Tc 0  Tw (boost::function<>) Tj94.2 0  TD /F4 10.2  Tf-0.0881  Tc -0.1476  Tw (isn\222t derived from this base class it doesn\222t) Tj-94.2 -12  TD -0.0868  Tc 0.1168  Tw (provide everything we need. And, of course, it doesn\222t know how) Tj0 -12  TD -0.0852  Tc -0.0648  Tw (to make the event/callback connection, either.) Tj11.4 -12  TD 0.1659  Tc 0.4341  Tw (So, what about Boost.Signals? Well, yes, we could replace) Tj-11.4 -12  TD 0.065  Tc -0.1293  Tw (the whole of our event/callback library with ) Tj183 0  TD /F2 9  Tf0.1714  Tc 0  Tw (boost::signals) Tj78 0  TD /F4 10.2  Tf-0.15  Tc (,) Tj-261 -12  TD 0.1118  Tc -0.0436  Tw (but I\222m reluctant to do that for several \(not very good\) reasons.) Tj0 -12  TD 0.1152  Tc 0.2848  Tw (First of all, I don\222t like the names: \223signal\224 is already used for) TjT* 0.1018  Tc 0.2882  Tw (something else in Unix operating systems, and \223slot\224 is a truly) TjT* 0.1603  Tc 0.4611  Tw (bizarre word for a callback function. Secondly, Boost.Signals) TjT* 0.0074  Tc -0.2174  Tw (does more than we need or want. Specifically, I\222m not convinced) TjT* 0.1009  Tc 0.0491  Tw (that a general-purpose event/callback library should do its own) TjT* 0.0938  Tc 0.3562  Tw (object lifetime management and, anyway, we couldn\222t use that) TjT* 0.1059  Tc 0.5077  Tw (feature in common cases like Exhibit 1. Finally, if we were to) TjT* 0.4693  Tc 4.4057  Tw (use Boost.Signals the crime would be reduced to ) Tj5.0712  Tc 0  Tw (a) TjT* 0.0602  Tc -0.3902  Tw (misdemeanour and there would be little or no motivation for this) TjT* 0.1392  Tc 0  Tw (article!) Tj0 -18  TD /F0 12  Tf-0.0069  Tc -0.2331  Tw (A Promising Lead) TjT* /F4 10.2  Tf-0.1114  Tc 0.3114  Tw (The astute reader may have spotted a clue in the first exhibit. The) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (typedef) Tj45 0  TD /F4 10.2  Tf-0.0753  Tc 0.5253  Tw (isn\222t there just to provide a reasonably short name for) Tj-45 -12  TD 0.1033  Tc 1.0667  Tw (the callback type \226 it also shows a template meta-function in) Tj0 -12  TD 0.0173  Tc 0  Tw (action.) Tj11.4 -12  TD 0.2803  Tc 0.3031  Tw (A meta-function in C++ is a compile-time analogue of an) Tj-11.4 -12  TD 0.1119  Tc 0.2181  Tw (ordinary \(run-time\) function. Well-behaved run-time functions) Tj0 -12  TD -0.0867  Tc -0.2815  Tw (perform an operation on a set of values supplied as parameters and) TjT* 0.2113  Tc 0.2387  Tw (generate a new value as their result. Meta-functions typically) TjT* -0.0822  Tc 0.0958  Tw (perform an operation on a set of types supplied as parameters and) TjT* -0.0614  Tc 0.0114  Tw (generate a new type as their result.) Tj11.4 -12  TD 0.2565  Tc 0.7269  Tw (In its simplest form, a meta-function taking a single type) Tj-11.4 -12  TD -0.0602  Tc -0.0898  Tw (parameter and returning another type as its result looks like this:) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Arg>) Tj0 -12  TD (struct meta_function {) Tj10.8 -12  TD -0.0154  Tc 0.0154  Tw (typedef <some type expression involving Arg>) Tj27 -12  TD 0  Tc 0  Tw (type;) Tj-37.8 -12  TD (};) Tj44.4 -12  TD 0 0 0 rg /F10 10.2  Tf-0.135  Tc -0.015  Tw (Exhibit 3: A simple meta-function.) Tj-58.8 -19.8  TD /F4 10.2  Tf-0.0595  Tc 1.0428  Tw (In C++, a meta-function always involves a template. The meta-) Tj0 -12  TD -0.0892  Tc 0.0892  Tw (function\222s parameters are the template\222s parameters and the meta-) TjT* -0.0935  Tc 1.0835  Tw (function\222s result is a nested type name or integral constant. The) TjT* -0.0059  Tc 1.1416  Tw (Boost Meta-Programming Library adopts the convention that a) TjT* -0.1108  Tc 0.5608  Tw (meta-function\222s result is called ) Tj128.4 0  TD /F2 9  Tf0  Tc 0  Tw (type) Tj24.6 0  TD /F4 10.2  Tf-0.0967  Tc 0.6667  Tw (\(if it\222s a type\) or ) Tj70.8 0  TD /F2 9  Tf0  Tc 0  Tw (value) Tj30.6 0  TD /F4 10.2  Tf-0.0096  Tc (\(if) Tj-254.4 -12  TD -0.1044  Tc 0.0744  Tw (it\222s an integral constant\) and that same convention is used here.) Tj11.4 -12  TD 0.1479  Tc 0.5021  Tw (Now, suppose we had a meta-function that takes a pointer-) Tj-11.4 -12  TD 0.1597  Tc 0.2903  Tw (to-member-function type and returns the function\222s parameter) Tj0 -12  TD 0.0571  Tc 0  Tw (type.) TjET1 1 1 rg 29.4 56.4 263.4 27.6 re f29.4 56.4 263.4 27.6 re fBT29.4 78  TD0 0 0 rg /F9 7.8  Tf-0.144  Tc (1) Tj10.8 0  TD 0.6146  Tc 0.2734  Tw (These are not-quite-standard variations of ) Tj151.8 0  TD /F2 9  Tf0.7286  Tc 0  Tw (std::bind1st\(\)) Tj88.8 0  TD /F9 7.8  Tf0.638  Tc (and) Tj-240.6 -9.6  TD /F2 9  Tf0.2143  Tc (std::mem_fun\(\)) Tj81 0  TD /F9 7.8  Tf0.2058  Tc 0.8365  Tw (developed in-house for reasons that are not important) Tj-81 -10.2  TD 0.0563  Tc 0  Tw (here.) Tj0.6 w 1 J 1 j 0 0 0 RG ET29.4 90 m 292.8 90 l S endstreamendobj87 0 obj11170endobj85 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font 88 0 R/ProcSet 2 0 R>>/Contents 86 0 R>>endobj88 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F9 33 0 R/F10 65 0 R>>endobj90 0 obj<</Length 91 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (20) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj14.4 -40.8  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Pmf>) Tj91.8 -12  TD 0 0 0 rg /F2 9  Tf(// Result \(Class::*Pmf\)\(Arg\)) Tj-91.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(struct argument {) Tj10.8 -12  TD (typedef <magic involving Pmf> type;) Tj81 -12  TD 0 0 0 rg /F2 9  Tf(// type == Arg) Tj-91.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj41.4 -12  TD 0 0 0 rg /F10 10.2  Tf-0.1004  Tc -0.1996  Tw (Exhibit 4: A magical meta-function.) Tj-55.8 -24  TD /F4 10.2  Tf0.1377  Tc 0.9873  Tw (Similarly, we can imagine meta-functions that extract from a) Tj0 -12  TD 0.0783  Tc 1.2717  Tw (pointer-to-member-function the function\222s result type and the) TjT* -0.1122  Tc 1.1622  Tw (class of which the function is a member. We could now write a) TjT* /F2 9  Tf0  Tc 0  Tw (Bound_Callback<Pmf>) Tj105 0  TD /F4 10.2  Tf-0.0972  Tc 0.1472  Tw (template along the lines of Exhibit 5.) Tj-90.6 -16.2  TD /F2 9  Tf0  Tc 0  Tw (// A callback bound to an event.) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(template<typename Pmf>) TjT* (class Bound_Callback) Tj10.8 -12  TD (: public Callback::Function<typename) Tj-10.8 -12  TD (argument<Pmf>::type> {) Tj0 -12  TD (public:) Tj10.8 -12  TD (typedef typename argument<Pmf>::type Arg;) Tj0 -12  TD (typedef typename result<Pmf>::type Result;) TjT* (typedef typename class_<Pmf>::type Class;) TjT* (Bound_Callback\(Event<Arg>& event, Pmf f,) Tj81 -12  TD (Class* p\)) Tj-70.2 -12  TD (: pointer\(p\), function\(f\)) Tj0 -12  TD (, connection\(event, this\) {}) Tj-10.8 -12  TD (Result operator\(\)\(Arg value\) {) Tj10.8 -12  TD (return \(pointer->*function\)\(value\);) Tj-10.8 -12  TD (}) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (Class* pointer;) Tj0 -12  TD (Pmf function;) TjT* (Callback::Connection<Arg> connection;) Tj-10.8 -12  TD (};) Tj46.8 -12  TD 0 0 0 rg /F10 10.2  Tf-0.1513  Tc 0.4513  Tw (Exhibit 5: Using a meta-function.) Tj-61.2 -19.8  TD /F4 10.2  Tf-0.2748  Tc 0.7748  Tw (This would be exactly what we need to implement the sort of class) Tj0 -12  TD -0.0871  Tc 1.0038  Tw (illustrated in Exhibit 2. As Sherlock Holmes himself might say,) TjT* 0.4014  Tc 2.6736  Tw (\223Well done, Watson. Now, how can we implement the) TjT* /F2 9  Tf0.5077  Tc 0  Tw (argument<Pmf>) Tj76.8 0  TD /F4 10.2  Tf0.45  Tc (, ) Tj6.6 0  TD /F2 9  Tf0.4909  Tc (result<Pmf>) Tj68.4 0  TD /F4 10.2  Tf0.2904  Tc 0.1596  Tw (and ) Tj19.2 0  TD /F2 9  Tf0.4909  Tc 0  Tw (class_<Pmf>) Tj68.4 0  TD /F4 10.2  Tf0.2749  Tc (meta-) Tj-239.4 -12  TD -0.2929  Tc (functions?\224) Tj0 -18  TD /F0 12  Tf-0.0084  Tc 0.0684  Tw (Reviewing the Evidence) TjT* /F4 10.2  Tf0.113  Tc 0.337  Tw (The ) Tj19.2 0  TD /F2 9  Tf0.0923  Tc 0  Tw (argument<Pmf>) Tj75 0  TD /F4 10.2  Tf-0.0199  Tc 1.0699  Tw (meta-function shown in Exhibit 4 works) Tj-94.2 -12  TD -0.3074  Tc 0.6974  Tw (perfectly, but only if your name is Harry Potter. Plodding detectives) Tj0 -12  TD -0.1266  Tc 1.1766  Tw (\(and C++ compilers\) can\222t be expected to perform magic. I was) TjT* -0.286  Tc -0.014  Tw (puzzled. Then I spotted something odd among the evidence:) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (template<typename Result, typename Class,) Tj48.6 -12  TD (typename Arg>) Tj-48.6 -12  TD (struct argument {) Tj10.8 -12  TD (typedef Arg type;) Tj-10.8 -12  TD (};) Tj24.6 -12  TD 0 0 0 rg /F10 10.2  Tf-0.0924  Tc -0.0576  Tw (Exhibit 6: A meta-function for clairvoyants.) Tj-39 -19.8  TD /F4 10.2  Tf-0.0825  Tc 1.2825  Tw (Here\222s a meta-function that extracts the parameter type without) Tj0 -12  TD -0.0334  Tc 1.1925  Tw (using magic. It just needs a little clairvoyance. If you know in) TjT* 0.3048  Tc 0.9252  Tw (advance what the parameter type is you can use this meta-) TjT* 0.2026  Tc 0.9074  Tw (function to generate the type you need. The heroic sleuth in) TjT* 0.4524  Tc 0.8643  Tw (detective novels may seem to be clairvoyant at times but) TjT* -0.0831  Tc 0.0831  Tw (programmers are not that clever \(not even pizza-stuffed, caffeine-) TjT* -0.0209  Tc 0.4709  Tw (soaked ) Tj30.6 0  TD /F6 10.2  Tf-0.358  Tc 0  Tw (real) Tj18 0  TD /F4 10.2  Tf-0.1179  Tc (programmers\).) Tj237.6 708  TD -0.0697  Tc -0.2303  Tw (My search for the ) Tj72.6 0  TD /F2 9  Tf0  Tc 0  Tw (argument<Pmf>) Tj72.6 0  TD /F4 10.2  Tf-0.1398  Tc -0.1602  Tw (meta-function had run up a) Tj-156 -12  TD -0.1189  Tc -0.585  Tw (blind alley. It was late. I was tired. I was getting desperate. And then) Tj0 -12  TD -0.1165  Tc -0.1426  Tw (it hit me. We were looking for a meta-function with one parameter) TjT* -0.1771  Tc -0.3547  Tw (\(like the magical one\), but to implement it we need three parameters) TjT* -0.1295  Tc 0.2045  Tw (\(like the one for clairvoyants\). We need a ) Tj167.4 0  TD /F6 10.2  Tf-0.1051  Tc 0  Tw (specialisation) Tj55.2 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-208.8 -16.2  TD /F2 9  Tf0  Tc (// Declaration of general template) Tj0 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(template<typename Pmf> struct argument;) TjT* 0 0 0 rg /F2 9  Tf(// Partial specialisation for pointers to) TjT* (// member functions) TjT* 0.2 0.2 0.2 rg /F5 9  Tf(template<typename Result, typename Class,) Tj48.6 -12  TD (typename Arg>) Tj-48.6 -12  TD (struct argument<Result \(Class::*\)\(Arg\)> {) Tj10.8 -12  TD (typedef Arg type;) Tj-10.8 -12  TD (};) Tj29.4 -12  TD 0 0 0 rg /F10 10.2  Tf-0.0832  Tc 0.0532  Tw (Exhibit 7: Extracting the parameter type.) Tj-43.2 -19.8  TD /F4 10.2  Tf0.6377  Tc 0.7551  Tw (The specialisation tells the compiler how to instantiate) Tj0 -12  TD /F2 9  Tf-0.0462  Tc 0  Tw (argument<Pmf>) Tj72.6 0  TD /F4 10.2  Tf-0.1233  Tc -0.0267  Tw (when ) Tj24.6 0  TD /F2 9  Tf0  Tc 0  Tw (Pmf) Tj19.2 0  TD /F4 10.2  Tf-0.1108  Tc 0.5608  Tw (is a pointer to a member function of) Tj-116.4 -12  TD -0.0778  Tc 0.9642  Tw (any class, taking a single parameter of any type and returning a) Tj0 -12  TD -0.0378  Tc -0.1122  Tw (result of any type.) Tj10.8 -12  TD 0.0531  Tc 4.4769  Tw (The same technique works for the) Tj0  Tc 0.45  Tw ( ) Tj169.8 0  TD /F2 9  Tf0.1091  Tc 0  Tw (result<Pmf>) Tj67.8 0  TD /F4 10.2  Tf0.2904  Tc (and) Tj-248.4 -12  TD /F2 9  Tf-0.2182  Tc (class_<Pmf>) Tj58.8 0  TD /F4 10.2  Tf-0.2922  Tc -0.2864  Tw (meta-functions, too. In each case, the general template) Tj-58.8 -12  TD -0.3078  Tc 0.5579  Tw (takes one parameter, but the specialisation takes three. The compiler) Tj0 -12  TD -0.293  Tc 0.3612  Tw (performs a form of pattern matching to break down a single pointer-) TjT* -0.2897  Tc -0.0317  Tw (to-member-function type into its three components. For example:) Tj13.8 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (typedef result<) Tj43.2 -12  TD (void \(Observer::*\)\(int\)>::type Result;) Tj-43.2 -12  TD (Result* null_pointer = 0;  ) Tj145.8 0  TD 0 0 0 rg /F2 9  Tf(// Result is void) Tj-137.4 -15  TD /F10 10.2  Tf-0.0792  Tc -0.0708  Tw (Exhibit 8: Using the ) Tj87.6 0  TD /F5 10.2  Tf-0.12  Tc 0  Tw (result<Pmf>) Tj68.4 0  TD /F10 10.2  Tf-0.0957  Tc (meta-function.) Tj-178.2 -16.8  TD /F4 10.2  Tf-0.2836  Tc 1.0336  Tw (When it sees the ) Tj70.2 0  TD /F2 9  Tf-0.1636  Tc 0  Tw (result<Pmf>) Tj60.6 0  TD /F4 10.2  Tf-0.272  Tc 1.322  Tw (template being used the compiler) Tj-130.8 -12  TD -0.2193  Tc 1.1193  Tw (compares the template argument \(pointer-to-member-of-Observer\)) Tj0 -12  TD -0.1646  Tc 1.0646  Tw (with the template parameter of the specialisation \(any pointer-to-) TjT* -0.3195  Tc 0.9945  Tw (member-function\). In this case the argument matches the parameter) TjT* -0.2718  Tc 0.2718  Tw (and the compiler deduces ) Tj101.4 0  TD /F2 9  Tf-0.2727  Tc 1.4727  Tw (Result = void) Tj69 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (, ) Tj5.4 0  TD /F2 9  Tf-0.2571  Tc 1.4571  Tw (Class = Observer) Tj85.2 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (,) Tj-261 -12  TD /F2 9  Tf-0.3429  Tc 0.9429  Tw (Arg = int) Tj48 0  TD /F4 10.2  Tf-0.2492  Tc 0.1849  Tw (. The compiler then instantiates the specialisation which) Tj-48 -12  TD -0.3511  Tc 0.2011  Tw (defines ) Tj29.4 0  TD /F2 9  Tf-0.2167  Tc 0.2167  Tw (result<void \(Observer::*\)\(int\)>::type) Tj194.4 0  TD /F4 10.2  Tf-0.3483  Tc 0.1983  Tw (as ) Tj10.2 0  TD /F2 9  Tf-0.15  Tc 0  Tw (void) Tj20.4 0  TD /F4 10.2  Tf(.) Tj-254.4 -18  TD /F0 12  Tf-0.0016  Tc -0.2384  Tw (The Case is Closed) Tj0 -18  TD /F4 10.2  Tf-0.1057  Tc 0.0843  Tw (So that\222s it. The crime is solved. All that\222s left is to prepare a case) Tj0 -12  TD -0.0851  Tc 1.1351  Tw (for presentation in court and let justice take its course. I\222ve had) TjT* 0.0912  Tc 0.9588  Tw (enough for one day. \223I\222m off to the pub, anyone want to join) TjT* -0.0542  Tc -0.0958  Tw (me?\224, I called across the office.) Tj10.8 -12  TD -0.2699  Tc -0.0438  Tw (\223Well, that was the usual warm, friendly response\224, I thought, as I) Tj-10.8 -12  TD -0.2535  Tc 0.2535  Tw (sat on my own with a pint. \223No thanks\224, \223Sorry, can\222t\224, \223Too busy\224) Tj0 -12  TD 0.0748  Tc 4.8002  Tw (they said. But something was still bothering me. Does) TjT* /F2 9  Tf-0.0632  Tc 0  Tw (Bound_Callback<Pmf>) Tj104.4 0  TD /F4 10.2  Tf-0.1486  Tc 0.4486  Tw (still work if we try to connect a handler) Tj-104.4 -12  TD -0.3078  Tc -0.2422  Tw (function taking an ) Tj69.6 0  TD /F2 9  Tf-0.4  Tc 0  Tw (int) Tj17.4 0  TD /F4 10.2  Tf-0.3411  Tc -0.1089  Tw (to an ) Tj20.4 0  TD /F2 9  Tf-0.24  Tc 0  Tw (Event) Tj27.6 0  TD /F4 10.2  Tf-0.3117  Tc -0.2383  Tw (that publishes a ) Tj59.4 0  TD /F2 9  Tf-0.12  Tc 0  Tw (short) Tj26.4 0  TD /F4 10.2  Tf-0.4402  Tc -0.3098  Tw (? And what) Tj-220.8 -12  TD -0.0773  Tc 0.3273  Tw (if we need to connect an ) Tj102.6 0  TD /F2 9  Tf0  Tc 0  Tw (Event<Arg>) Tj57 0  TD /F4 10.2  Tf-0.0806  Tc 0.3806  Tw (to something other than a) Tj-159.6 -12  TD -0.2241  Tc -0.2859  Tw (member function \226 like a non-member function or a function object?) Tj10.8 -12  TD 0.2256  Tc 0.2244  Tw (These thoughts were still churning over in my mind when,) Tj-10.8 -12  TD -0.0523  Tc 0.5023  Tw (sometime after midnight, I tumbled into bed and soon fell into a) Tj0 -12  TD -0.1092  Tc -0.0408  Tw (fitful sleep.) Tj229.8 -12  TD /F8 10.2  Tf0.072  Tc -0.516  Tw (Phil Bass) Tj-117.6 -12  TD /F2 9  Tf0  Tc 0  Tw (phil@stoneymanor.demon.co.uk) Tj-112.2 -18  TD /F0 12  Tf-0.018  Tc (References) Tj0 -18  TD /F4 10.2  Tf0.2844  Tc 0.3906  Tw ([1] Phil Bass, \223Implementing the Observer Pattern in C++\224,) Tj10.8 -12  TD /F6 10.2  Tf-0.1325  Tc 0.5825  Tw (Overload 53) Tj50.4 0  TD /F4 10.2  Tf-0.123  Tc 0.273  Tw (, February 2003.) Tj-61.2 -12  TD -0.137  Tc -0.013  Tw ([2] See ) Tj30.6 0  TD /F2 9  Tf0  Tc 0  Tw (www.boost.org) TjETendstreamendobj91 0 obj11013endobj89 0 obj<</Type /Page/Parent 72 0 R/Resources <</Font 92 0 R/ProcSet 2 0 R>>/Contents 90 0 R>>endobj92 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F8 31 0 R/F10 65 0 R>>endobj95 0 obj<</Length 96 0 R>>stream
BT552.6 42  TD0 0 0 rg /F0 10.8  Tf0.0912  Tc 0  Tw (21) Tj-215.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj-294 -38.4  TD /F1 18  Tf0.0052  Tc -0.0592  Tw (C++ Interface Classes \226 An) Tj0 -20.4  TD 0  Tc 0  Tw (Introduction) Tj0 -12  TD /F0 10.2  Tf-0.1832  Tc 0.0092  Tw (by Mark Radford) Tj-13.8 -18  TD /F4 10.2  Tf0.0987  Tc 1.2513  Tw (Class hierarchies that have run-time polymorphism as one of) Tj0 -12  TD 0.1234  Tc 0.1766  Tw (their prominent characteristics are a common design feature in) TjT* 0.7542  Tc 0.5625  Tw (C++ programs, and with good design, it should not be) TjT* 0.7199  Tc 0.6901  Tw (necessary for users of a class to be concerned with its) TjT* 0.1086  Tc 0.9414  Tw (implementation details. One of the mechanisms for achieving) TjT* 0.1058  Tc 1.3042  Tw (this objective is the separation of a class\222s interface from its) TjT* 0.3981  Tc 1.1319  Tw (implementation. Some programming languages, e.g. Java,) TjT* 0.1371  Tc 0.4929  Tw (have a mechanism available in the language for doing this. In) TjT* 0.128  Tc 0.322  Tw (Java, an ) Tj37.2 0  TD /F6 10.2  Tf0.0377  Tc 0  Tw (interface) Tj40.2 0  TD /F4 10.2  Tf0.1378  Tc 0.3122  Tw (can contain only method signatures. In C++) Tj-77.4 -12  TD 0.1151  Tc 0.6349  Tw (however, there is no such first class language feature, and the) Tj0 -12  TD 0.113  Tc 0.937  Tw (mechanisms already in the language must be used to emulate) TjT* 0.1037  Tc 0.3463  Tw (interfaces as best as can be achieved. To this end, an ) Tj226.2 0  TD /F6 10.2  Tf0.171  Tc 0  Tw (interface) Tj-226.2 -12  TD 0.12  Tc (class) Tj24.6 0  TD /F4 10.2  Tf0.1148  Tc 0.8152  Tw (is a class used to ) Tj78.6 0  TD /F6 10.2  Tf0.1122  Tc 0  Tw (hoist) Tj24 0  TD /F4 10.2  Tf0.12  Tc 1.23  Tw (the polymorphic interface \226 i.e.) Tj-127.2 -12  TD 0.3619  Tc 1.0881  Tw (pure virtual function declarations \226 into a base class. The) Tj0 -12  TD 0.1448  Tc 0.5233  Tw (programmer using a class hierarchy can then do so via a base) TjT* 0.2283  Tc 1.0883  Tw (class that communicates only the interface of classes in the) TjT* 0.0335  Tc 0  Tw (hierarchy.) Tj4.2 -18  TD /F0 12  Tf-0.069  Tc 0.429  Tw (Example Hierarchy) Tj-4.2 -18  TD /F4 10.2  Tf-0.0747  Tc 0.7247  Tw (The much used ) Tj66 0  TD /F6 10.2  Tf0.0407  Tc 0  Tw (shape) Tj27 0  TD /F4 10.2  Tf-0.0998  Tc 0.9098  Tw (hierarchy example serves well here. Let\222s) Tj-93 -12  TD 0.0369  Tc 1.2312  Tw (assume for the sake of illustration, that we have two kinds of) Tj0 -12  TD 0.2843  Tc 0.9157  Tw (shape: arc and line. The hierarchy therefore, contains three) TjT* /F6 10.2  Tf0.3468  Tc 0  Tw (abstractions) Tj54.6 0  TD /F4 10.2  Tf0.375  Tc 0.375  Tw (: the ) Tj24.6 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (arc) Tj23.4 0  TD /F4 10.2  Tf0.2904  Tc 0.1596  Tw (and ) Tj19.2 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (line) Tj30 0  TD /F4 10.2  Tf0.372  Tc 0.878  Tw (concrete classes, and the) Tj-151.8 -12  TD 0.2413  Tc 0.2087  Tw (generalisation ) Tj64.2 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf0.2023  Tc 1.0192  Tw (. From now on, I\222ll talk mainly about) Tj-96.6 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj16.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj27 0  TD /F4 10.2  Tf-0.067  Tc 0.117  Tw (only \226 the latter serving as an illustration of an) Tj-76.2 -12  TD -0.0461  Tc 1.0961  Tw (implementation. These two classes, in fragment form, look like) Tj0 -12  TD -0.0349  Tc 0  Tw (this:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual ~shape\(\);) Tj0 -12  TD (virtual void move_x\(distance x\) = 0;) TjT* (virtual void move_y\(distance y\) = 0;) TjT* (virtual void rotate\(angle rotation\) = 0;) TjT* 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj0 -24  TD (class line : public shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual ~line\(\);) Tj0 -12  TD (virtual void move_x\(distance x\);) TjT* (virtual void move_y\(distance y\);) TjT* (virtual void rotate\(angle rotation\);) Tj-10.8 -12  TD (private:) Tj10.8 -12  TD (point end_point_1, end_point_2;) Tj0 -12  TD 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.087  Tc 0.537  Tw (The ) Tj18.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj33 0  TD /F4 10.2  Tf-0.0886  Tc 0.7386  Tw (abstraction is expressed here as an ) Tj144.6 0  TD /F6 10.2  Tf-0.0186  Tc 0.4686  Tw (interface class) Tj62.4 0  TD /F4 10.2  Tf0.3  Tc 0  Tw (\226) Tj-258.6 -12  TD -0.0518  Tc 0.5685  Tw (it contains nothing but pure virtual function declarations. This is) Tj0 -12  TD -0.0795  Tc 0.4795  Tw (as close as we can get in C++ to expressing an interface. Adding) TjT* -0.1179  Tc 0.0679  Tw (to the terminology, classes such as ) Tj139.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj27 0  TD /F4 10.2  Tf-0.1813  Tc 0.0313  Tw (\(and ) Tj19.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (arc) Tj18 0  TD /F4 10.2  Tf-0.0465  Tc 0.0965  Tw (\) are known as) Tj-204.6 -12  TD /F6 10.2  Tf-0.141  Tc 0.591  Tw (implementation classes) Tj93 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (.) Tj-81.6 -12  TD 0.2348  Tc 1.8516  Tw (Now let\222s assume this hierarchy is to be used in a two) Tj-11.4 -12  TD -0.0977  Tc 0.0977  Tw (dimensional drawing package. It seems reasonable to suggest that) Tj0 -12  TD 0.14  Tc 0.11  Tw (in this package, ) Tj69.6 0  TD /F2 10.2  Tf0.1371  Tc 0  Tw (drawing) Tj47.4 0  TD /F4 10.2  Tf0.166  Tc 0.284  Tw (may be another useful abstraction.) Tj157.8 708  TD /F2 10.2  Tf0.0514  Tc 0  Tw (drawing) Tj46.2 0  TD /F4 10.2  Tf0.0918  Tc 0.3582  Tw (could be expressed as an interface class, like in this) Tj-46.2 -12  TD -0.0731  Tc 0  Tw (fragment:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class drawing {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual ~drawing\(\);) Tj0 -12  TD -0.0158  Tc 0.0158  Tw (virtual void add\(shape* additional_shape\)) Tj215.4 -12  TD 0  Tc 0  Tw (= 0;) Tj-215.4 -12  TD 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.2284  Tc 0.8966  Tw (Besides the virtual destructor, only one member function of) Tj0 -12  TD /F2 10.2  Tf-0.0343  Tc 0  Tw (drawing) Tj46.2 0  TD /F4 10.2  Tf-0.1911  Tc 0.9411  Tw (\226 the ) Tj25.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (add\(\)) Tj33.6 0  TD /F4 10.2  Tf-0.0013  Tc 1.1513  Tw (virtual function \226 is shown. Note that) Tj-105 -12  TD /F2 10.2  Tf0.3086  Tc 0  Tw (drawing) Tj48.6 0  TD /F4 10.2  Tf0.2769  Tc 0.7731  Tw (does not collaborate with any implementation of) Tj-48.6 -12  TD /F2 10.2  Tf0.48  Tc 0  Tw (shape) Tj33 0  TD /F4 10.2  Tf0.461  Tc 0.6747  Tw (, but only with the interface class ) Tj159.6 0  TD /F2 10.2  Tf0.6  Tc 0  Tw (shape) Tj33.6 0  TD /F4 10.2  Tf0.5301  Tc 0.5199  Tw (. This is) Tj-226.2 -12  TD -0.1185  Tc 0.9685  Tw (sometimes known as ) Tj89.4 0  TD /F6 10.2  Tf-0.0835  Tc 1.1335  Tw (abstract coupling) Tj75.6 0  TD /F4 10.2  Tf-0.3  Tc 0.15  Tw (\226 ) Tj8.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (drawing) Tj46.2 0  TD /F4 10.2  Tf-0.0215  Tc 1.0715  Tw (can talk to) Tj-219.6 -12  TD -0.0909  Tc 0.0609  Tw (any class that supports the ) Tj107.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf0.017  Tc (interface.) Tj-139.8 -18  TD /F0 12  Tf-0.024  Tc (Benefits) Tj0 -18  TD /F4 10.2  Tf-0.0864  Tc 1.0164  Tw (Having explained the technique of ) Tj145.8 0  TD /F6 10.2  Tf-0.1343  Tc 0  Tw (hoisting) Tj35.4 0  TD /F4 10.2  Tf-0.0394  Tc 1.0894  Tw (a class\222s interface, I) Tj-181.2 -12  TD 0.0503  Tc 1.2663  Tw (need to explain why developers should be interested in doing) Tj0 -12  TD -0.0838  Tc 0.0838  Tw (this. There are three points:) Tj0 -16.2  TD 0.3  Tc 0  Tw (1) Tj11.4 0  TD 0.2585  Tc 0.9415  Tw (Hoisting the \(common\) interface of classes in a run-time) Tj0 -12  TD 0.03  Tc 0.42  Tw (polymorphic hierarchy affords a clear separation of interface) TjT* -0.1543  Tc -0.4624  Tw (from implementation. Further, doing so helps to underpin the use) TjT* 0.0528  Tc 0.3972  Tw (of abstraction, because the interface class expresses only the) TjT* -0.1282  Tc 0.1282  Tw (capabilities of the abstracted entity.) Tj-11.4 -19.8  TD 0.3  Tc 0  Tw (2) Tj11.4 0  TD 0.0758  Tc 0.5076  Tw (It follows on from the above, that new implementations can) Tj0 -12  TD 0.0918  Tc 0.4249  Tw (be added without changing existing code. For example, it is) TjT* 0.4237  Tc 2.2763  Tw (most likely that drawing will initially have only one) TjT* 0.2065  Tc 0.3293  Tw (implementation class, but because other code is dependent) TjT* 0.0755  Tc -0.3969  Tw (only on its interface class, new implementations ) Tj199.2 0  TD /F6 10.2  Tf0.0904  Tc 0  Tw (can) Tj16.8 0  TD /F4 10.2  Tf0.1718  Tc -0.9218  Tw (easily be) Tj-216 -12  TD 0.055  Tc -0.055  Tw (added in the future. ) Tj-11.4 -16.2  TD 0.3  Tc 0  Tw (3) Tj11.4 0  TD -0.0775  Tc 0.1675  Tw (Consider the physical structure of C++ code with regard to the) Tj0 -12  TD -0.05  Tc -0.1  Tw (interface class, its implementation classes, and classes \(such as) TjT* /F2 10.2  Tf0.3086  Tc 0  Tw (drawing) Tj45 0  TD /F4 10.2  Tf0.2426  Tc 0.1324  Tw (\) that use it. Assuming common C++ practice is) Tj-45 -12  TD -0.0933  Tc -0.2067  Tw (followed, the definition of ) Tj106.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf-0.1161  Tc -0.2339  Tw (will have a header file \226 let\222s) Tj-138.6 -12  TD -0.1639  Tc 0.0139  Tw (assume it\222s called ) Tj72 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape.hpp) Tj55.8 0  TD /F4 10.2  Tf-0.0186  Tc -0.3314  Tw (\226 all to itself, as will ) Tj82.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (drawing) Tj-210 -12  TD /F4 10.2  Tf-0.0522  Tc -0.0978  Tw (\(i.e. ) Tj18 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (drawing.hpp) Tj66 0  TD /F4 10.2  Tf-0.1069  Tc -0.0431  Tw (, using the same convention\). Now, owing) Tj-84 -12  TD -0.1005  Tc -0.3768  Tw (to the physical structure of C++ \(that is, the structure it inherited) Tj0 -12  TD -0.1141  Tc -0.0359  Tw (from C\), if anything in the ) Tj106.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape.hpp) Tj56.4 0  TD /F4 10.2  Tf-0.126  Tc -0.024  Tw (header file is changed,) Tj-163.2 -12  TD -0.0597  Tc 0.4347  Tw (anything that depends on it \226 such as ) Tj154.8 0  TD /F2 10.2  Tf-0.0655  Tc 0  Tw (drawing.hpp) Tj69.6 0  TD /F4 10.2  Tf0.0522  Tc 0.3978  Tw (\226 must) Tj-224.4 -12  TD -0.0654  Tc 0.182  Tw (recompile. In large systems where build times are measured in) Tj0 -12  TD 0.2894  Tc 0.9606  Tw (hours \(or even days\), this can be a significant overhead.) TjT* -0.1344  Tc 0.5844  Tw (However, because ) Tj75.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj33 0  TD /F4 10.2  Tf-0.1311  Tc 0.4311  Tw (is an interface class, ) Tj84 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (drawing) Tj44.4 0  TD /F4 10.2  Tf0.0776  Tc (\(for) Tj-237 -12  TD 0.2597  Tc 3.6403  Tw (example\) has no physical dependency on any of the) Tj0 -12  TD -0.0641  Tc -0.5526  Tw (implementation detail, and it is in the implementation detail that) TjT* -0.0635  Tc 0.0935  Tw (change is likely to occur \(assuming some thought has been put) TjT* -0.071  Tc -0.079  Tw (into the design of ) Tj72 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.1224  Tc -0.0276  Tw (\222s interface\).) Tj-113.4 -20.4  TD /F0 12  Tf-0.0037  Tc 0.0637  Tw (Strengthening the Separation) Tj0 -23.4  TD /F4 10.2  Tf-0.1186  Tc 0.2916  Tw (Returning to the first point above for a moment, there is a way by) Tj0 -12  TD -0.0352  Tc 1.1518  Tw (which we can strengthen the logical separation further: we can) TjT* -0.1233  Tc -0.0267  Tw (make ) Tj25.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.0814  Tc 0.3814  Tw (\222s implementation classes into ) Tj125.4 0  TD /F6 10.2  Tf-0.0683  Tc 1.1183  Tw (implementation only) Tj-180.6 -12  TD /F4 10.2  Tf0.038  Tc 1.1453  Tw (classes. This means that in the implementation classes, all the) Tj0 -12  TD 0.0424  Tc 0.8876  Tw (virtual member functions are made ) Tj153 0  TD /F6 10.2  Tf0.0719  Tc 0  Tw (private) Tj28.8 0  TD /F4 10.2  Tf0.117  Tc 0.933  Tw (, leaving only their) Tj-181.8 -12  TD -0.0781  Tc 0.6781  Tw (constructors publicly accessible. The ) Tj153 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj27.6 0  TD /F4 10.2  Tf-0.122  Tc 0.972  Tw (class then looks like) Tj-180.6 -12  TD -0.1549  Tc 0  Tw (this:) TjETendstreamendobj96 0 obj12756endobj93 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font 97 0 R/ProcSet 2 0 R>>/Contents 95 0 R>>endobj97 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R>>endobj99 0 obj<</Length 100 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (22) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj14.4 -40.8  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class line : public shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (line\(point end_point_1, point end_point_2\);) Tj0 -12  TD 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (virtual ~line\(\);) Tj0 -12  TD (virtual void move_x\(distance x\);) TjT* (virtual void move_y\(distance y\);) TjT* (virtual void rotate\(angle rotation\);) TjT* 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0801  Tc -0.0699  Tw (Now, the only thing users can do with ) Tj154.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj26.4 0  TD /F4 10.2  Tf-0.1074  Tc 0.1574  Tw (is create instances of) Tj-180.6 -12  TD -0.0621  Tc -0.0879  Tw (it. All usage must be via its interface \226 i.e. ) Tj171 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.0743  Tc -0.0757  Tw (, thus enforcing) Tj-201 -12  TD 0.0358  Tc 1.1342  Tw (a stronger interface/implementation separation. Before leaving) Tj0 -12  TD -0.0768  Tc 1.1268  Tw (this topic, it is important to get something straight: the point of) TjT* 0.0119  Tc 1.0381  Tw (enforcing the interface/implementation separation is ) Tj222 0  TD /F6 10.2  Tf-0.1452  Tc 0  Tw (not) Tj16.8 0  TD /F4 10.2  Tf0.1048  Tc 0.9452  Tw (to tell) Tj-238.8 -12  TD -0.1001  Tc 0.8774  Tw (users what to do. Rather, the objective is to underpin the logical) Tj0 -12  TD 0.0795  Tc 0.7705  Tw (separation \226 the ) Tj71.4 0  TD /F6 10.2  Tf0.1356  Tc 0  Tw (code) Tj23.4 0  TD /F4 10.2  Tf0.0054  Tc 1.3446  Tw (now explains that the key abstraction is) Tj-94.8 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.0973  Tc 1.1473  Tw (, and that ) Tj43.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj28.2 0  TD /F4 10.2  Tf-0.1196  Tc 1.4096  Tw (serves to provide an implementation of) Tj-101.4 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-30 -18  TD /F0 12  Tf0.0024  Tc -0.2424  Tw (Mixin Interfaces) Tj0 -18  TD /F4 10.2  Tf0.6498  Tc 1.5252  Tw (As a general design principle, all classes should have) Tj0 -12  TD -0.0832  Tc 0.2666  Tw (responsibilities that represent a primary design role played by the) TjT* 0.6599  Tc 2.2759  Tw (class. However, sometimes a class must also express) TjT* 0.1606  Tc 0.9894  Tw (functionality representing responsibilities that fall outside its) TjT* -0.0392  Tc 1.2092  Tw (primary design role. In such cases, the need for partitioning of) TjT* -0.0851  Tc 0.7151  Tw (this functionality is pressing, and interface classes have a part to) TjT* -0.3029  Tc 0  Tw (play.) Tj11.4 -12  TD -0.0993  Tc -0.0507  Tw (A class that expresses this kind of extra functionality is called a) Tj-11.4 -12  TD /F6 10.2  Tf0.2671  Tc 0  Tw (mixin) Tj24 0  TD /F4 10.2  Tf0.2862  Tc 1.3093  Tw (. For example, it is easy to imagine there might be a) Tj-24 -12  TD 0.2642  Tc 0.8524  Tw (requirement to store and retrieve the state of shape objects.) Tj0 -12  TD -0.0991  Tc -0.0509  Tw (However, storage and retrieval functionality is not a responsibility) TjT* 0.035  Tc 0.415  Tw (of shape in the application domain model. Therefore, a feasible) TjT* -0.0871  Tc -0.0629  Tw (design is as follows:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class serialisable {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual void load\(istream& in\) = 0;) Tj0 -12  TD (virtual void save\(ostream& out\) = 0;) Tj-10.8 -12  TD (protected:) Tj10.8 -12  TD (~serialisable\(\);) Tj-10.8 -12  TD (};) Tj0 -24  TD (class shape : public serialisable {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual ~shape\(\);) Tj0 -12  TD (virtual void move_x\(distance x\) = 0;) TjT* (virtual void move_y\(distance y\) = 0;) TjT* (virtual void rotate\(angle rotation\) = 0;) TjT* 0 0 0 rg /F2 9  Tf(// No declarations of load\(\) or save\(\) in) TjT* (// this class) TjT* (// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj0 -24  TD (class line : public shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (line\(point end_point_1, point end_point_2\);) Tj0 -12  TD 0 0 0 rg /F2 9  Tf(//...) Tj264 708  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (virtual ~line\(\);) Tj0 -12  TD (virtual void move_x\(distance x\);) TjT* (virtual void move_y\(distance y\);) TjT* (virtual void rotate\(angle rotation\);) TjT* (virtual void load\(istream& in\);) TjT* (virtual void save\(ostream& out\);) TjT* 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf-0.2808  Tc 1.1808  Tw (This approach is intrusive to a degree because ) Tj187.8 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (serialisable) Tj69 0  TD /F4 10.2  Tf-0.9822  Tc (\222s) Tj-256.8 -12  TD -0.0993  Tc 0.9779  Tw (virtual member functions must be declared in ) Tj191.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj24 0  TD /F4 10.2  Tf-0.0495  Tc 1.0995  Tw (\222s interface.) Tj-215.4 -12  TD -0.2686  Tc 1.1852  Tw (However, at least there is a separation in that ) Tj183.6 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (serialisable) Tj73.2 0  TD /F4 10.2  Tf-0.4017  Tc (is) Tj-256.8 -12  TD -0.2549  Tc -0.0151  Tw (kept separate from the crucial ) Tj114.6 0  TD /F2 10.2  Tf-0.24  Tc 0  Tw (shape) Tj31.2 0  TD /F4 10.2  Tf-0.2423  Tc (abstraction.) Tj-135 -12  TD -0.3411  Tc -0.1089  Tw (Note that ) Tj36 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (serialisable) Tj69.6 0  TD /F4 10.2  Tf-0.3669  Tc -0.3831  Tw (does not have a public virtual destructor) Tj-116.4 -12  TD -0.1016  Tc 0.2243  Tw (\226 its destructor is protected and non-virtual. It is not intended that) Tj0 -12  TD -0.3  Tc -0.15  Tw (pointers to ) Tj41.4 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (serialisable) Tj70.8 0  TD /F4 10.2  Tf-0.2715  Tc -0.4785  Tw (are held and passed around in a program) Tj-112.2 -12  TD -0.3387  Tc 0.0887  Tw (\226 i.e. it is not a ) Tj57 0  TD /F6 10.2  Tf-0.3193  Tc 0  Tw (usage) Tj24 0  TD /F4 10.2  Tf-0.2985  Tc -0.0515  Tw (type, that\222s the role of the ) Tj98.4 0  TD /F2 10.2  Tf-0.48  Tc 0  Tw (shape) Tj31.2 0  TD /F4 10.2  Tf-0.3092  Tc 0.1592  Tw (class. Making) Tj-210.6 -12  TD -0.2998  Tc 0.1498  Tw (the destructor non-virtual and not publicly accessible allows the code) Tj0 -12  TD -0.2885  Tc -0.0615  Tw (to state this explicitly, without recourse to any further documentation.) Tj10.8 -12  TD 0.0524  Tc 0.7976  Tw (Often mixin functionality is added to a class using multiple) Tj-10.8 -12  TD -0.2901  Tc -0.4599  Tw (inheritance. Here there is an analogy with Java, in which there is direct) Tj0 -12  TD -0.2981  Tc 0.2481  Tw (language support for interfaces. In Java,  a class can inherit from one) TjT* -0.3373  Tc -0.4127  Tw (other class, but can implement as many interfaces as desired. The same) TjT* -0.3194  Tc -0.1806  Tw (thing can be emulated in C++ using interface classes, but in C++ there) TjT* -0.2778  Tc -0.215  Tw (is an added twist \226 C++ has ) Tj105 0  TD /F6 10.2  Tf-0.1852  Tc 0  Tw (private) Tj28.8 0  TD /F4 10.2  Tf-0.282  Tc -0.318  Tw (inheritance to offer. This approach) Tj-133.8 -12  TD -0.331  Tc -0.0918  Tw (comes in handy particularly when the usage type is outside the control) Tj0 -12  TD -0.3311  Tc -0.4617  Tw (of the programmer \226 for example, because it is part of a third party API.) TjT* -0.2817  Tc -0.335  Tw (For example, consider a small framework where notifications are sent) TjT* -0.3107  Tc -0.1993  Tw (out by objects of type ) Tj82.2 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (notifier) Tj46.2 0  TD /F4 10.2  Tf-0.277  Tc -0.353  Tw (, and received by classes supporting) Tj-128.4 -12  TD -0.3149  Tc 0.3149  Tw (an interface defined by ) Tj90.6 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (notifiable) Tj57.6 0  TD /F4 10.2  Tf-0.2696  Tc 0.1196  Tw (. The two interface classes \(or) Tj-148.2 -12  TD -0.3327  Tc 0.1827  Tw (fragment of, in the case of ) Tj101.4 0  TD /F2 10.2  Tf-0.42  Tc 0  Tw (notifier) Tj46.2 0  TD /F4 10.2  Tf-0.3225  Tc 0.1725  Tw (\) are defined as follows:) Tj-133.8 -16.2  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class notifiable {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual void update\(\) = 0;) Tj-10.8 -12  TD (protected:) Tj10.8 -12  TD (~notifiable\(\);) Tj-10.8 -12  TD (};) Tj0 -12  TD (class notifier {) TjT* (public:) Tj10.8 -12  TD (virtual void register_client\(notifiable* o\)) Tj216 -12  TD (= 0;) Tj-216 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-13.8 -19.8  TD 0 0 0 rg /F4 10.2  Tf0.1653  Tc 0.9447  Tw (Now consider using a GUI toolkit that provides a base class) Tj0 -12  TD -0.1596  Tc 0.0096  Tw (called ) Tj26.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (window) Tj36 0  TD /F4 10.2  Tf-0.1038  Tc 0.2205  Tw (, from which all window classes are to be derived.) Tj-62.4 -12  TD -0.112  Tc 0.487  Tw (The programmer wishes to write a class called ) Tj191.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (my_window) Tj57 0  TD /F4 10.2  Tf-0.225  Tc (that) Tj-248.4 -12  TD -0.0843  Tc 0.8343  Tw (receives notifications from objects of type ) Tj177 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (notifier) Tj51.6 0  TD /F4 10.2  Tf-0.0209  Tc 0.7709  Tw (\226 such a) Tj-228.6 -12  TD -0.1001  Tc -0.0499  Tw (class could look like this:) Tj13.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class my_window : public window,) Tj97.2 -12  TD (private notifiable {) Tj-97.2 -12  TD (public:) Tj10.8 -12  TD (void register_for_notifications\() Tj162 -12  TD (notifier& n\) {) Tj-151.2 -12  TD (n.register_client\(this\);) Tj-10.8 -12  TD (}) Tj0 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-13.8 -12  TD 0 0 0 rg /F4 10.2  Tf0.0227  Tc 1.2844  Tw (Using private inheritance has rendered the notifiable interface) Tj0 -12  TD -0.0604  Tc 0.1504  Tw (inaccessible to clients, but allows ) Tj136.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (my_window) Tj57 0  TD /F4 10.2  Tf-0.0932  Tc 0.1432  Tw (use of it, because) TjETendstreamendobj100 0 obj10301endobj98 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 99 0 R>>endobj102 0 obj<</Length 103 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf-0.1092  Tc 0.8592  Tw (like anything else that\222s private to ) Tj142.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (my_window) Tj54 0  TD /F4 10.2  Tf-0.0693  Tc 0.9193  Tw (, its private base) Tj-196.2 -12  TD 0.1026  Tc 1.0224  Tw (classes are accessible in its member functions. This approach) Tj0 -12  TD -0.0827  Tc 1.3127  Tw (helps to strengthen the separation of concerns which the use of) TjT* -0.0823  Tc -0.0677  Tw (mixin functionality seeks to promote.) Tj0 -18  TD /F0 12  Tf0.0017  Tc -0.0417  Tw (Interface Class Emulation Issues) TjT* /F4 10.2  Tf-0.0432  Tc 0.0932  Tw (The fact that we have to consider emulation issues at all is owing) Tj0 -12  TD -0.0502  Tc 0.5002  Tw (to the fact that interfaces are being ) Tj146.4 0  TD /F6 10.2  Tf-0.0241  Tc 0  Tw (emulated) Tj39.6 0  TD /F4 10.2  Tf-0.009  Tc 0.859  Tw (rather than being a) Tj-186 -12  TD -0.0607  Tc 0.9723  Tw (first class language feature \226 all part of the fun of using C++! I) Tj0 -12  TD -0.0868  Tc -0.0032  Tw (think there are issues in two areas, i.e. those concerned with:) Tj0 -10.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F4 10.2  Tf-0.134  Tc 0.184  Tw (An interface class\222s interface) Tj-11.4 -10.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F4 10.2  Tf-0.0867  Tc 0.0867  Tw (Deriving from an interface class) Tj-11.4 -18  TD /F0 10.8  Tf0.0776  Tc -0.0736  Tw (An Interface Class\222s Interface) Tj0 -18  TD /F4 10.2  Tf-0.1122  Tc 0.1122  Tw (Consider the interface class ) Tj112.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf0.1644  Tc (:) Tj-129 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (virtual ~shape\(\);) Tj0 -12  TD (virtual void move_x\(distance x\) = 0;) TjT* (virtual void move_y\(distance y\) = 0;) TjT* (virtual void rotate\(angle rotation\) = 0;) TjT* 0 0 0 rg /F2 9  Tf(// other virtual function declarations...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0823  Tc 0.2323  Tw (If we write only the above, the compiler will step in and provide:) Tj0 -12  TD 0.062  Tc 1.1213  Tw (a copy assignment operator, a default constructor, and a copy) TjT* -0.1016  Tc 0.5516  Tw (constructor. I think we can safely say that, an interface class\222 run) TjT* 0.2184  Tc 1.0316  Tw (time polymorphic behaviour points to assignment semantics) TjT* 0.1102  Tc 1.0398  Tw (being inappropriate and irrelevant. Therefore, the assignment) TjT* -0.1026  Tc 0.0526  Tw (operator should be private and not implemented:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (shape& operator=\(const shape&\);) Tj-10.8 -12  TD (};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf0.4092  Tc 0.7908  Tw (Interface classes are stateless by their nature, so allowing) Tj0 -12  TD -0.089  Tc 0.339  Tw (assignment is harmless, but prohibiting it is a simple contribution) TjT* -0.0925  Tc -0.0575  Tw (to avoiding errors. ) Tj11.4 -12  TD -0.1252  Tc -0.3581  Tw (What about the default constructor and a copy constructor? Here) Tj-11.4 -12  TD -0.087  Tc -0.2015  Tw (we should just thank the compiler and take what is on offer, as this) Tj0 -12  TD -0.083  Tc -0.487  Tw (is the easiest way to avoid any complications. Note that declaration) TjT* 0.2682  Tc 0.1818  Tw (of constructors by the programmer has potential pitfalls. For) TjT* -0.0556  Tc 0.0256  Tw (example, if a copy constructor only is declared, then the compiler) TjT* -0.0899  Tc -0.0601  Tw (will not generate a default constructor. ) Tj0 -18  TD /F0 10.8  Tf0.1227  Tc -0.0687  Tw (Deriving From an Interface Class) TjT* /F4 10.2  Tf-0.0915  Tc 0.4415  Tw (Consider the following fragment that shows ) Tj181.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj27 0  TD /F4 10.2  Tf-0.0378  Tc 0.4878  Tw (being derived) Tj-208.2 -12  TD -0.1572  Tc 0.0072  Tw (from ) Tj21.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf-0.083  Tc -0.067  Tw (\(as one would expect\):) Tj-40.2 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class line : public shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (line\(int in_x1, int in_y1,) Tj27 -12  TD (int in_x2, int in_y2\)) Tj-16.2 -12  TD (: x1\(in_x1\), y1\(in_y1\),) Tj10.8 -12  TD (x2\(in_x2\), y2\(in_y2\) {}) Tj-21.6 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj264.6 708  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (int x1, y1, x2, y2;) Tj-10.8 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.3716  Tc 0.7641  Tw (The programmer has declared a constructor that initialises) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj24 0  TD /F4 10.2  Tf-0.0843  Tc 0.1915  Tw (\222s state, but not specified which of ) Tj141.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.1016  Tc 0.5516  Tw (\222s constructors is) Tj-195.6 -12  TD -0.1156  Tc 0.5156  Tw (to be called. As a result the compiler generates a call to ) Tj226.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape) Tj30 0  TD /F4 10.2  Tf-0.3822  Tc (\222s) Tj-256.8 -12  TD 0.4  Tc 0.725  Tw (default constructor. So far this is fine. Because ) Tj219.6 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (shape) Tj36.6 0  TD /F4 10.2  Tf0.7983  Tc (is) Tj-256.2 -12  TD -0.067  Tc 0.0027  Tw (stateless it doesn\222t matter how it gets initialised.) Tj11.4 -12  TD -0.0844  Tc 0.0094  Tw (However, that\222s not the end of the story ...) Tj0 -12  TD 0.0668  Tc 0.0832  Tw (It is a common design re-factoring in C++ \(and several other) Tj-11.4 -12  TD -0.2764  Tc -0.2009  Tw (languages\), to hoist common state out of concrete classes, and place it) Tj0 -12  TD 0.0295  Tc 0.2405  Tw (in a base class. So if common implementation is found between) TjT* /F2 10.2  Tf-0.48  Tc 0  Tw (shape) Tj28.8 0  TD /F4 10.2  Tf-0.355  Tc 0.605  Tw (\222s derived classes ) Tj69 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (line) Tj25.8 0  TD /F4 10.2  Tf-0.3096  Tc 0.1596  Tw (and ) Tj16.8 0  TD /F2 10.2  Tf-0.32  Tc 0  Tw (arc) Tj16.8 0  TD /F4 10.2  Tf-0.3123  Tc 0.5623  Tw (, rather than have a two tier) Tj-157.2 -12  TD -0.2965  Tc -0.3612  Tw (hierarchy, it is reasonable to have a three tier hierarchy. For the sake of) Tj0 -12  TD -0.3328  Tc -0.3572  Tw (an example, let\222s assume that it is necessary for all ) Tj187.2 0  TD /F2 10.2  Tf-0.36  Tc 0  Tw (shape) Tj28.8 0  TD /F4 10.2  Tf-0.3458  Tc -0.4042  Tw (s to maintain) Tj-216 -12  TD -0.3288  Tc 0.1788  Tw (a ) Tj6 0  TD /F6 10.2  Tf-0.3123  Tc -0.4377  Tw (proximity rectangle) Tj75 0  TD /F4 10.2  Tf-0.3192  Tc -0.4308  Tw (\226 i.e. if a point falls within the rectangle, the point) Tj-81 -12  TD -0.2835  Tc -0.3998  Tw (is considered to be in close proximity to the ) Tj163.8 0  TD /F2 10.2  Tf-0.36  Tc 0  Tw (shape) Tj28.8 0  TD /F4 10.2  Tf-0.3121  Tc -0.4379  Tw (. This functionality) Tj-192.6 -12  TD -0.3252  Tc 0.1152  Tw (can then, for example, be used to determine if a ) Tj181.8 0  TD /F2 10.2  Tf-0.36  Tc 0  Tw (shape) Tj30.6 0  TD /F4 10.2  Tf-0.2943  Tc 0.1443  Tw (object should) Tj-212.4 -12  TD -0.315  Tc -0.035  Tw (be selected when the user clicks the mouse near by.) Tj11.4 -12  TD -0.0716  Tc 0.2216  Tw (I\222m going to assume a suitable ) Tj127.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (rectangle) Tj57 0  TD /F4 10.2  Tf-0.0229  Tc 0.0729  Tw (class is in scope,) Tj-195.6 -12  TD 0.3122  Tc 5.5378  Tw (and introduce) Tj0  Tc 0.45  Tw ( ) Tj73.8 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (shape_impl) Tj73.2 0  TD /F4 10.2  Tf0.2484  Tc 6.0016  Tw (to contain the common) Tj-147 -12  TD -0.039  Tc 0  Tw (implementation.) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc (class shape_impl : public shape {) Tj0 -12  TD (private:) Tj10.8 -12  TD (virtual ~shape_impl\(\) = 0;) Tj0 -12  TD (virtual void move_x\(distance x\);) TjT* (virtual void move_y\(distance y\);) TjT* (virtual void rotate\(angle rotation\);) TjT* 0 0 0 rg /F2 9  Tf(//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(protected:) Tj10.8 -12  TD (shape_impl\(\);) Tj0 -12  TD (shape_impl\() Tj43.2 -12  TD -0.0176  Tc 0.0176  Tw (const rectangle& initial_proximity\);) Tj-43.2 -12  TD 0 0 0 rg /F2 9  Tf0  Tc 0  Tw (//...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (rectangle proximity;) Tj0 -12  TD 0 0 0 rg /F2 9  Tf(// ... ) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0602  Tc 0.1102  Tw (The implementation class ) Tj105.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (shape_impl) Tj63 0  TD /F4 10.2  Tf-0.1202  Tc 0.2702  Tw (is abstract, as shown by) Tj-168.6 -12  TD 0.1056  Tc 0.9444  Tw (the pure virtual destructor. As a brief digression, it is also an) Tj0 -12  TD /F6 10.2  Tf0.1984  Tc 1.4516  Tw (implementation only) Tj93 0  TD /F4 10.2  Tf0.228  Tc 0.822  Tw (class \226 its implementation of ) Tj131.4 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf-0.3822  Tc (\222s) Tj-256.8 -12  TD 0.3312  Tc 0.7855  Tw (interface has been declared as private so clients can create) Tj0 -12  TD -0.0723  Tc -0.0027  Tw (instances, but can\222t call any of the member functions.) Tj11.4 -12  TD -0.0125  Tc 0.4625  Tw (Now look what happens if ) Tj112.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (line) Tj24 0  TD /F4 10.2  Tf-0.0122  Tc 0.4622  Tw (\222s base class is changed, but) Tj-147.6 -12  TD 0.2339  Tc 0.2161  Tw (changing the constructor used to initialise the base class gets) Tj0 -12  TD -0.0538  Tc -0.0962  Tw (forgotten about.) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class line : public shape_impl {) Tj0 -12  TD (public:) Tj10.8 -12  TD (line\(int in_x1, int in_y1,) Tj27 -12  TD (int in_x2, int in_y2\)) Tj-16.2 -12  TD (: x1\(in_x1\), y1\(in_y1\),) Tj10.8 -12  TD (x2\(in_x2\), y2\(in_y2\) {}) Tj-21.6 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(private:) Tj10.8 -12  TD (int x1, y1, x2, y2;) Tj-10.8 -12  TD (};) Tj231 -19.8  TD 0 0 0 rg /F0 10.8  Tf0.1872  Tc (23) Tj-212.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj103 0 obj10351endobj101 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font 106 0 R/ProcSet 2 0 R>>/Contents 102 0 R>>endobj106 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F11 104 0 R>>endobj108 0 obj<</Length 109 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (24) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj0 -568.8  TD /F4 10.2  Tf-0.064  Tc 1.264  Tw (This will compile, and fail at run time. However, if in the first) Tj0 -12  TD -0.1264  Tc 0.2764  Tw (place the programmer had written:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 9  Tf0  Tc 0  Tw (class line : public shape {) Tj0 -12  TD (public:) Tj10.8 -12  TD (line\(int in_x1, int in_y1,) Tj27 -12  TD (int in_x2, int in_y2\)) Tj-16.2 -12  TD (: shape\(\), x1\(in_x1\), y1\(in_y1\),) Tj10.8 -12  TD (x2\(in_x2\), y2\(in_y2\) {}) Tj-21.6 -12  TD 0 0 0 rg /F2 9  Tf(// ...) Tj-10.8 -12  TD 0.2 0.2 0.2 rg /F5 9  Tf(};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.1572  Tc 0.4072  Tw (In the latter case, changing the base class to ) Tj177.6 0  TD /F2 10.2  Tf-0.24  Tc 0  Tw (shape_impl) Tj61.8 0  TD /F4 10.2  Tf-0.3  Tc (would) Tj-239.4 -12  TD -0.1884  Tc 0.5184  Tw (cause a compile error, because ) Tj124.8 0  TD /F2 10.2  Tf-0.24  Tc 0  Tw (shape) Tj32.4 0  TD /F4 10.2  Tf-0.1997  Tc 0.6497  Tw (is no longer the immediate) Tj-157.2 -12  TD -0.1818  Tc 0.6984  Tw (base class. This leads me to make the following recommendation:) Tj0 -12  TD /F6 10.2  Tf-0.2099  Tc 0.0599  Tw (always call an interface class\222s constructor explicitly) Tj206.4 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (.) Tj69 183  TD /F0 12  Tf-0.0686  Tc (Finally) Tj0 -18  TD /F4 10.2  Tf-0.0693  Tc 0.5943  Tw (Interface classes are fundamental to programming with run time) Tj0 -12  TD 0.3666  Tc 0.8334  Tw (polymorphism in C++. Despite this, I\222m all too frequently) TjT* 0.4648  Tc 0.7052  Tw (surprised by how little they are known about by the C++) TjT* -0.1381  Tc 0.2881  Tw (programmers out there.) Tj10.8 -12  TD -0.1156  Tc 1.099  Tw (This article doesn\222t cover everything: for example, the use of) Tj-10.8 -12  TD 0.1202  Tc 1.0048  Tw (virtual inheritance when deriving from mixins is something I) Tj0 -12  TD 0.0319  Tc 1.2362  Tw (hope to get around to covering in a future article. However, I) TjT* -0.0937  Tc 0.0295  Tw (hope this article serves as a reasonable introduction.) Tj211.8 -21  TD /F8 10.2  Tf-0.0349  Tc -0.4091  Tw (Mark Radford) Tj-45.6 -12  TD /F2 9  Tf0  Tc 0  Tw (mark@twonine.co.uk) Tj-166.2 -18  TD /F0 12  Tf-0.0127  Tc (Acknowledgements) Tj0 -18  TD /F4 10.2  Tf-0.11  Tc 0.4933  Tw (Many thanks to Phil Bass, Thaddaeus Frogley and Alan Griffiths) Tj0 -12  TD -0.0913  Tc -0.0587  Tw (for their feedback.) Tj0.6 w 1 J 1 j 0 0 0 RG ET28.8 266.4 m 567.6 266.4 l S BT43.2 772.2  TD/F1 18  Tf-0.0093  Tc 0.0053  Tw (From Mechanism to Method:) Tj0 -20.4  TD -0.0877  Tc 0.0337  Tw (The Safe Stacking of Cats) Tj0 -12  TD /F0 10.2  Tf-0.114  Tc -0.06  Tw (by Kevlin Henney) Tj-14.4 -18  TD /F4 10.2  Tf0.1134  Tc 0.9366  Tw (In spite of some obvious differences \226 and the similarity that) Tj0 -12  TD 0.3973  Tc 0.8528  Tw (neither can be considered a normal practice \226 curling and) TjT* -0.0925  Tc 1.4091  Tw (throwing have something in common: curling is a bizarre sport) TjT* -0.0328  Tc 0.7136  Tw (played on ice; throwing in C++ is often played on thin ice. It is) TjT* 0.0273  Tc 1.3827  Tw (the thin ice that has most often caused consternation, and the) TjT* 0.3362  Tc 0.8471  Tw (balanced art of not falling through that has attracted much) TjT* 0.015  Tc 0  Tw (attention.) Tj11.4 -12  TD 0.0183  Tc 0.4317  Tw (By coincidence, curling is also something in which cats both) Tj-11.4 -12  TD -0.0835  Tc 0.4135  Tw (indulge and excel, putting the ) Tj123.6 0  TD /F6 10.2  Tf-0.3226  Tc 0  Tw (pro) Tj16.2 0  TD /F4 10.2  Tf-0.0678  Tc -0.0822  Tw (into ) Tj18.6 0  TD /F6 10.2  Tf-0.1116  Tc 0  Tw (procrastination) Tj61.8 0  TD /F4 10.2  Tf-0.1312  Tc 0.5812  Tw (. But more) Tj-220.2 -12  TD -0.0947  Tc -0.0553  Tw (on cats later.) Tj0 -18  TD /F0 12  Tf-0.0688  Tc 0.4288  Tw (Taking Exception) TjT* /F4 10.2  Tf-0.0056  Tc 1.2056  Tw (Exceptions are disruptive but modular. The common appeal to) Tj0 -12  TD 0.3689  Tc 0.7811  Tw (consider them as related to the ) Tj144 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (goto) Tj30 0  TD /F4 10.2  Tf0.3786  Tc 0.8214  Tw (is more than a little) Tj-174 -12  TD 0.231  Tc 0.519  Tw (misleading \(\223considering ) Tj113.4 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (goto) Tj25.2 0  TD /F4 10.2  Tf0.2212  Tc 0.9788  Tw (\224 considered harmful, if you) Tj-138.6 -12  TD -0.0806  Tc 0.5306  Tw (like\). That they are both discontinuous is one of the few features) Tj0 -12  TD 0.5751  Tc 0.6549  Tw (they share. It is an observation that although true is not) TjT* -0.0602  Tc 0.5102  Tw (necessarily useful: ) Tj78 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (break) Tj30 0  TD /F4 10.2  Tf-0.15  Tc (, ) Tj5.4 0  TD /F2 10.2  Tf-0.12  Tc (continue) Tj48 0  TD /F4 10.2  Tf-0.1197  Tc 0.2697  Tw (, and ) Tj22.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (return) Tj39.6 0  TD /F4 10.2  Tf-0.1505  Tc 0.6005  Tw (also share) Tj-223.8 -12  TD 0.2117  Tc 1.0633  Tw (this description of behavior. A quick dissection exposes the) Tj0 -12  TD -0.062  Tc 0  Tw (differences:) Tj0 -22.2  TD /F11 6  Tf0.054  Tc (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.1384  Tc -0.0116  Tw (Transferred information:) Tj0 -12  TD /F4 10.2  Tf0.2712  Tc 0.1788  Tw (a ) Tj7.8 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (goto) Tj28.8 0  TD /F4 10.2  Tf0.2249  Tc 0.6001  Tw (can associate only with a label whereas a ) Tj184.2 0  TD /F2 10.2  Tf0.36  Tc 0  Tw (throw) Tj-220.8 -12  TD /F4 10.2  Tf0.0159  Tc 0.4341  Tw (communicates with respect to both type and any information) Tj0 -12  TD 0.0443  Tc 0.4057  Tw (contained in the type instance. In this sense, the ) Tj202.8 0  TD /F2 10.2  Tf-0  Tc 0  Tw (throw) Tj33.6 0  TD /F4 10.2  Tf0.0848  Tc (acts) Tj-236.4 -12  TD -0.1322  Tc -0.2178  Tw (more like a ) Tj46.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (return) Tj36 0  TD /F4 10.2  Tf-0.1031  Tc -0.5269  Tw (, communicating an exceptional rather than) Tj-82.2 -12  TD -0.0314  Tc -0.1186  Tw (a normal result.) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.1441  Tc (Locality:) Tj0 -12  TD /F4 10.2  Tf-0.3288  Tc 0.1788  Tw (a ) Tj6.6 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (goto) Tj25.2 0  TD /F4 10.2  Tf-0.1723  Tc -0.4444  Tw (has meaning only within a function, labels being the only) Tj-31.8 -12  TD -0.0938  Tc -0.5062  Tw (C++ entity with function scope. By contrast, exception handling) Tj0 -12  TD -0.1249  Tc -0.3251  Tw (is primarily about transferring control out of a function. It shares) TjT* -0.0593  Tc -0.3907  Tw (this with ) Tj36 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (return) Tj36 0  TD /F4 10.2  Tf-0.1515  Tc -0.2651  Tw (, but potentially has the whole of the call stack) Tj-72 -12  TD 0.1004  Tc 0.3496  Tw (rather than just the immediate caller within its reach. It also) Tj0 -12  TD 0.2575  Tc 0.1925  Tw (shares with ) Tj52.2 0  TD /F2 10.2  Tf0.24  Tc 0  Tw (break) Tj34.8 0  TD /F4 10.2  Tf0.0904  Tc 0.3596  Tw (and ) Tj18 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (continue) Tj54 0  TD /F4 10.2  Tf0.218  Tc 0.232  Tw (a relationship with an) Tj-159 -12  TD -0.1046  Tc -0.4204  Tw (enclosing control flow primitive, so exception handling can also) Tj0 -12  TD -0.0561  Tc -0.0939  Tw (be used simply at the block level. ) Tj264 481.8  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj10.8 -1.8  TD /F10 10.2  Tf-0.0939  Tc -0.0561  Tw (Destination coupling:) Tj0 -12  TD /F4 10.2  Tf0.3404  Tc 0.2596  Tw (the target of a ) Tj65.4 0  TD /F2 10.2  Tf0.18  Tc 0  Tw (goto) Tj29.4 0  TD /F4 10.2  Tf0.3297  Tc 0.2403  Tw (is fixed, hardwired at compile time.) Tj-94.8 -12  TD 0.1235  Tc 0.3265  Tw (There is no way to express \223the following has happened, so) Tj0 -12  TD 0.2002  Tc 0.4898  Tw (whoever can sort it out, please sort it out.\224 Exceptions are) TjT* 0.4826  Tc 0.3424  Tw (independent of lexical scope and do not nominate their) TjT* 0.1846  Tc 0.5225  Tw (handlers explicitly. Instead, nomination is dynamic and by) TjT* 0.1135  Tc -0.209  Tw (requirement \226 \223the first one that can handle one of these gets) TjT* 0.4424  Tc 0.4876  Tw (to sort it out.\224 Exceptions can be handled or ignored at) TjT* 0.3434  Tc 0.3316  Tw (different call levels without intervention from any of the) TjT* 0.0265  Tc -0.3479  Tw (levels in between. In many ways, the ) Tj151.8 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (try) Tj18.6 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj3 0  TD /F2 10.2  Tf0.12  Tc (catch) Tj32.4 0  TD /F4 10.2  Tf0.1043  Tc (mechanism) Tj-205.8 -12  TD 0.4743  Tc 0.8329  Tw (resembles an advanced selection control structure \226 an) Tj0 -12  TD /F2 10.2  Tf0.48  Tc 0  Tw (if) Tj12.6 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj3 0  TD /F2 10.2  Tf0.03  Tc (else) Tj27.6 0  TD /F4 10.2  Tf0.143  Tc 0.007  Tw (with extreme attitude.) Tj-54 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj10.8 -1.8  TD /F10 10.2  Tf-0.0503  Tc -0.0997  Tw (Block structure:) Tj0 -12  TD /F4 10.2  Tf0.0749  Tc 0.2251  Tw (Taligent\222s Guide to Designing Programs pulls no punches in) TjT* 0.4997  Tc 0.5503  Tw (stating that ) Tj54.6 0  TD /F7 10.2  Tf0.4599  Tc 0.0921  Tw (\223a ) Tj13.2 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (goto) Tj30 0  TD /F7 10.2  Tf0.4216  Tc 0.5304  Tw (completely invalidates the high-level) Tj-97.8 -12  TD 0.1193  Tc -0.5673  Tw (structure of the code\224) Tj85.2 0  TD /F4 10.2  Tf0.0605  Tc -0.4105  Tw ([1]. Far from being merely a provocative) Tj-85.2 -12  TD 0.4344  Tc 2.1489  Tw (statement, this is a concise summary of fact. C++ is) Tj0 -12  TD 0.346  Tc 0.204  Tw (essentially block structured: exceptions respect and work) TjT* 0.4568  Tc -0.0068  Tw (within this structure, whereas ) Tj136.8 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (goto) Tj26.4 0  TD /F4 10.2  Tf0.501  Tc -0.051  Tw (s largely ignore and) Tj-163.2 -12  TD 0.153  Tc 0.297  Tw (disrespect it.) Tj-10.8 -24  TD 0.2215  Tc 1.1618  Tw (The differences are thrown \(sic\) into sharp relief when you) Tj0 -12  TD 0.1052  Tc 1.2175  Tw (attempt to refactor code. Say that you wish to factor a block) TjT* 0.2342  Tc 1.1158  Tw (out as a function \(the Extract Method refactoring [2]\); it is) TjT* 0.1813  Tc 1.1414  Tw (trivial to factor out the data flow: looking at the data that\222s) TjT* 0.1288  Tc 1.2212  Tw (used and affected in the block tells you what arguments and) TjT* 0.0447  Tc 0.0235  Tw (results you need to pass and how. With control flow, unless you) TjT* -0.0134  Tc 0.3134  Tw (flow off the bottom of a block or ) Tj139.2 0  TD /F2 10.2  Tf-0  Tc 0  Tw (throw) Tj30.6 0  TD /F4 10.2  Tf0.0477  Tc 0.1023  Tw (, you cannot factor the) Tj-169.8 -12  TD 0.1909  Tc 1.3734  Tw (code simply. Traditional discontinuous control flow is non-) Tj0 -12  TD 0.0482  Tc 1.2018  Tw (modular and requires additional restructuring to communicate) TjT* 0.1948  Tc 0.9752  Tw (to the caller that a ) Tj85.2 0  TD /F2 10.2  Tf0.12  Tc 0  Tw (break) Tj31.8 0  TD /F4 10.2  Tf-0.15  Tc (, ) Tj6.6 0  TD /F2 10.2  Tf0.28  Tc (return) Tj37.8 0  TD /F4 10.2  Tf0.45  Tc (, ) Tj6.6 0  TD /F2 10.2  Tf0.18  Tc (continue) Tj51 0  TD /F4 10.2  Tf0.1178  Tc 0.9322  Tw (, or ) Tj19.2 0  TD /F2 10.2  Tf0.33  Tc 0  Tw (goto) Tj-238.2 -12  TD /F4 10.2  Tf0.0516  Tc 0.2784  Tw (\(especially\) must be effected. This is not the case with ) Tj229.8 0  TD /F2 10.2  Tf-0  Tc 0  Tw (throw) Tj30.6 0  TD /F4 10.2  Tf0.1644  Tc (:) Tj-260.4 -12  TD 0.2029  Tc 1.1471  Tw (both the overall structure and the fine-grained detail remain) Tj0 -12  TD 0.0664  Tc 0  Tw (unchanged.) Tj0 -18  TD /F0 10.8  Tf0.1338  Tc 0.0702  Tw (State Corruption) TjT* /F4 10.2  Tf-0.0986  Tc 0.1886  Tw (This all sounds straightforward \226 or straight backward if you take) Tj0 -12  TD -0.1144  Tc 0.4311  Tw (the call stack\222s perspective \226 because we know about modularity,) TjT* -0.0197  Tc 1.1897  Tw (both structured programming and object-oriented programming) TjT* -0.1329  Tc 0.5284  Tw (are built on that foundation. However, there is still that one small) TjETendstreamendobj109 0 obj12209endobj107 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font 110 0 R/ProcSet 2 0 R>>/Contents 108 0 R>>endobj110 0 obj<</F0 6 0 R/F1 8 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F7 29 0 R/F8 31 0 R/F10 65 0 R/F11 104 0 R>>endobj112 0 obj<</Length 113 0 R>>stream
BT29.4 769.8  TD0 0 0 rg /F4 10.2  Tf0.0186  Tc 1.098  Tw (matter of \223disruption.\224 When an exception is thrown, the only) Tj0 -12  TD -0.0407  Tc 0.5998  Tw (thing you want disrupted is the control flow, not the integrity of) TjT* -0.0884  Tc -0.0616  Tw (the program.) Tj11.4 -12  TD 0.1174  Tc 0.3326  Tw (Any block of code may be characterized with respect to the) Tj-11.4 -12  TD -0.1105  Tc 0.0205  Tw (program\222s stability in the event of an exception. We can guarantee) Tj0 -12  TD -0.1153  Tc -0.0347  Tw (different levels of safety, of which three are commonly recognized) TjT* -0.0811  Tc -0.0689  Tw ([3], plus the \(literally\) degenerate case:) Tj0 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.1391  Tc 0.2891  Tw (No guarantee of exception safety:) Tj0 -12  TD /F4 10.2  Tf-0.0939  Tc -0.3132  Tw (ensures disruption, corruption, and chaos. Code written without) TjT* -0.1457  Tc -0.4709  Tw (exceptions in mind often falls into this category, leaking memory) TjT* -0.0936  Tc 0.1836  Tw (or leaving dangling pointers in the event of a thrown exception) TjT* -0.1176  Tc 0.2343  Tw (\226 converting the exceptional into the unacceptable. In short, all) TjT* -0.1754  Tc 0.2254  Tw (bets are off. ) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.0689  Tc -0.0811  Tw (Basic guarantee of exception safety:) Tj0 -12  TD /F4 10.2  Tf0.2079  Tc 0.2421  Tw (ensures that the thrower will not leak or corrupt resources.) TjT* -0.0633  Tc -0.3594  Tw (Objects involved in the execution will be in a stable and usable,) TjT* -0.0667  Tc 0.0367  Tw (albeit not necessarily predictable, state. ) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.092  Tc -0.058  Tw (Strong guarantee of exception safety:) Tj0 -12  TD /F4 10.2  Tf-0.1745  Tc -0.3089  Tw (ensures that a program\222s state remains unchanged in the presence) TjT* -0.0898  Tc 0.0255  Tw (of exceptions. In other words, commit-rollback semantics. ) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.0998  Tc -0.0502  Tw (No-throw guarantee of exception safety:) Tj0 -12  TD /F4 10.2  Tf-0.0812  Tc -0.0688  Tw (ensures that exceptions are never thrown, hence the question of) TjT* -0.0339  Tc 0.4839  Tw (how program state is affected in the presence of an exception) TjT* -0.0786  Tc -0.0714  Tw (need never be answered because it is purely hypothetical.) Tj-11.4 -24  TD -0.0482  Tc 0.1649  Tw (The stroke of midnight separates the first, degenerate category of) Tj0 -12  TD 0.0168  Tc 1.1082  Tw (exception unsafety from the last, Zen-like guarantee of benign) TjT* -0.0812  Tc 1.1312  Tw (order through the simple absence of disruption. Code written to) TjT* -0.0627  Tc 1.1793  Tw (achieve these guarantees may have the same structure, but will) TjT* 0.1353  Tc 1.048  Tw (differ in the not-so-small detail of whether or not exceptions) TjT* -0.1592  Tc 0.1592  Tw (occur anywhere in their flow.) Tj11.4 -12  TD -0.1003  Tc 0.2231  Tw (These guarantees apply to any unit of code from a statement to) Tj-11.4 -12  TD -0.046  Tc 0.496  Tw (a function, but are most commonly applied to member functions) Tj0 -12  TD -0.0645  Tc 0.1327  Tw (called on objects. A point that is not often made relates exception) TjT* -0.0925  Tc 0.5425  Tw (safety to encapsulation: not so much that exception safety can be) TjT* -0.0569  Tc -0.0264  Tw (improved by better encapsulation, but that exception safety is one) TjT* -0.0291  Tc 0.4791  Tw (measure of encapsulation. Prominent OO propaganda holds that) TjT* -0.099  Tc -0.576  Tw (encapsulation is concerned with making object data private. Whilst) TjT* -0.0875  Tc 0.1175  Tw (this view is not strictly false, it misses some important truths.) Tj11.4 -12  TD -0.0986  Tc -0.3848  Tw (Encapsulation is neither a language feature nor a practice; rather) Tj-11.4 -12  TD -0.0699  Tc -0.2983  Tw (it is a non-functional property of code, and something that you can) Tj0 -12  TD -0.0713  Tc -0.0187  Tw (have more or less of. Encapsulation describes the degree to which) TjT* -0.1093  Tc 0.426  Tw (something is self-contained, the degree to which its insides affect) TjT* 0.1006  Tc 0.3494  Tw (its outsides, the degree to which internal representation affects) TjT* -0.1776  Tc -0.2724  Tw (external usage. Encapsulation is about usability, about not imposing) TjT* -0.0895  Tc 0.2062  Tw (on the user. Language features and idiomatic design practices can) TjT* -0.1113  Tc 0.5613  Tw (be used to improve encapsulation, but of themselves they are not) TjT* 0.2347  Tc 0.2153  Tw (encapsulation. Thinking back to exceptions, you can see that) TjT* -0.0924  Tc 0.0174  Tw (without even thinking about internal representation, an object that) TjT* 0.2657  Tc 1.651  Tw (offers the strong guarantee on a member function is more) TjT* -0.06  Tc -0.09  Tw (encapsulated than one that offers no guarantee.) Tj0 -18  TD /F0 10.8  Tf0.0587  Tc 0.1453  Tw (Incorruptible Style) TjT* /F4 10.2  Tf-0.0834  Tc 0.8104  Tw (It is one thing to have a guarantee, but quite another to fulfill it.) Tj0 -12  TD -0.0653  Tc -0.0347  Tw (What is the style and mechanism of the code that allows a thrown) TjT* -0.0711  Tc 0.0847  Tw (exception to propagate out of a block in a safe manner? Including) Tj274.8 708  TD 0.2102  Tc 0.9148  Tw (the degenerate case, there are essentially four approaches to) Tj0 -12  TD -0.0603  Tc -0.0897  Tw (achieving exception safety:) Tj0 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.1465  Tc 0.5965  Tw (Exception-unaware code:) Tj0 -12  TD /F4 10.2  Tf-0.1125  Tc -0.499  Tw (code that is not written with exceptions in mind is as easy to read) TjT* -0.081  Tc -0.0023  Tw (as it is dangerous \226 going wrong with confidence. ) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.134  Tc -0.016  Tw (Exception-aware code:) Tj0 -12  TD /F4 10.2  Tf0.2605  Tc 0.3895  Tw (code may be scaffolded explicitly with ) Tj173.4 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (try) Tj19.2 0  TD /F4 10.2  Tf0.45  Tc (, ) Tj6 0  TD /F2 10.2  Tf0.24  Tc (catch) Tj32.4 0  TD /F4 10.2  Tf0.3303  Tc 0.1197  Tw (, and) Tj-231 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (throw) Tj32.4 0  TD /F4 10.2  Tf-0.094  Tc -0.056  Tw (to ensure that the appropriate stabilizing action is taken) Tj-32.4 -12  TD -0.1113  Tc -0.4387  Tw (in the event of a thrown exception. Alas, it is not always obvious) Tj0 -12  TD -0.091  Tc 0.121  Tw (that exception-aware code is safe: such code is rarely clear and) TjT* -0.0925  Tc -0.0575  Tw (concise. ) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.1086  Tc -0.0414  Tw (Exception-neutral code:) Tj0 -12  TD /F4 10.2  Tf-0.2516  Tc -0.2802  Tw (code that works in the presence of exceptions, but does not require) TjT* -0.2297  Tc -0.4536  Tw (any explicit exception-handling apparatus to do so \(i.e., no explicit) TjT* /F2 10.2  Tf-0.52  Tc 0  Tw (try) Tj17.4 0  TD /F4 10.2  Tf0.1644  Tc (/) Tj2.4 0  TD /F2 10.2  Tf-0.36  Tc (catch) Tj31.2 0  TD /F4 10.2  Tf-0.2216  Tc -0.4427  Tw (code\). Not only is exception-neutral code briefer and) Tj-51 -12  TD -0.1739  Tc 0.0239  Tw (clearer than exception-aware code, but it is also typically shorter) Tj0 -12  TD -0.1797  Tc 0.1047  Tw (than exception unaware code. So, exception safety and seamless) TjT* 0.0167  Tc 0.4333  Tw (exception propagation aside, such minimalism offers another) TjT* -0.1925  Tc 0.0425  Tw (strong motivation for reworking code in this style.) Tj-11.4 -22.2  TD /F11 6  Tf0.054  Tc 0  Tw (l) Tj11.4 -1.8  TD /F10 10.2  Tf-0.0758  Tc -0.0742  Tw (Exception-free code:) Tj0 -12  TD /F4 10.2  Tf0.0055  Tc 0.4445  Tw (code that generates no exceptions offers the most transparent) TjT* -0.1206  Tc -0.0294  Tw (fulfillment of exception safety.) Tj-11.4 -30  TD /F0 12  Tf-0.092  Tc 0.052  Tw (When Cats Turn Bad) Tj0 -18  TD /F4 10.2  Tf0.3936  Tc 0.7164  Tw (There is a tradition \226 from Schr\366dinger to Stroustrup \226 of) Tj0 -12  TD -0.0932  Tc 1.0765  Tw (employing cats for demonstration purposes, and I see no reason) TjT* -0.0057  Tc 1.1648  Tw (to stand in the way of tradition. There appears to be sufficient) TjT* 0.1  Tc 1.0885  Tw (prior art in the stacking of cats [4] that I will also adopt that) TjT* -0.0995  Tc 0.1131  Tw (practice. Of course, we are only dealing with abstractions \226 if you) TjT* -0.0891  Tc 0.5391  Tw (are concerned for the poor cat, keep in mind that unless we set it) TjT* -0.1144  Tc 0.2216  Tw (in concrete no act of cruelty actually occurs.) Tj11.4 -12  TD -0.0936  Tc -0.0564  Tw (Assuming that we have an appropriate ) Tj154.2 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (cat) Tj20.4 0  TD /F4 10.2  Tf-0.069  Tc -0.381  Tw (class definition, the) Tj-186 -12  TD -0.0747  Tc -0.0753  Tw (following fragment demonstrates exception-unaware code:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw ({) Tj12 -12  TD (cat *marshall = new cat;) Tj0 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with marshall) Tj-30 -12  TD /F5 10.2  Tf(delete marshall;) Tj-12 -12  TD (}) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0621  Tc 0.5667  Tw (If an exception occurs during play, there will be a memory leak:) Tj0 -12  TD -0.122  Tc 0.872  Tw (you will forget about your scoped ) Tj142.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (cat) Tj18 0  TD /F4 10.2  Tf-0.0619  Tc 0.7119  Tw (. The following fragment) Tj-160.8 -12  TD -0.0725  Tc -0.0775  Tw (demonstrates exception-aware code:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw ({) Tj12 -12  TD (cat *marshall = new cat;) Tj0 -12  TD (try {) Tj12 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with marshall) Tj-42 -12  TD /F5 10.2  Tf(}) Tj0 -12  TD (catch\(...\) {) Tj12 -12  TD (delete marshall;) Tj0 -12  TD (throw;) Tj-12 -12  TD (}) Tj0 -12  TD (delete marshall;) Tj-12 -12  TD (}) Tj231 -19.8  TD 0 0 0 rg /F0 10.8  Tf0.1872  Tc (25) Tj-212.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj113 0 obj10223endobj111 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font 114 0 R/ProcSet 2 0 R>>/Contents 112 0 R>>endobj114 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F10 65 0 R/F11 104 0 R>>endobj116 0 obj<</Length 117 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (26) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj0 -40.8  TD /F4 10.2  Tf-0.0138  Tc 1.1971  Tw (Safe? Yes. Unreadable? Certainly. What it lacks in elegance it) Tj0 -12  TD -0.1023  Tc 0.1831  Tw (more than makes up for in verbosity. The code may be safe, but it) TjT* 0.0699  Tc 1.2051  Tw (is not obviously so [5]. The following fragment demonstrates) TjT* -0.1033  Tc -0.0467  Tw (exception-neutral code:) Tj14.4 -16.2  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw ({) Tj12 -12  TD (std::auto_ptr<cat> marshall\(new cat\);) Tj0 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with marshall) Tj-42 -12  TD /F5 10.2  Tf(}) Tj-14.4 -19.8  TD 0 0 0 rg /F4 10.2  Tf0.4618  Tc 0.6382  Tw (For all its faults \(and they are many\), this is one job that) Tj0 -12  TD /F2 10.2  Tf-0.0738  Tc 0  Tw (std::auto_ptr) Tj82.8 0  TD /F4 10.2  Tf-0.0462  Tc 1.1712  Tw (does do well. If we know that default ) Tj162.6 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (cat) Tj-245.4 -12  TD /F4 10.2  Tf0.1954  Tc 0.9296  Tw (constructors do not throw exceptions, and we recognize that) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (marshall) Tj51 0  TD /F4 10.2  Tf-0.0881  Tc 0.5381  Tw (is always bounded by scope, the following fragment) Tj-51 -12  TD -0.0911  Tc -0.0589  Tw (demonstrates exception-free code:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw ({) Tj12 -12  TD (cat marshall;) Tj0 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with marshall) Tj-42 -12  TD /F5 10.2  Tf(}) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0908  Tc 0.3008  Tw (Clearly, for demo purposes, we are taking some liberties with the) Tj0 -12  TD -0.0667  Tc 1.5167  Tw (common understanding of cats and their care, treating them as) TjT* 0.3413  Tc 0.7088  Tw (disposable commodities. Taking further license with feline) TjT* -0.0649  Tc 1.1749  Tw (appreciation and object design, let us also assume that they are) TjT* -0.0833  Tc 0.0083  Tw (value-based rather than entity-based objects. This means that they) TjT* 0.4108  Tc 0.7392  Tw (support copying through construction and assignment, are) TjT* -0.103  Tc 0.193  Tw (generally not heap based, and are typically not deeply involved in) TjT* -0.031  Tc -0.119  Tw (class hierarchies.) Tj11.4 -12  TD 0.2443  Tc 3.5486  Tw (Modern cloning technology is imperfect, so cat copy) Tj-11.4 -12  TD -0.0022  Tc 0.4522  Tw (constructors are not always guaranteed to work. On failure they) Tj0 -12  TD 0.0614  Tc 0.3886  Tw (throw an exception, but they are well behaved enough to avoid) TjT* -0.0768  Tc 0.0018  Tw (resource leakage and to not corrupt the program\222s state.) Tj0 -18  TD /F0 10.8  Tf0.1415  Tc 0.0625  Tw (Throwing Gauntlets) TjT* /F4 10.2  Tf0.0696  Tc 1.1985  Tw (In 1994 Tom Cargill laid down a challenge \226 or extended an) Tj0 -12  TD 0.4614  Tc 0.7886  Tw (invitation to solution, depending on your point of view \226) TjT* -0.0296  Tc 1.2129  Tw (concerning exception safety [6]. The challenge was based on a) TjT* 0.2976  Tc 0.819  Tw (fairly typical stack class template. There were a number of) TjT* -0.0606  Tc 0.326  Tw (elements to the challenge; the one I want to focus on here is how) TjT* -0.0561  Tc -0.0939  Tw (to write the ) Tj48 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj20.4 0  TD /F4 10.2  Tf-0.0248  Tc -0.1252  Tw (member function.) Tj-57 -12  TD -0.0587  Tc -0.0913  Tw (Here is some code that demonstrates the challenge:) Tj3 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (void push\(const value_type &new_top\) {) Tj12 -12  TD (data.push_back\(new_top\);) Tj-12 -12  TD (}) Tj0 -12  TD (value_type pop\(\) {) Tj12 -12  TD (value_type old_top = data.back\(\);) Tj0 -12  TD (data.pop_back\(\);) TjT* (return old_top;) Tj-12 -12  TD (}) Tj0 -12  TD (std::size_t size\(\) const {) Tj12 -12  TD (return data.size\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj261 708  TD 0 0 0 rg /F4 10.2  Tf0.2055  Tc 0.6445  Tw (I have used ) Tj54 0  TD /F2 10.2  Tf0.1527  Tc 0  Tw (std::vector) Tj73.2 0  TD /F4 10.2  Tf0.1739  Tc 1.0761  Tw (for brevity \(performing manual) Tj-127.2 -12  TD -0.1062  Tc 0.6312  Tw (memory management does nothing to make the problem clearer\)) Tj0 -12  TD 0.446  Tc 0.844  Tw (and I am skipping issues related to assignment \226 I would) TjT* -0  Tc 1.1253  Tw (recommend looking at Herb Sutter\222s thorough coverage of the) TjT* -0.106  Tc 0.2131  Tw (challenge to see how this is addressed [3].) Tj10.8 -12  TD 0.0055  Tc 0.4445  Tw (We can now recruit our favorite cat to demonstrate the issue.) Tj-10.8 -12  TD -0.0748  Tc 0.0105  Tw (First of all, pushing cats is not problematic:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (stack<cat> stacked;) Tj0 -12  TD (stacked.push\(marshall\);) TjT* (std::cout << "number of stacked cats == ") Tj60 -12  TD (<< stacked.size\(\) << std::endl;) Tj-73.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.1168  Tc 0.0668  Tw (The issue arises when we pop cats:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (try {) Tj12 -12  TD (cat fender = stacked.pop\(\);) Tj0 -12  TD (.... // play with fender) Tj-12 -12  TD (}) Tj0 -12  TD (catch\(...\) {) Tj12 -12  TD (std::cout << "number of stacked cats") Tj60 -12  TD (<< " == " << stacked.size\(\)) Tj0 -12  TD (<< std::endl;) Tj-72 -12  TD (}) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.1277  Tc 0.2177  Tw (If the copy made in ) Tj81 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj18 0  TD /F4 10.2  Tf-0.1135  Tc 0.2207  Tw (\222s return statement fails, we have lost the) Tj-99 -12  TD -0.1192  Tc 1.0192  Tw (top cat: the cat has been removed from ) Tj165.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (data) Tj27.6 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj18 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (size) Tj27.6 0  TD /F4 10.2  Tf-0.2264  Tc 1.2764  Tw (is one) Tj-238.8 -12  TD 0.3823  Tc 0.4677  Tw (less than before. ) Tj78.6 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (pop) Tj19.8 0  TD /F4 10.2  Tf0.4393  Tc 0.6107  Tw (, therefore, cannot satisfy the strong) Tj-98.4 -12  TD -0.1156  Tc 0.5656  Tw (guarantee of exception safety, because that requires everything to) Tj0 -12  TD -0.0776  Tc 1.2276  Tw (be left as it was before the exception was thrown. The stack is) TjT* -0.0898  Tc 0.2398  Tw (still usable and its resulting state is predictable, which means that) TjT* -0.1056  Tc 0.8556  Tw (we can promise marginally more than the basic guarantee ... but) TjT* -0.1272  Tc 0.3372  Tw (we\222ve still got a missing cat.) Tj10.8 -12  TD -0.0793  Tc 0.5293  Tw (Before setting about any solution, it is important to remember) Tj-10.8 -12  TD 0.0038  Tc 0.4462  Tw (that designs \226 and therefore design problems \226 do not exist in a) Tj0 -12  TD -0.088  Tc 0.138  Tw (vacuum. Design is intimately bound up with purpose and context,) TjT* -0.077  Tc 0.2604  Tw (and without understanding these we risk either solving the wrong) TjT* -0.1019  Tc -0.4481  Tw (problem or, as we so often do, solving the solution. Design is about) TjT* -0.0807  Tc -0.0693  Tw (balancing goals \226 as well as cats.) Tj0 -18  TD /F0 10.8  Tf0.1277  Tc 0.0763  Tw (Unasking the Question) TjT* /F4 10.2  Tf-0.105  Tc 0.5005  Tw (Looking at the class interface, we might ask why two actions are) Tj0 -12  TD -0.1039  Tc 1.1539  Tw (combined into one: Why does ) Tj128.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj22.2 0  TD /F4 10.2  Tf-0.135  Tc 1.485  Tw (both return a queried value) Tj-150.6 -12  TD -0.1129  Tc 0.5629  Tw (and modify the target object? We know that such a return causes) Tj0 -12  TD 0.5089  Tc 0.5411  Tw (an exception-safety problem, and we also know that it is) TjT* -0.0177  Tc 1.2314  Tw (potentially wasteful. What if you do not plan to use the return) TjT* -0.0846  Tc 0.3846  Tw (value? Even if you ignore it, the work that goes into copying and) TjT* -0.0911  Tc 0.4744  Tw (returning the value still happens. You are potentially paying both) TjT* -0.0844  Tc -0.0656  Tw (a cost and a penalty for something you didn\222t use.) Tj10.8 -12  TD 0.2428  Tc 0.8072  Tw (The Command-Query Separation pattern [7] \226 sometimes) Tj-10.8 -12  TD -0.0334  Tc 0.4834  Tw (referred to as a ) Tj64.8 0  TD /F6 10.2  Tf-0.0258  Tc 0  Tw (principle) Tj39 0  TD /F4 10.2  Tf-0.0254  Tc 0.2754  Tw (rather than a ) Tj54.6 0  TD /F6 10.2  Tf0.076  Tc 0  Tw (pattern) Tj32.4 0  TD /F4 10.2  Tf-0.0677  Tc 0.5177  Tw ([8] \226 resolves our) Tj-190.8 -12  TD -0.0677  Tc -0.0823  Tw (concerns by making a separation with respect to qualification:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (void pop\(\) {) Tj12 -12  TD (data.pop_back\(\);) Tj-12 -12  TD (}) TjETendstreamendobj117 0 obj9109endobj115 0 obj<</Type /Page/Parent 94 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 116 0 R>>endobj120 0 obj<</Length 121 0 R>>stream
BT55.2 769.8  TD0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (value_type &top\(\) {) Tj12 -12  TD (return data.back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (const value_type &top\(\) const {) Tj12 -12  TD (return data.back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0971  Tc 0.2137  Tw (The separation of modifier from query operations ensures that we) Tj0 -12  TD 0.4853  Tc 0.6981  Tw (cannot make a change and lose the result. This separated) TjT* -0.078  Tc 0.0137  Tw (interface also supports a slightly different usage model:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender = stacked.top\(\);) Tj0 -12  TD (stacked.pop\(\);) TjT* (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj-43.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0598  Tc 1.1643  Tw (No copying exception can arise within the stack, so there is no) Tj0 -12  TD 0.0098  Tc 1.1002  Tw (need to deal with it. This separation of concerns \(and member) TjT* -0.0456  Tc 1.2047  Tw (functions\) can be seen in the design of the STL sequences and) TjT* -0.1112  Tc -0.0388  Tw (sequence adaptors.) Tj0 -18  TD /F0 10.8  Tf0.0964  Tc 0.1076  Tw (Rephrasing the Question) TjT* /F4 10.2  Tf-0.094  Tc 1.1986  Tw (It would seem that the problem is solved, except for one thing:) Tj0 -12  TD -0.0866  Tc 0.7766  Tw (we never fully established the context of execution. It is entirely) TjT* 0.4486  Tc 0.6681  Tw (possible that the basic guarantee of the original code was) TjT* -0.0549  Tc 0.014  Tw (satisfactory for our purposes, so there was no problem \226 from our) TjT* -0.0995  Tc 0.8725  Tw (perspective \226 to be solved. Either we accept the loss of a cat or,) TjT* -0.1165  Tc 0.4999  Tw (more commonly, the element type of the stack has exception-free) TjT* -0.07  Tc 0.87  Tw (copying, which would be the case for built-in types as well as a) TjT* -0.0786  Tc 0.6786  Tw (number of user-defined types. So under some circumstances, the) TjT* 0.6591  Tc 1.3909  Tw (stack offers us the strong guarantee. If these are your) TjT* -0.0745  Tc 1.1245  Tw (circumstances, the original code does not strictly speaking need) TjT* -0.09  Tc 0.4543  Tw (to be fixed. If they are not, there is indeed a problem to be fixed,) TjT* -0.0883  Tc -0.0617  Tw (and Command-Query Separation offers one solution.) Tj11.4 -12  TD -0.061  Tc 0.511  Tw (But there are others. Command-Query Separation is attractive) Tj-11.4 -12  TD -0.0811  Tc 0.2583  Tw (because it clarifies the role of interface functions. It could be said) Tj0 -12  TD 0.2712  Tc 0.5538  Tw (to offer better encapsulation and cohesion. However, such a) TjT* 0.2032  Tc 0.2468  Tw (statement is not universally true, and understanding why will) TjT* -0.0818  Tc -0.411  Tw (demonstrate why we must consider Command-Query Separation a) TjT* -0.1197  Tc -0.5103  Tw (pattern \(a design solution with consequences and a context\) and not) TjT* -0.0709  Tc -0.0791  Tw (a principle \(an idea that expresses a universal truth\).) Tj11.4 -12  TD -0.2913  Tc 0.1413  Tw (Consider a clarification in design context: the stack is to be shared) Tj-11.4 -12  TD 0.0641  Tc 0.3859  Tw (between multiple threads. Ideally we would like to encapsulate) Tj0 -12  TD -0.2898  Tc 0.3648  Tw (synchronization detail within the stack, ensuring that primitives such) TjT* -0.3027  Tc 0.4254  Tw (as mutexes are used safely and correctly. Focusing just on the ) Tj240 0  TD /F2 10.2  Tf-0.27  Tc 0  Tw (push) Tj-240 -12  TD /F4 10.2  Tf-0.3211  Tc 0.1711  Tw (member, an exception-unaware implementation would be as follows:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (void push\(const value_type &new_top\) {) Tj12 -12  TD (guard.lock\(\);) Tj0 -12  TD (data.push_back\(new_top\);) TjT* (guard.unlock\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj263.4 708  TD (private:) Tj12 -12  TD (mutable mutex monitor;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0934  Tc 0.0291  Tw (The exception-neutral approach is both shorter and safer:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD -0.1376  Tc 0.0176  Tw (void push\(const value_type &new_top\) {) Tj12 -12  TD -0.12  Tc 0  Tw (locker<mutex> guard\(monitor\);) Tj0 -12  TD (data.push_back\(new_top\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (mutable mutex monitor;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.4434  Tc 0.6066  Tw (Where ) Tj33 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (locker) Tj43.2 0  TD /F4 10.2  Tf0.413  Tc 0.837  Tw (is a helper class template responsible for) Tj-76.2 -12  TD -0.08  Tc 0.13  Tw (abstracting control flow [9]:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename locked_type>) Tj0 -12  TD (class locker {) TjT* (public:) Tj12 -12  TD -0.1376  Tc 0.0176  Tw (explicit locker\(locked_type &lockee\)) Tj12 -12  TD -0.12  Tc 0  Tw (: lockee\(lockee\) {) Tj0 -12  TD (lockee.lock\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (~locker\(\) {) Tj12 -12  TD (lockee.unlock\(\);) Tj-12 -12  TD (}) Tj-12 -12  TD (private:) Tj12 -12  TD (locker\(const locker &\); ) Tj144 0  TD /F2 10.2  Tf-0.1745  Tc 0.0545  Tw (// no copying) Tj-144 -12  TD /F5 10.2  Tf-0.12  Tc 0  Tw (locked_type &lockee;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.0926  Tc 1.1574  Tw (Making each public member function of ) Tj178.2 0  TD /F2 10.2  Tf0.12  Tc 0  Tw (stack) Tj35.4 0  TD /F4 10.2  Tf0.1396  Tc (self-locking) Tj-213.6 -12  TD 0.0691  Tc 1.238  Tw (would appear to preserve encapsulation. However, this works) Tj0 -12  TD -0.1054  Tc 1.2754  Tw (only for usage scenarios that are based on single function calls.) TjT* 0.5338  Tc 0.6162  Tw (For the Command-Query Separation solution, this would) TjT* -0.0764  Tc 0.0464  Tw (introduce a couple of subtle bugs:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender = stacked.top\(\);) Tj0 -12  TD (stacked.pop\(\);) TjT* (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj-44.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.2406  Tc 0.6094  Tw (First of all, ) Tj53.4 0  TD /F2 10.2  Tf0.28  Tc 0  Tw (top) Tj22.8 0  TD /F4 10.2  Tf0.1973  Tc 0.8527  Tw (returns a reference. Consider the following) Tj-76.2 -12  TD -0.0947  Tc 0.1847  Tw (simple action in another concurrent thread:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (stacked.pop\(\);) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0686  Tc 0.8186  Tw (Assuming that all of the member functions we are talking about) Tj0 -12  TD -0.0201  Tc 1.2035  Tw (are self-locking, what is the problem? Imagine that the second) TjT* -0.0863  Tc 0.2363  Tw (thread executes ) Tj66 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj21 0  TD /F4 10.2  Tf-0.0248  Tc 0.5605  Tw (just after the first thread completes the call) Tj-87 -12  TD -0.0678  Tc -0.0822  Tw (to ) Tj10.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (top) Tj18 0  TD /F4 10.2  Tf-0.0925  Tc 0.4225  Tw (: the reference result from ) Tj108.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (top) Tj21 0  TD /F4 10.2  Tf-0.0999  Tc 0.5499  Tw (is now dangling, referring) Tj-158.4 -12  TD 0.3044  Tc 0.917  Tw (to a non-existent element. Undefined behavior. Oops. Poor) Tj0 -12  TD /F2 10.2  Tf-0.12  Tc 0  Tw (fender) Tj38.4 0  TD /F4 10.2  Tf-0.0776  Tc 0.0276  Tw (gets a very bad start in life.) Tj207.6 -19.8  TD /F0 10.8  Tf0.195  Tc 0  Tw (27) Tj-213 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj121 0 obj7987endobj118 0 obj<</Type /Page/Parent 119 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 120 0 R>>endobj123 0 obj<</Length 124 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (28) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj11.4 -40.8  TD /F4 10.2  Tf-0.1449  Tc -0.3479  Tw (Returning references to value objects from thread-shared objects) Tj-11.4 -12  TD -0.0937  Tc 0.0295  Tw (is a bad idea, so let\222s fix ) Tj99 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (stack) Tj30 0  TD /F4 10.2  Tf0.1644  Tc (:) Tj-114.6 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (value_type top\(\) const {) Tj12 -12  TD (locker<mutex> guard\(monitor\);) Tj0 -12  TD (return data.back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (mutable mutex monitor;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.2463  Tc 0.3363  Tw (This solves the problem of undefined behavior, but leads us straight) Tj0 -12  TD -0.2409  Tc 1.1818  Tw (into the jaws of the second problem, which is that of \223surprising\224) TjT* -0.2471  Tc -0.0362  Tw (behavior. Idiomatically, we treat the following as a single unit:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender = stacked.top\(\);) Tj0 -12  TD (stacked.pop\(\);) TjT* (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj-44.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.011  Tc 1.039  Tw (However, this usage is not cohesive in its execution. It can be) Tj0 -12  TD -0.1286  Tc 0.3786  Tw (interrupted by another thread:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat peavey;) Tj0 -12  TD (stacked.push\(peavey\);) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.4409  Tc 0.4091  Tw (so that the ) Tj51.6 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (push) Tj30 0  TD /F4 10.2  Tf0.4095  Tc 0.6405  Tw (in the second thread occurs between the) Tj-81.6 -12  TD -0.2292  Tc 0.0792  Tw (initialization of ) Tj61.2 0  TD /F2 10.2  Tf-0.22  Tc 0  Tw (fender) Tj37.2 0  TD /F4 10.2  Tf-0.2322  Tc 0.0822  Tw (and the ) Tj30.6 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj19.8 0  TD /F4 10.2  Tf-0.2257  Tc -0.0443  Tw (in the first thread. This means) Tj-148.8 -12  TD -0.2486  Tc 0.0986  Tw (that the wrong element is popped from the stack. Oops, again.) Tj11.4 -12  TD -0.1632  Tc -0.2868  Tw (We could expose the ) Tj82.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (lock) Tj25.8 0  TD /F4 10.2  Tf-0.1096  Tc -0.0404  Tw (and ) Tj16.8 0  TD /F2 10.2  Tf-0.22  Tc 0  Tw (unlock) Tj37.8 0  TD /F4 10.2  Tf-0.1219  Tc -0.3281  Tw (features in ) Tj43.2 0  TD /F2 10.2  Tf-0.24  Tc 0  Tw (stack) Tj31.8 0  TD /F4 10.2  Tf-0.3096  Tc (and) Tj-249.6 -12  TD -0.1174  Tc 0.1674  Tw (let the user sort it all out:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (void lock\(\) {) Tj12 -12  TD (monitor.lock\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (void unlock\(\) {) Tj12 -12  TD (monitor.unlock\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (mutex monitor;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0891  Tc 0.1105  Tw (Giving rise to the following somewhat clunky usage:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender; {) Tj12 -12  TD (locker< stack<cat> > guard\(stacked\);) Tj0 -12  TD (fender = stacked.top\(\);) TjT* (stacked.pop\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj231 708  TD 0 0 0 rg /F4 10.2  Tf-0.1355  Tc 0.1855  Tw (Let\222s compare this with the original usage:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender = stacked.pop\(\);) Tj0 -12  TD (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj-43.8 -24  TD 0 0 0 rg /F4 10.2  Tf0.5148  Tc 0.8952  Tw (There\222s now more to write and more to remember \226 and) Tj0 -12  TD 0.0131  Tc 0.7369  Tw (therefore more to forget. In addition to being more tedious and) TjT* 0.0161  Tc 0.1066  Tw (error prone, it is easy to make the code pessimistic by forgetting) TjT* 0.0009  Tc 0.0491  Tw (to enclose the ) Tj59.4 0  TD /F2 10.2  Tf-0.02  Tc 0  Tw (locker) Tj39.6 0  TD /F4 10.2  Tf0.0383  Tc 0.1717  Tw (in the narrowest scope possible, leaving) Tj-99 -12  TD 0.0387  Tc 0.7113  Tw (waiting threads ) Tj67.8 0  TD /F2 10.2  Tf-0.02  Tc 0  Tw (locked) Tj40.8 0  TD /F4 10.2  Tf0.0136  Tc 0.4364  Tw (out of ) Tj29.4 0  TD /F2 10.2  Tf-0.0343  Tc 0  Tw (stacked) Tj46.8 0  TD /F4 10.2  Tf0.0225  Tc 1.4275  Tw (for far longer than) Tj-184.8 -12  TD -0.0797  Tc 0  Tw (necessary.) Tj10.8 -12  TD 0.0088  Tc 0.4412  Tw (Remember that the original design\222s only safety shortcoming) Tj-10.8 -12  TD -0.1828  Tc -0.3364  Tw (was that it offered only the basic \226 rather than the strong \226 guarantee) Tj0 -12  TD -0.1245  Tc 0.1745  Tw (of exception safety. It would take a leap of orthodoxy to say, hand) TjT* -0.0332  Tc 0.4832  Tw (on heart, that Command-Query Separation has produced a more) TjT* -0.0118  Tc 0.4618  Tw (cohesive and encapsulated solution \226 the opposite is true in this) TjT* -0.0223  Tc 0  Tw (context.) Tj10.8 -12  TD -0.1117  Tc 0.495  Tw (The Combined Method pattern [7] is one that sometimes finds) Tj-10.8 -12  TD 0.1704  Tc 0.2796  Tw (itself in tension with Command-Query Separation, combining) Tj0 -12  TD -0.091  Tc -0.419  Tw (separate actions into a single, transactional whole for the benefit of) TjT* 0.2671  Tc 4.1429  Tw (simplicity and correctness in, principally, multithreaded) TjT* -0.028  Tc 0.278  Tw (environments. The original ) Tj114 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (pop) Tj21.6 0  TD /F4 10.2  Tf-0.0208  Tc 0.4708  Tw (was an example of this tactical) Tj-135.6 -12  TD -0.2036  Tc -0.4714  Tw (pattern, but suffered from weakened exception safety. An alternative) Tj0 -12  TD -0.0829  Tc 0.5329  Tw (realization that achieves strong exception safety in an exception-) TjT* -0.1036  Tc -0.3035  Tw (neutral style is to overload the pure ) Tj139.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj20.4 0  TD /F4 10.2  Tf-0.0935  Tc -0.2565  Tw (function with a Combined) Tj-160.2 -12  TD -0.1467  Tc 0.2367  Tw (Method that takes a result argument:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (void pop\(\) {) Tj12 -12  TD (locker<mutex> guard\(monitor\);) Tj0 -12  TD (data.pop_back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (void pop\(value_type &old_top\) {) Tj12 -12  TD (locker<mutex> guard\(monitor\);) Tj0 -12  TD (old_top = data.back\(\);) TjT* (data.pop_back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (mutable mutex monitor;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf0.2511  Tc 0.9189  Tw (This design tightens the screws a little on the element type) Tj0 -12  TD -0.0727  Tc 0.437  Tw (requirements, additionally requiring assignability as well as copy) TjT* -0.0804  Tc 0.397  Tw (constructibility. In practice this often means that we also demand) TjT* -0.1102  Tc 0.7852  Tw (default constructibility of the target because the overloaded ) Tj245.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj-245.4 -12  TD /F4 10.2  Tf-0.0674  Tc -0.0826  Tw (cannot be used in an assignment:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (cat fender;) Tj0 -12  TD (stacked.pop\(fender\);) TjT* (.... ) Tj30 0  TD /F2 10.2  Tf(// play with fender) Tj-43.8 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0397  Tc 1.2612  Tw (Another consequence of the assignment-based approach is that) Tj0 -12  TD -0.0874  Tc 1.1374  Tw (the result variable must be an exact type match for the element) TjT* -0.1005  Tc 0.8505  Tw (type \(i.e., it cannot rely on implicit conversions that would have) TjT* -0.1777  Tc 0.6277  Tw (worked if ) Tj40.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (pop) Tj18 0  TD /F4 10.2  Tf-0.0575  Tc -0.0925  Tw (\222s result had been returned by value\).) TjETendstreamendobj124 0 obj8292endobj122 0 obj<</Type /Page/Parent 119 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R >>/ProcSet 2 0 R>>/Contents 123 0 R>>endobj126 0 obj<</Length 127 0 R>>stream
BT29.4 777  TD0 0 0 rg /F0 10.8  Tf0.0523  Tc 0.1517  Tw (A Transactional Approach) Tj0 -19.2  TD /F4 10.2  Tf-0.0847  Tc 0.3347  Tw (Staying with Combined Method, but for brevity leaving aside the) Tj0 -12  TD -0.0702  Tc 0.7384  Tw (code for thread synchronization, it turns out that it is possible to) TjT* 0.1789  Tc 0.7511  Tw (write an exception-neutral version of ) Tj164.4 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (pop) Tj22.8 0  TD /F4 10.2  Tf0.2075  Tc 0.8425  Tw (that preserves the) Tj-187.2 -12  TD 0.4783  Tc 0.8717  Tw (original value-returning interface and satisfies the strong) Tj0 -12  TD -0.0829  Tc 1.1329  Tw (guarantee of exception safety in slightly different circumstances) TjT* -0.112  Tc -0.038  Tw (to the original:) Tj13.8 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (value_type pop\(\) {) Tj12 -12  TD (popper karl\(data\);) Tj0 -12  TD (return data.back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (class popper {) Tj0 -12  TD (public:) Tj12 -12  TD (popper\(std::vector<value_type> &data\)) Tj12 -12  TD (: data\(data\) {}) Tj-12 -12  TD (~popper\(\) {) Tj12 -12  TD (if\(!std::uncaught_exception\(\)\)) Tj12 -12  TD (data.pop_back\(\);) Tj-24 -12  TD (}) Tj-12 -12  TD (private:) Tj12 -12  TD (popper\(const popper &\);) Tj0 -12  TD (std::vector<value_type> &data;) Tj-12 -12  TD (};) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-13.8 -24  TD 0 0 0 rg /F4 10.2  Tf0.1122  Tc 0.2178  Tw (Here a small helper object, ) Tj117 0  TD /F2 10.2  Tf0.03  Tc 0  Tw (karl) Tj25.2 0  TD /F4 10.2  Tf0.1139  Tc 0.3361  Tw (, is created to commit a ) Tj102.6 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (pop) Tj-244.8 -12  TD /F4 10.2  Tf0.2552  Tc 1.2148  Tw (action if the copying of the return value is successful. The) Tj0 -12  TD /F2 10.2  Tf0.98  Tc 0  Tw (popper) Tj48.6 0  TD /F4 10.2  Tf0.8463  Tc 2.5037  Tw (object is passed the representation of the) Tj-48.6 -12  TD 0.8361  Tc 0.6639  Tw (surrounding stack, and on destruction, it will cause a) Tj0 -12  TD /F2 10.2  Tf0.255  Tc 0  Tw (pop_back) Tj54.6 0  TD /F4 10.2  Tf0.1752  Tc 1.3998  Tw (to be executed. If the copy is unsuccessful, the) Tj-54.6 -12  TD /F2 10.2  Tf0.48  Tc 0  Tw (popper) Tj43.2 0  TD /F4 10.2  Tf0.3976  Tc 1.1524  Tw (destructor will not commit the intended change,) Tj-43.2 -12  TD 0.1451  Tc 0.0049  Tw (skipping the ) Tj54 0  TD /F2 10.2  Tf0.105  Tc 0  Tw (pop_back) Tj49.8 0  TD /F4 10.2  Tf-0.15  Tc (.) Tj-92.4 -12  TD 0.3161  Tc 0.4339  Tw (This approach has the benefit of preserving the signature) Tj-11.4 -12  TD 0.375  Tc 0.4178  Tw (interface and typically reducing the number of temporaries) Tj0 -12  TD 0.4393  Tc 3.9536  Tw (involved in copying. However, there is an important) TjT* 0.1481  Tc -0.1481  Tw (precondition that must be publicized and satisfied for ) Tj226.2 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (popper) Tj-226.2 -12  TD /F4 10.2  Tf0.4071  Tc 1.0929  Tw (to work as expected: ) Tj100.8 0  TD /F2 10.2  Tf0.68  Tc 0  Tw (pop) Tj24.6 0  TD /F4 10.2  Tf0.4867  Tc 1.1633  Tw (should not be called from the) Tj-125.4 -12  TD 0.3197  Tc 0.2636  Tw (destructor of another object. Why? What if the destructor is) Tj0 -12  TD 0.4866  Tc 1.7634  Tw (being called because the stack is being unwound by an) TjT* 0.3204  Tc 0.2796  Tw (exception? The call to ) Tj102 0  TD /F2 10.2  Tf0.4017  Tc 0  Tw (std::uncaught_exception) Tj153 0  TD /F4 10.2  Tf0.8322  Tc (in) Tj-255 -12  TD /F2 10.2  Tf0.48  Tc (popper) Tj39.6 0  TD /F4 10.2  Tf0.4627  Tc 1.1207  Tw (\222s destructor will return true even if the copy is) Tj-39.6 -12  TD 0.1571  Tc 0  Tw (successful.) Tj11.4 -12  TD 0.0412  Tc -0.4912  Tw (How you respond to this scenario is a matter of context-driven) Tj-11.4 -12  TD 0.1491  Tc 0.4343  Tw (requirement. Either you state that the behavior of a ) Tj222 0  TD /F2 10.2  Tf0.24  Tc 0  Tw (stack) Tj34.8 0  TD /F4 10.2  Tf0.1983  Tc (is) Tj-256.8 -12  TD 0.1267  Tc 0.0567  Tw (undefined in these circumstances or you define behavior for it.) Tj0 -12  TD 0.1232  Tc -0  Tw (One definition of behavior is shown above \226 in the presence of) TjT* 0.4765  Tc 0.9485  Tw (existing exceptions, don\222t pop \226 but could be considered) TjT* 0.1871  Tc 0.3486  Tw (unsatisfactory because of its pessimism. An alternative, more) TjT* 0.493  Tc 0.1285  Tw (optimistic approach is to say that our ) Tj174 0  TD /F2 10.2  Tf0.48  Tc 0  Tw (pop) Tj23.4 0  TD /F4 10.2  Tf0.4758  Tc 0.5742  Tw (offers a strong) Tj-197.4 -12  TD 0.103  Tc -0.3863  Tw (guarantee of exception safety if there is no unhandled exception) Tj0 -12  TD 0.461  Tc 0.9223  Tw (present when it is executed, but only the basic guarantee) TjT* 0.0107  Tc 0  Tw (otherwise:) Tj289.2 708  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc (template<typename value_type>) Tj0 -12  TD (class stack {) Tj12 -12  TD (....) Tj0 -12  TD (class popper {) TjT* (public:) Tj12 -12  TD -0.1367  Tc 0.0167  Tw (popper\(std::vector<value_type> &data\)) Tj12 -12  TD -0.12  Tc 0  Tw (: data\(data\),) Tj12 -12  TD (unwinding\() Tj24 -12  TD -0.1414  Tc 0.0214  Tw (std::uncaught_exception\(\)\) {}) Tj-48 -12  TD -0.12  Tc 0  Tw (~popper\(\) {) Tj12 -12  TD (if\(unwinding) Tj18 -12  TD -0.1407  Tc 0.0207  Tw (|| !std::uncaught_exception\(\)\)) Tj-6 -12  TD -0.12  Tc 0  Tw (data.pop_back\(\);) Tj-24 -12  TD (}) Tj-12 -12  TD (private:) Tj12 -12  TD (popper\(const popper &\);) Tj0 -12  TD (std::vector<value_type> &data;) TjT* (const bool unwinding;) Tj-12 -12  TD (};) Tj0 -12  TD (....) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F2 10.2  Tf0.9757  Tc (std::uncaught_exception) Tj166.8 0  TD /F4 10.2  Tf0.7981  Tc 0.8519  Tw (is a function that is) Tj-166.8 -12  TD 0.0703  Tc 0.3797  Tw (generally not as useful as it first appears. It often leads to false) Tj0 -12  TD 0.4247  Tc 1.0253  Tw (confidence in code [10], but with an understanding of its) TjT* 0.0733  Tc 0.7039  Tw (limitations, there are a few situations in which we can press it) TjT* 0.1202  Tc -0.2702  Tw (into useful service.) Tj0 -18  TD /F0 10.8  Tf0.136  Tc -0.232  Tw (A Lazy Approach) TjT* /F4 10.2  Tf-0.038  Tc 0.688  Tw (It is possible to take the transactional idea a step further using a) Tj0 -12  TD -0.0789  Tc 0.4622  Tw (technique that I first saw Angelika Langer present at ) Tj216.6 0  TD /F6 10.2  Tf-0.2092  Tc 0.6592  Tw (C++ World) Tj-216.6 -12  TD /F4 10.2  Tf-0.1673  Tc 0.0173  Tw (in 1999:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (....) Tj0 -12  TD (value_type pop\(\) {) Tj12 -12  TD (try {) Tj12 -12  TD (--length;) Tj0 -12  TD (return data[length];) Tj-12 -12  TD (}) Tj0 -12  TD (catch\(...\) {) Tj12 -12  TD (++length;) Tj0 -12  TD (throw;) Tj-12 -12  TD (}) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (std::size_t length;) Tj0 -12  TD (std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf-0.0605  Tc 0.5566  Tw (Here the size of the stack is tracked in a separate variable that is) Tj0 -12  TD -0.0917  Tc 1.056  Tw (incremented and decremented accordingly. It uses an exception-) TjT* -0.0194  Tc 1.1694  Tw (aware style to implement commit-rollback semantics, bumping) TjT* -0.0858  Tc 0.7858  Tw (the length count back up again if the copy from the last element) TjT* -0.1398  Tc 0.3898  Tw (fails with an exception.) Tj11.4 -12  TD 0.2912  Tc 0.8788  Tw (The obvious benefit of this approach is that it will work) Tj-11.4 -12  TD 0.0461  Tc 0.4039  Tw (independently of whether or not the stack is already unwinding) Tj245.4 -19.8  TD /F0 10.8  Tf0.1872  Tc 0  Tw (29) Tj-212.4 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) TjETendstreamendobj127 0 obj8058endobj125 0 obj<</Type /Page/Parent 119 0 R/Resources <</Font <</F0 6 0 R /F2 10 0 R /F4 16 0 R /F5 18 0 R /F6 24 0 R >>/ProcSet 2 0 R>>/Contents 126 0 R>>endobj129 0 obj<</Length 130 0 R>>stream
BT28.8 42  TD0 0 0 rg /F0 10.8  Tf0.1872  Tc 0  Tw (30) Tj0 768.6  TD /F0 12  Tf-0.0144  Tc 0.0744  Tw (Overload issue 62 august 2004) Tj0 -40.8  TD /F4 10.2  Tf0.1703  Tc 0.2797  Tw (because of an exception. However, the disadvantage with this) Tj0 -12  TD -0.0965  Tc -0.0073  Tw (approach is not so much with the extra piece of state that has been) TjT* 0.0216  Tc 0.4284  Tw (introduced but that popped elements are never actually popped.) TjT* -0.0705  Tc 0.5205  Tw (They continue to exist in the ) Tj120 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (data) Tj27 0  TD /F4 10.2  Tf-0.1161  Tc 0.5661  Tw (member long after they have) Tj-147 -12  TD 0.2201  Tc 0.2299  Tw (been popped: at least up until another modification operation) Tj0 -12  TD -0.051  Tc -0.299  Tw (requires rationalization of ) Tj104.4 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (data) Tj26.4 0  TD /F4 10.2  Tf-0.0339  Tc 0.4839  Tw (with ) Tj19.8 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (length) Tj36 0  TD /F4 10.2  Tf-0.159  Tc -0.141  Tw (, such as a ) Tj42 0  TD /F2 10.2  Tf-0.12  Tc 0  Tw (push) Tj24 0  TD /F4 10.2  Tf-0.4572  Tc -0.2928  Tw (. A) Tj-252.6 -12  TD 0.024  Tc 0.426  Tw (couple of minor refinements address this issue by introducing a) Tj0 -12  TD -0.087  Tc -0.063  Tw (deferred but amortized commit operation:) Tj14.4 -24  TD 0.2 0.2 0.2 rg /F5 10.2  Tf-0.12  Tc 0  Tw (template<typename value_type>) Tj0 -12  TD (class stack {) TjT* (public:) Tj12 -12  TD (stack\(\)) Tj12 -12  TD (: uncommitted\(false\) {}) Tj-12 -12  TD (void push\(const value_type &new_top\) {) Tj12 -12  TD (commit\(\);) Tj0 -12  TD (data.push_back\(new_top\);) Tj-12 -12  TD (}) Tj0 -12  TD (value_type pop\(\) {) Tj12 -12  TD (commit\(\);) Tj0 -12  TD (try {) Tj12 -12  TD (uncommitted = true;) Tj0 -12  TD (return data.back\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (catch\(...\) {) Tj12 -12  TD (uncommitted = false;) Tj0 -12  TD (throw;) Tj-12 -12  TD (}) Tj-12 -12  TD (}) Tj0 -12  TD (std::size_t size\(\) const {) Tj12 -12  TD (commit\(\);) Tj0 -12  TD (return data.size\(\);) Tj-12 -12  TD (}) Tj0 -12  TD (....) Tj-12 -12  TD (private:) Tj12 -12  TD (void commit\(\) const {) Tj12 -12  TD (if\(uncommitted\) {) Tj12 -12  TD (data.pop_back\(\);) Tj0 -12  TD (uncommitted = false;) Tj-12 -12  TD (}) Tj-12 -12  TD (}) Tj0 -12  TD (mutable bool uncommitted;) TjT* (mutable std::vector<value_type> data;) Tj-12 -12  TD (};) Tj-14.4 -24  TD 0 0 0 rg /F4 10.2  Tf0.282  Tc 1.168  Tw (Internally the committed state will be at most one element) Tj0 -12  TD 0.5296  Tc 0.7775  Tw (different from the uncommitted state, but externally any) TjT* 0.3105  Tc 1.1395  Tw (attempt to determine the state by calling an operation will) TjT* 0.5346  Tc 0.9654  Tw (ensure that the books are kept balanced. This constraint) TjT* 0.124  Tc 0.5831  Tw (requires that all public functions call the ) Tj176.4 0  TD /F2 10.2  Tf0.08  Tc 0  Tw (commit) Tj40.8 0  TD /F4 10.2  Tf0.1307  Tc 0.3193  Tw (function as) Tj-217.2 -12  TD 0.3946  Tc 1.0754  Tw (their first act, which requires that the object\222s state to be) Tj0 -12  TD 0.1857  Tc 0.5643  Tw (qualified as ) Tj54.6 0  TD /F2 10.2  Tf0.0514  Tc 0  Tw (mutable) Tj47.4 0  TD /F4 10.2  Tf0.1311  Tc 1.2789  Tw (to permit updates in query functions.) Tj-102 -12  TD 0.114  Tc 1.0027  Tw (Thus, this design affects all member functions and imposes a) Tj0 -12  TD 0.0975  Tc 0.7125  Tw (little more on the class developer. The class user is, however,) TjT* 0.1642  Tc 0  Tw (unaffected.) Tj0 -18  TD /F0 12  Tf0.0324  Tc (Conclusion) TjT* /F4 10.2  Tf0.7124  Tc 0.3376  Tw (It is time to declare a moratorium on these exceptional) Tj0 -12  TD -0.0919  Tc 0.5419  Tw (experiments on abstracted cats. They have served to demonstrate) TjT* -0.0892  Tc 0.5392  Tw (that no design can be perfect, and that encapsulation is related to) Tj275.4 708  TD -0.0651  Tc 0.5651  Tw (usability; it is not just a matter of data hiding. Although we may) Tj0 -12  TD -0.0667  Tc 1.1167  Tw (strive for absolute recommendations, there are times when only) TjT* -0.0859  Tc 0.6025  Tw (relative ones can be made with confidence \(and caveats\). Design) TjT* -0.0805  Tc 0.5905  Tw (is about compromise and about context, and therefore it is about) TjT* -0.122  Tc 0.2292  Tw (understanding consequences. Weigh up the benefits and liabilities) TjT* 0.0909  Tc 1.1227  Tw (for a particular usage and then make your decision \226 what is) TjT* -0.1173  Tc 1.4673  Tw (workable in one context may be unworkable in another, and so) TjT* -0.1076  Tc 0.0776  Tw (what is \223good\224 in one situation may be \223bad\224 in another.) Tj10.8 -12  TD -0.1334  Tc -0.4166  Tw (On the compromise of design in other fields I will leave you with) Tj-10.8 -12  TD -0.1265  Tc 0.2165  Tw (this quote from David Pye [11]:) Tj16.8 -24  TD /F7 10.2  Tf-0.1245  Tc -0.3735  Tw (It follows that all designs for use are arbitrary. The designer or his) Tj-11.4 -12  TD -0.0987  Tc -0.3993  Tw (client has to choose in what degree and where there shall be failure.) Tj0 -12  TD -0.1051  Tc -0.3929  Tw (Thus the shape of all design things is the product of arbitrary choice.) TjT* -0.0945  Tc 0.1465  Tw (If you vary the terms of your compromise \226 say, more speed, more) TjT* -0.0845  Tc -0.4435  Tw (heat, less safety, more discomfort, lower first cost-then you vary the) TjT* -0.0804  Tc 0.0324  Tw (shape of the thing designed. It is quite impossible for any design to) TjT* -0.0833  Tc 0.502  Tw (be \223the logical outcome of the requirements\224 simply because, the) TjT* 0.2676  Tc 1.7844  Tw (requirements being in conflict, their logical outcome is an) TjT* -0.134  Tc 0  Tw (impossibility.) Tj205.2 -12  TD /F8 10.2  Tf-0.101  Tc -0.343  Tw (Kevlin Henney) Tj-55.2 -12  TD /F2 9  Tf0  Tc 0  Tw (kevlin@curbralan.com) Tj-155.4 -30  TD /F0 12  Tf-0.018  Tc (References) Tj0 -18  TD /F4 10.2  Tf0.2356  Tc 0.2144  Tw ([1] ) Tj15.6 0  TD /F6 10.2  Tf0.1879  Tc 0.2621  Tw (Taligent\222s Guide to Designing Programs: Well-Mannered) Tj-4.8 -12  TD 0.2517  Tc 0.1983  Tw (Object-Oriented Design in C++) Tj139.2 0  TD /F4 10.2  Tf0.2001  Tc 0.2499  Tw (, \(Addison-Wesley, 1994\),) Tj-139.2 -12  TD /F2 9  Tf0  Tc 0  Tw (http://pcroot.cern.ch/TaligentDocs/) Tj37.8 -12  TD (TaligentOnline/DocumentRoot/1.0/Docs/) Tj0 -12  TD (books/WM/WM_1.html) Tj-48.6 -12  TD /F4 10.2  Tf-0.094  Tc -0.056  Tw ([2] Martin Fowler. ) Tj76.8 0  TD /F6 10.2  Tf-0.0697  Tc 0.1597  Tw (Refactoring: Improving the Design of Existing) Tj-66 -12  TD -0.133  Tc 0  Tw (Code) Tj24 0  TD /F4 10.2  Tf-0.1658  Tc 0.0158  Tw (\(Addison-Wesley, 1999\), ) Tj102 0  TD /F2 9  Tf0  Tc 0  Tw (www.refactoring.com) Tj-136.8 -12  TD /F4 10.2  Tf-0.1572  Tc 0.4072  Tw ([3] Herb Sutter. ) Tj64.8 0  TD /F6 10.2  Tf-0.1499  Tc 0.5999  Tw (Exceptional C++) Tj72.6 0  TD /F4 10.2  Tf-0.1112  Tc -0.0388  Tw (\(Addison-Wesley, 2000\).) Tj-137.4 -12  TD -0.1127  Tc -0.4373  Tw ([4] Bjarne Stroustrup. \223Sixteen Ways to Stack a Cat,\224 ) Tj211.2 0  TD /F6 10.2  Tf-0.1042  Tc -0.6458  Tw (C++ Report) Tj49.8 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (,) Tj-250.2 -12  TD -0.0503  Tc -0.0997  Tw (October 1990, ) Tj60 0  TD /F2 9  Tf0  Tc 0  Tw (www.research.att.com/~bs) Tj-70.8 -12  TD /F4 10.2  Tf-0.1211  Tc -0.0289  Tw ([5] To quote C. A. R. Hoare:) Tj10.8 -12  TD /F7 10.2  Tf-0.1203  Tc -0.1777  Tw (\223There are two ways of constructing a software design. One way is to) Tj0 -12  TD -0.013  Tc 0.2377  Tw (make it so simple that there are obviously no deficiencies. And the) TjT* 0.101  Tc 0.351  Tw (other way is to make it so complicated that there are no obvious) TjT* -0.0255  Tc 0  Tw (deficiencies.\224) Tj-10.8 -12  TD /F4 10.2  Tf-0.1429  Tc -0.2071  Tw ([6] Tom Cargill. \223Exception Handling: A False Sense of Security,\224) Tj10.8 -12  TD /F6 10.2  Tf-0.0375  Tc -0.1125  Tw (C++ Report) Tj50.4 0  TD /F4 10.2  Tf-0.1245  Tc -0.0255  Tw (, November-December 1994.) Tj-61.2 -12  TD 0.2085  Tc 0.7665  Tw ([7] Kevlin Henney. \223A Tale of Two Patterns,\224 ) Tj207.6 0  TD /F6 10.2  Tf0.2178  Tc 0.8322  Tw (Java Report) Tj53.4 0  TD /F4 10.2  Tf-0.15  Tc 0  Tw (,) Tj-250.2 -12  TD -0.0509  Tc 0.2009  Tw (December 2000, ) Tj69 0  TD /F2 9  Tf0  Tc 0  Tw (www.curbralan.com) Tj-79.8 -12  TD /F4 10.2  Tf-0.1385  Tc 0.3885  Tw ([8] Bertrand Meyer. ) Tj83.4 0  TD /F6 10.2  Tf-0.0679  Tc 0.5179  Tw (Object-Oriented Software Construction, 2nd) Tj-72.6 -12  TD -0.0913  Tc 0  Tw (Edition) Tj32.4 0  TD /F4 10.2  Tf-0.0541  Tc -0.0959  Tw (\(Prentice Hall, 1997\).) Tj-43.2 -12  TD -0.1222  Tc -0.3706  Tw ([9] Kevlin Henney. \223C++ Patterns: Executing Around Sequences,\224) Tj10.8 -12  TD /F6 10.2  Tf-0.1363  Tc -0.0137  Tw (EuroPLoP 2000) Tj64.8 0  TD /F4 10.2  Tf-0.1703  Tc 0.4203  Tw (, July 2000, ) Tj49.2 0  TD /F2 9  Tf0  Tc 0  Tw (www.curbralan.com) Tj-124.8 -12  TD /F4 10.2  Tf-0.1267  Tc -0.0233  Tw ([10] Herb Sutter. ) Tj68.4 0  TD /F6 10.2  Tf-0.144  Tc -0.306  Tw (More Exceptional C++) Tj95.4 0  TD /F4 10.2  Tf-0.1385  Tc -0.0115  Tw (\(Addison-Wesley, 2002\).) Tj-163.8 -12  TD -0.0927  Tc -0.4573  Tw ([11] Henry Petroski. ) Tj82.2 0  TD /F6 10.2  Tf-0.1072  Tc -0.3428  Tw (To Engineer is Human: The Role of Failure in) Tj-71.4 -12  TD -0.0744  Tc -0.0756  Tw (Successful Design) Tj75 0  TD /F4 10.2  Tf-0.0658  Tc -0.0842  Tw (\(Vintage, 1992\).) TjET1 1 1 rg 304.2 56.4 263.4 73.2 re f0.9529 0.9529 0.9529 rg 304.8 57 262.2 72 re fBT309.6 115.2  TD0 0 0 rg 0.2132  Tc 1.094  Tw (This article was originally published on the C/C++) Tj228.6 0  TD 0.1549  Tc 0  Tw (Users) Tj-228.6 -12  TD -0.1538  Tc 0.0038  Tw (Journal C++) Tj52.2 0  TD -0.1102  Tc 0.0802  Tw (Experts Forum in February 2002 at) Tj-52.2 -12  TD /F2 9  Tf0  Tc 0  Tw (http://www.cuj.com/experts/documents/s=7986/) Tj0 -12  TD (cujcexp2002Henney/) TjT* /F4 10.2  Tf-0.0959  Tc 0.1709  Tw (Thanks to Kevlin for allowing us to reprint it.) TjETq 304.2 129.6 m 304.2 56.4 l 567.6 56.4 l 567.6 129.6 l 304.8 129 m 304.8 57 l 567 57 l 567 129 l h W* n 304.2 56.4 263.4 73.2 re fQ endstreamendobj130 0 obj10216endobj128 0 obj<</Type /Page/Parent 119 0 R/Resources <</Font 131 0 R/ProcSet 2 0 R>>/Contents 129 0 R>>endobj131 0 obj<</F0 6 0 R/F2 10 0 R/F4 16 0 R/F5 18 0 R/F6 24 0 R/F7 29 0 R/F8 31 0 R>>endobj6 0 obj<</Type /Font/Subtype /Type1/Name /F0/BaseFont /ODELMA+HelveticaNeue-BoldExt/FirstChar 32/LastChar 255/Widths [ 370 370 592 816 816 1037 926 370 444 444 464 600 370 481 370 426 816 556 816 816 816 816 816 759 816 816 370 370 600 600 600 759 800 834 889 907 907 778 722 944 926 330 685 870 722 1130 926 944 833 944 852 815 722 870 796 1148 796 778 759 444 426 444 600 500 260 741 778 741 778 758 426 778 741 296 296 722 296 1130 741 778 778 778 519 704 444 741 668 1056 722 648 648 444 222 444 600 500 500 500 370 816 592 1000 816 816 260 1167 815 370 1167 500 759 500 500 370 370 592 592 500 500 1000 260 1000 704 370 1148 500 648 778 370 370 816 816 816 816 222 816 260 800 482 611 600 481 800 260 400 600 530 530 260 741 620 370 260 361 506 611 1222 1222 1222 759 834 834 834 834 834 834 1148 907 778 778 778 778 330 330 330 330 907 926 944 944 944 944 944 600 944 870 870 870 870 778 833 759 741 741 741 741 741 741 1148 741 758 758 758 758 296 296 296 296 778 741 778 778 778 778 778 600 778 741 741 741 741 648 778 648 ]/Encoding /WinAnsiEncoding/FontDescriptor 7 0 R>>endobj7 0 obj<</Type /FontDescriptor/FontName /ODELMA+HelveticaNeue-BoldExt/Flags 16416/FontBBox [ -250 -213 1466 1000 ]/MissingWidth 944/StemV 218/StemH 218/ItalicAngle 0/CapHeight 1405/XHeight 1055/Ascent 984/Descent -213/Leading 469/MaxWidth 1222/AvgWidth 683/FontFile3 132 0 R>>endobj132 0 obj<</Filter /FlateDecode /Length 133 0 R/Subtype /Type1C>>stream
HâLUPTÁæ˚∫ª¢^`Øw≈›ew•IàJU¢`à<D¿í–’V!,Çÿà≠µæ–Vc∆Q´11M™Ü&ä÷G>Z‘¯äâöác:mM‚dö˘ÓÊ,”û≠ƒtÓÃÔˇˇÁ¸˜˚Œ˘Œ˘5Ç^+h4öÿyŸ9˘Yâπæ⁄_sM•∑–∑Ã7iñø∂*gysÿ QçTõFµk’Xù:FOèPç]ﬂÒ}≠!V~)ç∆ûHÙF∞è˘¬,Ë4ö_øÚßŸ˛Ü∂¶ö%’ÕÆÑ G]?ù1#…ïUÂØπJ⁄Õæ∫ÄÎô˙JSÉø…€Ï´öÏre’÷∫ä√ˆW±/‡kj·’áp\5ó◊’‹‰≠Ú’yõñ∫¸ã]˘5ı˛Ê∂ü+Îió∑æjäø…U√æÅeÅö™oSç/˛OLsÖŸ∏òéØæ Wı„Nò© h¯LZaî HÇ!∏!.Fò5Nò√¥ÇNò*,ˆ	É¬]ÕSö:ÕImñˆW⁄[∫<›*ΩMø^ﬂma»7ÙäF1_l˜M∆dcûqçÒ∞ÒíI2eö∂ô>ë7‚pƒ¥àíàﬂDÙD¸gd˙»F~7j¡®WGkG/˝ö'-í÷J“P§Ÿy, µ$j :*zUÙi≥—¸∏yôπ«íì$	C¯é2êaæ∑ºHÓº£RF	w≈µπ≠˛πm¶#,ªœÇ1Vå!∑Q
)AO´Ê:≤uj,+I∞>ã$§XërI_¬Í†HëF“àôîFÈVJøFi‡©cÿ•ÏâYÏâëqiH∑"}&“àßaﬂ/…zåí(≈J)œRRYµu∂†Q¨Fî´-à‚)/èƒ#?º"Jtı∞kŒ"®;ãzAÿ)(JÌm∞®/¿¢ÈATÈ∞ﬂ(à~Zå√∏˜HK—Ì·◊8Á·≈hYh%b(ÌX	Òc%œb®ù^ßïåk_gã:èaD·∑ft`Æ|ÃŒ•Ò¢|±íÙ≈´hÚzì|ê-•ˆÿ’b∆1Ärú@π[aW˛xËƒﬁﬁ]7_èAI?Ñ√pX°ü∆!€B≈î\@œØv†\¸z˚ç∑nÿ>Ì´úOô°ıﬂ∂Ö¶;Éÿpchj¡Dô{‡F? i*‰è˘Îœ
,‚¿Öeπ≈K‚gNz˝ÓF'πEzÊ%ƒÊa±«Ø√ÉS>rªÙ|Ún«f£‹wigÔ—ÀVàSæ†6zífz)ß’∑¯◊ù˝]ól∑¸ÖN˘fucEæÉ&äaN€ô]é Œ¨ê!7∏]°"v‡àA>Í”#Cî`ÖÃ±í’\j4ÜbBY´Ê0XÉàp`‘pÎ>ƒ_‰ã˚úŸq‘÷}Àƒ¥UdL-Íº⁄Ê§rëÚ∂°¬ãK „:Ê óÊú§Ñ“I´ÍûsæªA}ñ–G√±	0∂H>˙Á˛Ô|zpÉ∫UAÚœ)Ωál6:ïJ≥©îºwh*z‡A‹gHE!ÂˆP|fZÀÛeNå⁄|‰2bl˝gVÁΩÊdeŒR‡ÿ¯VAôuN^e2ç≠8}ÚÚâC_;§√)Vﬂﬁ`©nØzJQ7âÙ=F˘î]M/ö±Õòä'ëàD&ïsˇ¥ú=/,úΩr ‚v√MO°\~_æ°&‚o 7Éu9ŸπuÕÌ˙“`◊WŒMÙ©Ç˘»9ÅLß¸˛Á%gR^ÁÆ˜ æÓ˜6\5a˙f*Î¢Ò6Oeu4}ÉssV∑ÁJ£iÉQ~?eYIa≤UæAô»qcæCæ∂Q-PÒæ›w¥˜Õ˚Æ.üÔ©^Ïr>¿…—¸Ør‹Ω"]?
J˛“Ω∞ŸpÍ6fsA{ßa*ıêá‚R(ï
ëÎE¸ıO:èw“®Â≥)∆VT¯Ú˘Äì˚ƒ,Öõñû=nΩx˛›œ1ˆP…ÇŸÓäá‘Åî=ËAcÂEwT-∑ ˛eãUÓΩ≠8ìrÿTÕf©E—;p˜±É∫+î›∞jÊXÒ≈^&/M°‰\*XÎ@ëxw€πw>∂]<[SÍ$â⁄ﬂ§b´ºe5≠¯Ò'“ñtëÖ¿dÛ ‡∑,„}ËR®YÑX∆h
±,}"=jÁ˜ê«¿sπ·L4‡¶(py3ç(LÊT≤êÒ/NÁ,.ƒc˙¸^º∞øÆƒ”\5œI›"π…Æ®[E‘∆Ë~¥VÍN'ßPÏ¸√‡)+b;˙GËmëï`Q∞N¸‰ï•∑?‡q“^Q∫— ç§Öµˆ*tﬂÎ’"Î…òf⁄h•êûˆ–õK∞ôü£äïªD$√Ú$œ$ÂWa¬Ω{›òÄ¸˚üïMÿ„înÑ;S!»∞’¯pg⁄•^SúàÑ”3∏Ÿ%Œœ†1N™F]!≤íµà√R,è8⁄‡Õ•≤0ˇTa¬ÉÉt,¡i∞áë™.‡ä\Äµˆ°)¢‰‚ÜﬁÕ÷I-√™Wß≥ıt$©Ele%ôÁ„-xÉcZªôŸ™›_…}Ínº° K§àÊï,ÚÏ˛©‹Û-»ætªq õN‘ä(´¶y–s6⁄Kès›6>IÑÆ+úÚã˚R_©q!AîÓ1†s®≥u8√òŒ©ÒtÓ†áâwÜ‚—÷Jh]gK¯.˚yxó/ü	≠|Õ‹o’ºÃ~º•¶·%ÂâïÛ‚ÁVt#∑«H1ywÄ˝[πp"‹
˘F=Ù„iˆD‰Ú!’FÓaù5`óHﬂ©ô∏âw¥ì„◊Å8ı‚Ç#zZΩFÅì‹Ü."é∑ä‘ˇ≤]≠AQ\YòaÏ$d@õû¨åv#%ÆZæ]ŸÉ¢	Â∏>÷*&ë«Ã†>¢aÑå">@ÒEAYï¢&≤µb°A
"1‚#âö2∫ûûú©∏ÁŒ‡Rõ‰«T˜ÌÈ{˙‹søÔ;ﬂ˝ç´\Å8ïû§®F•…∆É…—ƒ¡H∫*MúÕ—FZ¬I™Ç≤	ñ9gÜ—L{,≠º„eáôŒπõlº“«±âÉ%4¡ÿµCN$°ΩI%4ªà!çhQ|ﬂF∞@ÑLã√◊·;-"¡{∫Æù√‘°’±t1tÌ¢§-§≠ÿF∑ÛHvã∏‡ÿ.Çâˇ≤a√–øF[â@ã	äQ§ˇ∑¡<ª}ˇ4ﬁƒÖ≤#£+1t3)@∏È M®UNC/qcfFﬁ ﬂÅ¶+ïôk¶%ÃóG›
·¥·)±ÛI–=Óß€˚ÄøÁ˜ªÖµ]Îlø^º˜KI{ÄÚﬁMä°/≤ºuçÙU≈≈•|^xqÓRñ!fNzºå≈,˝ ñ˛nÿ»J„ô¥†∑R ídH‰óVÁuúªën#w2Y—^q‚“˜~ÕI¥ºπícØ]√†ñG"X)∏ﬁÉNHZÌ+Ö",»¡îC§«‘M¡p^	‡cë!:ïkÕ˝,{Ü_llj®$<R˙ƒ*c
èÈ60eB§éﬂIéH\è∫rYh≈èNqs∂%óüÙ´ªP}ª≠s›–âqWi°áRÿR¬?Àà±âÿ xmÉƒèf29≥‡7z•∂ã„äq∂¢RT≈0˚∂§]C5—yËâqbxﬁêî°å	IL€kÃ™L{ªÍt@:sÉ©ÌRﬂw‘‡˚Jª◊¬7˘Ù—R≥*ØoèıjH◊ëAÇAJG»‰(‚ÿ–ƒÊë”ë•úï«ÅJ©s8–5î\Cm≠•è	ûöU´Ï7’´t¥	…ün‰Ë/)=‡<Âpè√0áAªác¯î”ŒvÒjYjôZ–˜õî8¥ã◊0Æ±{hr|¿i√ÕœGuºr+^Îˆï[‘Z7”ÌÁL#\ Àt^)ÅÂ‚∞‡¯∞…◊’+ΩR$=€~bKua’û>XjÒ÷°S[[Ùœ™MÒÒYÎg~$„‘ŒˇC‘¨@ùˆz2¸øÖ•ççíêS`)≤lµxÄÅœ=º·¯9?ÿ´˘yÊ≤ìp∞«ò$ÌlB∫ìÄ_eÿ7˜n$¥ë{≠'_\&>kΩxØ≥uV``ƒ¨∞àãœ$!#∞Ld&Æ˛∫Mu˝rˆ-=ï©ﬂî~$5MÚ9¡ë…Ûñ VÿéûñJ€N~˝LQ€¡¢ì0º˚Í1FêSX ˝Fê€äÇæg‡ï2N·c÷ç◊£Í›À/^\Ω™õ_d Â?‰J!)WÂ∫‹ïkÁ=WÆ·aÆ\°√ô´=â$eªïØ[Y¨'#¶C#e°ß¬_√∏€-eMíç◊Ã¸≠Á&∏´éRÔ)gÂ0ÁßÕI7Ë—ÎümÁeõ≤sèP˜ËâŸ›kâ0¥A8/9∂¿—¶ŸYÒêA¸◊∞…Jß• BÿHºG—°';˙Ù§e–ì˛‡â˝´¯œ;Z±yÛQ	‹5Ò“ı8za*êSI=A≠—Œ∆•îaO$ãÌN•q÷‡>’†ùjP)Ç˜ÉÉ≠m“—ΩC”«GÑ§ŒBﬁciw√¸q˚©®É…ˆDÈG⁄¨ÑŒñó>ó„5®{;cx‡“ü≠•”è#À`R6˘\ÍÏ^7!V+Î0B£ßÑë¨£∞ü÷–»≥Ñæ©ÊŒ∑ßñLê∞Åÿ5‰Â°F≈-X)Y©UGizï˘.eM≥ﬂb3ï*˙C˝öy:ÚqÆ∑ê‘^y÷˝^ô8yÉi˙∫U6[ñÑ:ÕÊ#GÚéÎ!∫¨|e•öˇ‡Ô¸
$8stÂ7îø€QòŒq˜ |G}"ûC‚˛å„?
·LŒû‘=áa¶´ÉÜÅµ$‰l…]?ﬂæB˝ØΩYËW<Ù8ãn!ﬁô+}ï:˝t†û≠:Y∂ÚB{F8™Ë≠3tñÍh<›Rﬂ`éí∞≈˘Ñ∆ÕÁŸ∏´¨›°∫R≤±væªê…Öl}≤D#‘vWùq„<£v3E} ≈◊∞LÑÄªƒ02Âw	∞.»J0EÁ$®Æﬁ5¢ I8
ÖM0â(v<–É¸ÎkMhˇsM†Ñã,#?ÔxsÚS=åß…L<çÿÔåú`ÃéäaÂx‹Ã@ÙáØi‹˛Á4ÜòK˝&∆∏{Ç#±ﬂ4íï&√¯ßÕïu«eñê¬	èÌÈ,>^•r˙É?˙√P1¡ß®	•N$¨ÊÖCœæ/I(≠™¸p}•c4¬°BszÅY4'aÃ;,—ÜŒ@Ωò\6›$æ÷Réì∂W¿XÖÌøa°Ü¿ƒ˝˛h⁄Eú¥ó;πøoÀ)=‰w±©Ï˘ØûQ,¡,˛Á‹iÌòØ'∆%b`‡µDËë-√LÓª‹›πÀ˝«Y∆Ö&=ªA“:ƒ\⁄¬À‡˘Zî*—≈{<»⁄„N}Ωµ∞JOçuE™uô~~ŒÆOeÿB÷€`,Cq8s:‡°å6w#I∞(€t‘LâkXŒµ¡3gª∏˙ñWÈ…+ùvÂƒøtú´≠d"à#à>™\{årú›t≥R≈aÎó^‘;ΩÿΩÃ¨=ªõU˘ø÷®!NKx†ÊH]œÉ˙!∆±i‘fΩÓ¨Õ˙(ÓF–’5Ùf√Y.˜¡;®Å€ó©¡°xàË£9\…C&Ó¿<<∆A&O¢Fsê≈„fÍ√f ªÇ≤ùLr·£ÄYµ⁄˛7µí äå/qº‰p:Eé]Yãπ≥9+^ü∂“fKì—Gc≠˘‘Z£RW~ü
x÷ﬁÉ£0˘Ñ»
WÈ˝âÚHh˙Dß<¢ÒsûŒ{°ûö¿›A÷ö5¯Î9≠yü}¡>úª§|ó‹)q‹ﬂ•O0ºQ‡•UxﬂˇÓÁEQ ó¿Øendstreamendobj133 0 obj4355endobj8 0 obj<</Type /Font/Subtype /TrueType/Name /F1/BaseFont /Arial,Bold/FirstChar 32/LastChar 255/Widths [ 278 333 474 556 556 889 722 238 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 333 333 584 584 584 611 975 722 722 722 722 667 611 778 722 278 556 722 611 833 722 778 667 778 722 667 611 722 667 944 667 667 611 333 278 333 584 556 333 556 611 556 611 556 333 611 611 278 278 556 278 889 611 611 611 611 389 556 333 611 556 778 556 556 500 389 280 389 584 750 556 750 278 556 500 1000 556 556 333 1000 667 333 1000 750 611 750 750 278 278 500 500 350 556 1000 333 1000 556 333 944 750 500 667 278 333 556 556 556 556 280 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 556 278 333 333 365 556 834 834 834 611 722 722 722 722 722 722 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 556 556 556 556 556 278 278 278 278 611 611 611 611 611 611 611 549 611 611 611 611 611 556 611 556 ]/Encoding /WinAnsiEncoding/FontDescriptor 9 0 R>>endobj9 0 obj<</Type /FontDescriptor/FontName /Arial,Bold/Flags 16416/FontBBox [ -250 -212 1148 1000 ]/MissingWidth 319/StemV 153/StemH 153/ItalicAngle 0/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 957/AvgWidth 479>>endobj10 0 obj<</Type /Font/Subtype /Type1/Name /F2/BaseFont /Courier/FirstChar 32/LastChar 255/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 ]/Encoding /WinAnsiEncoding/FontDescriptor 11 0 R>>endobj11 0 obj<</Type /FontDescriptor/FontName /Courier/Flags 34/FontBBox [ -250 -250 720 1000 ]/MissingWidth 600/StemV 109/StemH 109/ItalicAngle 0/CapHeight 905/XHeight 686/Ascent 805/Descent -250/Leading 324/MaxWidth 600/AvgWidth 600>>endobj14 0 obj<</Type /Font/Subtype /TrueType/Name /F3/BaseFont /Arial/FirstChar 32/LastChar 255/Widths [ 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 15 0 R>>endobj15 0 obj<</Type /FontDescriptor/FontName /Arial/Flags 32/FontBBox [ -250 -212 1211 1000 ]/MissingWidth 276/StemV 80/StemH 80/ItalicAngle 0/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 1009/AvgWidth 441>>endobj16 0 obj<</Type /Font/Subtype /TrueType/Name /F4/BaseFont /TimesNewRoman/FirstChar 32/LastChar 255/Widths [ 250 333 408 500 500 833 778 180 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 778 500 778 333 500 444 1000 500 500 333 1000 556 333 889 778 611 778 778 333 333 444 444 350 500 1000 333 980 389 333 722 778 444 722 250 333 500 500 500 500 200 500 333 760 276 500 564 333 760 500 400 549 300 300 333 576 453 250 333 300 310 500 750 750 750 444 722 722 722 722 722 722 889 667 611 611 611 611 333 333 333 333 722 722 722 722 722 722 722 564 722 722 722 722 722 722 556 500 444 444 444 444 444 444 667 444 444 444 444 444 278 278 278 278 500 500 500 500 500 500 500 549 500 500 500 500 500 500 500 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 17 0 R>>endobj17 0 obj<</Type /FontDescriptor/FontName /TimesNewRoman/Flags 34/FontBBox [ -250 -216 1166 1000 ]/MissingWidth 324/StemV 73/StemH 73/ItalicAngle 0/CapHeight 891/XHeight 446/Ascent 891/Descent -216/Leading 149/MaxWidth 972/AvgWidth 401>>endobj18 0 obj<</Type /Font/Subtype /Type1/Name /F5/BaseFont /Courier-Bold/FirstChar 32/LastChar 255/Widths [ 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 600 ]/Encoding /WinAnsiEncoding/FontDescriptor 19 0 R>>endobj19 0 obj<</Type /FontDescriptor/FontName /Courier-Bold/Flags 16418/FontBBox [ -250 -250 720 1000 ]/MissingWidth 600/StemV 191/StemH 191/ItalicAngle 0/CapHeight 900/XHeight 703/Ascent 801/Descent -250/Leading 334/MaxWidth 600/AvgWidth 600>>endobj24 0 obj<</Type /Font/Subtype /TrueType/Name /F6/BaseFont /TimesNewRoman,Italic/FirstChar 32/LastChar 255/Widths [ 250 333 420 500 500 833 778 214 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 778 500 778 333 500 556 889 500 500 333 1000 500 333 944 778 556 778 778 333 333 556 556 350 500 889 333 980 389 333 667 778 389 556 250 389 500 500 500 500 275 500 333 760 276 500 675 333 760 500 400 549 300 300 333 576 523 250 333 300 310 500 750 750 750 500 611 611 611 611 611 611 889 667 611 611 611 611 333 333 333 333 722 667 722 722 722 722 722 675 722 722 722 722 722 556 611 500 500 500 500 500 500 500 667 444 444 444 444 444 278 278 278 278 500 500 500 500 500 500 500 549 500 500 500 500 500 444 500 444 ]/Encoding /WinAnsiEncoding/FontDescriptor 25 0 R>>endobj25 0 obj<</Type /FontDescriptor/FontName /TimesNewRoman,Italic/Flags 98/FontBBox [ -250 -216 1163 1000 ]/MissingWidth 377/StemV 73/StemH 73/ItalicAngle -11/CapHeight 891/XHeight 446/Ascent 891/Descent -216/Leading 149/MaxWidth 969/AvgWidth 402>>endobj29 0 obj<</Type /Font/Subtype /Type1/Name /F7/BaseFont /PDELMA+HelveticaNeue-CondensedObl/FirstChar 32/LastChar 255/Widths [ 240 258 407 480 480 759 556 240 241 241 352 600 240 352 240 278 480 480 480 480 480 480 480 480 480 480 240 240 600 600 600 444 800 500 519 519 556 463 444 537 537 204 426 500 444 704 556 556 481 556 519 500 463 519 462 722 481 462 463 259 278 259 600 500 204 444 463 426 463 444 259 463 463 204 204 444 204 722 463 444 463 463 296 407 259 463 406 648 406 406 389 259 222 259 600 500 500 500 240 480 407 1000 482 482 204 1037 500 240 796 500 463 500 500 240 240 407 407 500 500 1000 204 990 407 240 722 500 389 462 240 258 480 480 480 480 222 482 204 800 289 389 600 352 800 204 400 600 312 312 204 463 556 240 204 312 289 389 721 721 721 444 500 500 500 500 500 500 722 519 463 463 463 463 204 204 204 204 556 556 556 556 556 556 556 600 556 519 519 519 519 462 481 463 444 444 444 444 444 444 667 426 444 444 444 444 204 204 204 204 444 463 444 444 444 444 444 600 444 463 463 463 463 406 463 406 ]/Encoding /WinAnsiEncoding/FontDescriptor 30 0 R>>endobj30 0 obj<</Type /FontDescriptor/FontName /PDELMA+HelveticaNeue-CondensedObl/Flags 96/FontBBox [ -250 -212 1244 1000 ]/MissingWidth 556/StemV 82/StemH 82/ItalicAngle -11/CapHeight 1331/XHeight 999/Ascent 932/Descent -212/Leading 398/MaxWidth 1037/AvgWidth 450/FontFile3 137 0 R>>endobj137 0 obj<</Filter /FlateDecode /Length 138 0 R/Subtype /Type1C>>stream
Hâ\UkPWÌû«m^éÑ¶1Œhœ$ H|Ä®àÚÿBÅâc%å¢ò∞±V≈Y$!ö¨k–—D¬˙HTLTPÒÖl\GìQGbMt‘1VTjWÎÎ…áïΩêîÆ[˝„v˜˜∏Á;Á‘Ω,£ê1,Àæ>g∆ÃåYIc“eUÜJcIÒl√
√∏dSy©°º¬Pöπ∞l kö4îë4¨4B&çîK√Ô˚…0ˇZ˚k¨R¥≤øYD+Û⁄®ﬂ_-~‹HÜ˘Û˘!–1ø≤gÑJ`‰,˚óœ&õñ’òçÔ,Æ‘ç.	◊Màãã‘%ïöt95ïÜw+tÈÂ%&Û2ìπ∏“P:^ßK*+”e‰WË≤s˝˚®ŒX°+÷UöãKÔõóÍLãt∆rSeÕ2É.)UW\^a2Îå¥∂b≈¬
c©±ÿl4T¸O}å^˜|N‘∏|Ö·EtÄÜaÈ√x≥Ã¿2√hÊu%ÛÜå/c¢eL√LaòÈ^L∆P∆»0&Ü©fòX ,#c‰L<S¡|»|¡¥1?≤„ÿv˚ïÃWV*€%;/ª'Û»√Â˘Ú&yßB•X°hRúS¸§x¶\ßtíRK.â[∆µp]x˘xïxmÛ∫„ù‡˝©˜>Q>Fü/|˛È´ÙùÏª⁄˜sﬂá~å_äJÖÂ®Ø˙5®ö˝÷)á,Oë0ÉÚ1£‘8±'˝åÇÿAí ¯ÅIjàhÖòa∏¯¢àSﬁâ¬:	—•Üây0i‚[§Éø∆ú§∆àråôå¥ŒÚîÌqÀ{ÇéTêí™Øπ[ª>∫|M};ÇSÈ†ﬁ¡ûÜÚ”P/¿n œ¸˜”¢≤Z´§÷ÓLò ÂN˛˚KR´ c˙[ùÑ?‡…œ‰¯Ô◊á≈’M\Á•≤Z“;{ƒK]rÈOœë-Ì_>¥ÔÒÌWo\>zıwÀÅßéïâj—E⁄6Åÿk-È≥-»~SÃzSôêö4_UK∫¡ùa™]2–ëQÆHóÑÏ≈42µIHÄÕ8’	S{ÌÒíAœQ––˛4†«=å_–#ÖøcÁ≠˝õåqò6À∑√√>v≠Ù7˘⁄ 79˘JXINbæ“MpÆßHâ>‰l®–@Ó·C%Œ%™nã¨6®≥tπ¿ÏNqÛO ÓO»ıÜî•„µËG¢íòG ¸ÊyÂ*Ωe’6pºtq˚°ã’†ùpdºà&‚Jë[$°Lˇ¡"m(mæ∆.=∞t∏aã;∆Õ˜Ò˜•0*BÙÜ⁄0ùU´Aq∑ç.*-ﬂwow ‰≠õÄn˝Ïõ™¡Ç%òÉiò÷Ç9∂ñøëß¿4kUøXÏ“%;{…[›rà	¥,z3éFWa$é’FÇ.$êfBò ÕZÃ!™Fã6;†“¡vπ‰]A“+<õ°ŸÅÕP	˚˝J¢™•\ﬁ~ë„Ç€/«Òckïß®˙è®ß(ä®ñ¨±{B™ŸùNòNÕ°†∂èÍﬂD¬ﬂœãüSŸ÷%vÍÁp1S¿¬ˆ∫Å‰z—÷ìû>»≈_î	æ'ECúTÜ¥‡#e=<¢Ì°ûÊ+Ó≤›.i¨KﬁM7U4ò¯L°t—≈£P6<SP 8ö`pˇe=]§J˙IŸiå†[¡gÉªIWiiMˇU%°–˚Ô”‰:Èæ	M‘å•öµRj˜x ÑÁ:Ï£:@¡>»°|¶-Å,–&+@µ’áq´È¢˙?UUá∑¿WÇj\…n˛
] ïv0¨~÷e°¡tK◊ÚWÔpº±H=5∑`¶»ﬂAa›≠^m¡±«c æÜ¥Cú»_Å≠x˝`æ˙⁄ë∂ëøÓl…õ¶U5Rn¸,d∫‰•«_Ä4GN"§>Ûw⁄p@òîdó¸,0Ãñ ¡†˚·å•çQ˝π0SÓ∏h„Ò'üú
1√Êi≤±á‹Aœ!HµÖzö˙lòJ^ƒ˛ÌêC:US”˚û5Ö¶÷Æ±eu√œU ≥¥∫¶9!Ÿ…íè!∑›rÀ}ˆÂEñU≥Wä®4*˘ˆî™•y”‘cée>>—Ÿ⁄—"6æ*•±Õ≤Wc›Ÿ¯◊è¥›‹ÜıÎÍÎ4À-÷ùZË‰ŒZ¢ÛrQ%¬ß∏L‡€ÁŒ+úõΩÚ‡Èˆ≠÷ñœƒÉªzöˆÏÛR5Æ±guI±và≠8„Ñ˘.˛8ƒ*¸ß˘È]«é8DUuT‚Ñö« ˘⁄¥
ΩÑ?nk‡J>i/È“ÄˇIc@QSpTn~˘¸ï⁄zX´pπTÅ‹∆ÓuA∂S.âí∑ù8≈∏ÂAMêq&í´øÓ'QO≤VOM›H…Ü¸Sª;ˇeùì'æÑÓ+ÃwRtC):‹q”q∑˘µ`T’FçO¨æ	Å"î≤=Æ≠'«VÊ∑æ•¡158òÿÅJ‡ª⁄€⁄>—R⁄j”{π˙a°¢mÏÃ£^ÑÎ¬nÔ`\=€gdäÂú+]ÿœW¡Ùê~	pË~~é.©”«áX¿ˇ&Ωê
ÈÕ∞ƒƒŒˆ:ÂΩANiâ€qÅhﬁ˙µx»>õL^\<YõëòÓ‡Tç‘‡cóﬁË ≤”°¶;);¸X.ôÖ¡âd51ë˙˜ÄΩ=8§ñ ô]B<·o§÷sﬂ‘∂eipD)éƒQ3∂`=ÍN¥m÷6Ã$ãcë˘´o∂_Ø’To¡≤OLODZ_20…Rùg9Âg(JÚﬂ:´?∂©*
”‘w_3M%{tKVÚJU(8Y7Ê,s:∑@–ë-√–ŸìDD"å≤MeC¶Î∫
ß6`L±fÑÅ¶
â	&ÆiV©ä?∫<› ùÀ¸ërnsk‚πØ`4JÚ˛∏/7ﬂyﬂ9Ô|ﬂ9‰˚G°´o≠yNNÖŒ#ûõLvTokhñ3øë˚∫~õŒQrG¥©pGâ2mSÌoa#™Ö>ò0Äú‹ê™ôGp”R€üNÏdLÅ%¨=ÎoCQ–õîîÉ¿QNçó#¢¿„¸ô7_∫Q˘)·¡·±€¸à¯Ø◊]s≠cK˝N9‹⁄4∏Œ∏°Ê•çÕ&7ë‚ëïb&eWÕX
›1e≥äì˜«a{–ä®&0	Mì⁄ ˆÀ?Àr¡
√j∑ÁoÅ\làÇFñÀÚeÙ∑mÜí÷Y–ÅÆˆßÎ}¶c∫À2¨9≥ÓÜGbt˘-(Ø∏*/–ôú‚˙ b≤kÍ+˘áº*]mP†√Kû=⁄~¡¶3Ë°ÿì÷◊oﬁ‹ŒªÂâ˝3nFq«∏˜∑òã∏d»¬Êô:Rå˙É«E`™~•(≈ÌnÒ\¶ã$X1[tÜ-”ÖP‡”c®=≥a—öÆT*ù‹§ ÷‰⁄Wg?>’€’}HñèãR‡¿Î{Ω≠∆ß_ÿÙÃNN*¸#Ó‘™eøØ<°¿£JÖ¢Z∏@Ô5D∫;a+4î:,L{yœh≥I∫6⁄}Â…º≤uØÌX—ÚÂ( ©÷ÀåP5˚ı%íˆìUËŸˆ˚{ëºoG|ß¬˝M´πÃ:ctqT’PNiB*O<?qz‡Ä˜]yLÏﬁ◊·n16¥˜}bÇS—(D^yŸuªËCàµ!≤Ù©ùe]óœÀîÿ“s≈µû`˛¸ã/p{›≥}¢Œì§Â.M/Õ¡Ì!gö¿B¨ƒí.«πi°Âx÷√zœLÕhzS:-sf»uZ%x…/È*‹•@B@1Yé/n≤/ìBı\Çg÷u™~4oSYKa'BÿÔ∞ı&€ w±Ö0†?¥Ñ’<5¸ãu¨"ö ªEkUª°≠^ÿﬁ—∫´—∏ª≠«ª◊dª˝~w–¯Î@Ùõ„&∞“1-U)õ3î+q-ö”¿…Ñvò6†ç∞7”˜	v¯9∆ˆâ∞ü ¬vˇ(›î4Éœ„ ˛!1öêB“à”nîÉ‰‹;«O˜…üâ%ª:WóÂ=ú•jVîº√ù˛<Ùƒ4⁄•ÖûªhW,çª5ü9ô	ΩC:qúë˜Ã±öˇ≥ùK'X—ƒˇ_È_ıßú~VÎá¸>M¯“óâ—,Ânÿ?è6˛QA”Áendstreamendobj138 0 obj3075endobj31 0 obj<</Type /Font/Subtype /TrueType/Name /F8/BaseFont /AEELMA+MonotypeCorsiva,Italic/FirstChar 32/LastChar 255/Widths [ 220 280 220 680 440 680 780 160 260 220 420 520 220 280 220 340 440 440 440 440 440 440 440 440 440 440 260 240 520 520 520 380 700 620 600 520 700 620 580 620 680 380 400 660 580 840 700 600 540 600 600 460 500 740 640 880 560 560 620 240 480 320 520 500 220 420 420 340 440 340 320 400 440 240 220 440 240 620 460 400 440 400 300 320 320 460 440 680 420 400 440 240 520 240 520 750 440 750 180 400 280 1000 460 480 340 960 460 240 820 750 620 750 750 240 240 340 360 600 500 1000 440 1000 320 260 560 750 440 560 220 280 440 480 600 720 520 420 360 740 260 340 600 280 740 500 400 549 264 264 300 576 500 333 300 264 260 380 660 660 660 400 620 620 620 620 620 620 740 520 620 620 620 620 380 380 380 380 700 700 600 600 600 600 600 520 660 740 740 740 740 560 540 420 420 420 420 420 420 420 540 340 340 340 340 340 240 240 240 240 400 460 400 400 400 400 400 549 440 460 460 460 460 400 440 400 ]/Encoding /WinAnsiEncoding/FontDescriptor 32 0 R>>endobj32 0 obj<</Type /FontDescriptor/FontName /AEELMA+MonotypeCorsiva,Italic/Flags 104/FontBBox [ -250 -303 1081 1000 ]/MissingWidth 288/StemV 64/StemH 64/ItalicAngle -11/CapHeight 790/XHeight 395/Ascent 790/Descent -303/Leading 122/MaxWidth 901/AvgWidth 350/FontFile2 142 0 R>>endobj142 0 obj<</Filter /FlateDecode /Length 143 0 R/Length1 145 0 R>>stream
Hâ|VXT«˛œ‹{◊î*vºªx◊.à&X≈ÿPAc¡ï*R%*
XQK‘àbã{j,1vM0j‹e!<5Oü=/yÿ–œÔÂ%fÊõ;Âûô˘˜‹ˇ?gA j!yx%∂èä‚3∑ê∞8S‚µıÈ<$/@◊#,5E=ΩÂg†Z
 ØéLåä”öûﬂÿ9Ò<4*vR‰pÁ¸≠ÄC–&%:¬~¥ø∫ﬁÊC>àÊÖ⁄Å’˚ æyﬁ4:.%≠¬n—ûwj¶ƒ&Ñôé->˜ËªP|‚Liâä^±˛èÿ^ç7≈Etπﬁ``‘?ëòêúR⁄p≤à∫
8G'éèH\<˙  Ω ÉƒE Ö¬g≠T⁄€ä∞ø≤«>zÄH·TS'Q˘ ƒ,¸OÒA})îÃÚáx°"bU`çız’k™Í]ÿk<¢‹tx≥»Ω®≤˘c·óí¨Ë™UØQÛ=ªZµÌùú]Í∏÷≠WøA√Fç›ö®zÉ{SÕÿ¨yãñ≠Z∑iÎ·ŸŒ´}á˜?Óÿ©süÆæ›∫˚ı¯∞gØﬁ}˙ˆÎ?`†@‡†¡CÇÇáÜ|ÙÒ∞OÜè9*t¥	c¬¬#"£¢«∆åãçãOHLüú2!ub⁄§…ÈüNô:-c˙åÃ¨Ïô≥fœô;/g˛ÇÖπãÚ/Y∫Ï≥Â+V~æ*ıöÇµÎ÷oÿ¯≈¶Õ[∂n+‹˛ÂW;vÓ⁄ΩgÔæ˝:|‰Gèˇ˙ƒ…Sßø9ÛÌŸsÁ/\ºt˘ ’Ôæ/∫ˆ√ı7ºe∂[KJ!+Õ˘óe6È‡ã©4çÚ»&Œà≥¬"MïÊJ9“ZÈíl' #‰Pyë[∂€3µéÍ¶T£Í©∂W;´>™Ø⁄Sù¶nP7©ÖzEÔ¨w’ÙF}[˝(˝R˝fÉ0Ëˆ'CCCCC+C_É…·.‹‹ı4°ŸiöãVOk§5’Zk4-VÀ–≤¥ŸZé∂X[´jª¥C⁄Ìîv^ª¨›‘Ó}å›ç=å£ça∆H„∏«’üT)l∂Jæ°ÄÒøﬂ0˛å?ãÒ/ê÷À$◊ñÀ£‰\∑∑ß™≥ZWU´{©ùﬁ‚_ˇ'¸√ıπoÒ;2˛˙∑7¯G¬´´Ô¿?Ë-˛\≠@€˙ˇ9∆ÉÒw~ã?¬ÛOíl6[`s±-*ÅW.ŒNéÂ÷Ú‚rKππº∞ÏhŸê◊‘,….YVZ£$ªî~™YíVråWñó8ñt)i[⁄¡cùT⁄∏‰âuóµ†xYÒ∫‚y@Ò¶ ]V}qRq(œ<≠V?´ó%ÿdÈoÈcÈiÒ≥¯Zº-ûñÉ≈ﬁ¸ ¸‹¸´˘ô˘qÂ.së˘¢˘Ç˘4p+√º˚Vå9»<»hˆ2{ö=Ã≠9r¥SéU	ÈHï–R_∑ø."Zƒä…Zçó}’€‡ &BﬁÃÜ¸ùÌˇÌl)Zø7ˇK◊7ÉB¨G≤≈*,√œòâòá|l¡8`.GáL,∆S<√||ÜŸ$°ò?⁄jl≈~≈:l«Yú¡óÉ0‰"ÁÅoqóqq	ˇB$æ«\≈Wà¬c,¬(¬5D„>`b0„áXƒ£ 	HB"∆#êÇTLƒ=§a2&!S)`-¶a*´v:˛çá8DC(à“Q5™érTP0•˙6’†öÙáÃèi}B√iç$;™Eµ…ûFQ(˛ãÁ4öL4Ü¬(ú"(í¢(ö∆Rç£Xä£xJ¿\'r§DJ¢ÒîL)‰DŒ4ÅR…ÖÍê+’≈O(£zTü&R5†Ü‘à&—dJßOi
M•∆‰ÜÿIMHÂìAz2ê;5•È4/Ò
ˇƒm“»HÕ®9eRe”LöE≥iÕ•‘íZQköG94ü–BŒá©µ%Úƒ‹•E∏ÅR‹‚hA	n¬ä]ÿ-zSgÏ√~ú}∞{q3p≥õËáxÑìÿà<ÍáÖ4@d—@Úß ëçÉb.æ√q|M2À≈
±R|Æp∂ïÛ· ØC-©ÎÙG[?ÔpµU¿ˆP1¡P·n+À8´ûd^u≥=îwVÀˆD$˝ës∂wN˜˛ûœØÌ™Üõﬁi4è98Öî¡LnFﬁËÜ≈îÇ¡A8°s¨/rxˇáÃÿ+g¶m∆o√ÿC&dR FrélÖéËç:‹{†B°1ü¢º‡á!à°ß“>9çŸÏä.Ë \ùÉ%tO,Qvr’°Û=ÅÎF8£.gñÊs€‰Úw9 πK—ÇoËÃ7öX-Ò¸UVb≥rGÔ´‚™Tç14aÃæËâ@æq´&ö52y8MnÃÂSï“—V‰àR<GyEÆ'G…€%Y)`*◊6Ñ7ü4CYì)å9çU3´∞Üuª_Ôﬂ∆˙›œ™:Ãô<äX/f]VG&ÕÆ"D¨«≈iqWrîL“)èsJ9X^+ÔWRï\•H∑T˜Äc†{˛áa@3ˆì/∫≥èá±‚X«…¨ﬁô\Áp…ÁY{QÜªmÓ„Î÷ï⁄Q/Æ!¨ŒP⁄BË ù°Ûtì~°W¢Ü]Öüà‰:N$âÊÂF±MÏÊLW&Óäß‚˚¿GÍ.ıíÜJ…“iµ¥Y⁄.ì §€“}Ï£Ï#wì‰lyæºC>"_îØ…œÂ
Jm≈YÒPﬁW˙)AJ∞2L1))J∫≤T9¨#]c]gùüŒ§;»ıwæ´5∏©ÎüΩWoY÷ïd…22ÚïÆ%í,˘ÅÑ,	KWÿò†NëpD%∆Ü45Ñ˜£8iß≤IZ:0Md:}p≈#»°Äì∫”$–dB$ShIgL¶i—Lßc¬,wØåËèﬁ´9≥{vœ=ª˚ÌŸ=˙õ|©¸†¸§B™‡–˛∞ﬁ=˝Ï†Ê#¬˚doíçzyk‘–„ü„xï»d{IπIô13?√∑§≠8·¡D™0Ø√3X·Œíj≤^§z®Q&Ökƒç’g'˘ú≈≥˝	V0#°Ó∑Å4¡nÃÈ3‰tbˆ¶∞ò©(˘=|à∫wæLŒ„{◊ﬂï§´ÒN¨Î◊…º=Nc≈≠$Ì`¶˚∞üF‡˛6ÿBVí/°3n˙7@òAüCkD#VKº_ìﬂ¬è°åTa¸
Vë∑©!“rd>yó¶Î(Ötl"á©Vrè˙‹¿‹?»î¥Ä}„œp´›EjÄ∫É“ï∞é:E˝˛	£ÙÎXáèb=|Ó¿Ápk”ÿ#Ê√q˘Kh+EnCF$N˛é˝ßéºGü%eòO/ê˛H`I†π©±¡Á≠˜∏]ã.®s:j9ªç≠±ŒØ∂Ã´2WöåΩé—ñk ‘*•B.ìJh
àõÁ‚iVp¶âìÎËà<ó¡âÃiÅ≈©¯”:õ.©±OkFP≥Ô4#≥öë«ö¿∞≠§’„fyé˛„ÿ<¨_ì@˙HåK≤B°D?S¢%Œ£A∆f√,oÓè±§Y^àÔÓœÚÈ~/ßVEπËfï«Mr*5íj§Ñ87òÉ¯R(Túo…QD°A´Ñ\å:πòhÇ@;¯Ã&aıö≥ÿlIè[ÄËFÆW \ª†uïTH¥¥ç ã
Ú“6ÏÄËasÓÒÏhû!ΩiWŸ&nSÊ˘Ñ@gí‚:ó∞úã	À˜Oö=Ó<úÓN hHwbå¨ò u≈bIq7}41¸§∫ÖŒÚÊVd≥ŸaV¯≈öƒìRõ8&ì¯Qèªkm¬ÜVs¸(+∫±6QÚ ?
f/)ŒânŒ:ºô„≈ôÙVVPrÌ\vk¡öó»⁄}∂sÛVD∆fæ$+x6€ù‡lBÿ¬%3±Í\…Æ›wæ3¬v>-Ò∏sån6“πrÌ#¢LÛ$±˘±¨Dï‘E
≠û5àqùò"ªëEKú@9ñà√Ê%$ªq	™·ìåË ∆/ùeZD §º{gÔLÆpÔÈôÃ£ôÉπODRLó«)áÚ9ZpπÑEãƒLëGZ¥liâ_ÏqÔ∫∏AÜ∫0ddu%[ºrõMDy$!Ω»Ck≥<Kz-ÁHƒÎJ
TZîåœIåœâí°9…„Âi”˘BÈ⁄lŒ«?-c2˝-ò˛èxÛ¨èœÊ$RGvu¬ô…éXúÈÏh°â„QÃf„œ¶≥ô¸ÃP/«2\6◊’ï‰”s.Âg∆G,Bd4ŸT°i6Ç!ö†-Trñ¢,t“C(—lõ≤ú8.Jn˘mlP/^"*…-"ΩEèAöoÒ.sóÑ≈±¡g”Ÿtƒ¶¯ê•«F§x—c%„Ë‘†ﬁ¬≤H˝%rí¶¸ÑˆÇA‚ùnlr€©πËÖÒ&5s|¶JjêH;ÈKƒ'Ì‚{¯m¸~Ñón
ÌQ1ÿ€∂7F1÷¯Ú-√°p¯îöØP´y;œ0y¯:¢¥⁄+¨V;/Øœ√ïÛÅhá&øã:~§’‰ÀzhÛÅÍ˙⁄≈ˆT(óœh}ºër9zèr,úí´òw¨y¯4¬;i˘6;(’≠}q é™IÉÎH›0”¿6¯$Ô¡!∞/R1Æ6¶çÉ∆!£‘Ë›>9ïöû‘È+É:}êôd¶
$\¯f™±ëôUhjb¶'ôäºÖªL+S–á•ıÆ·C√ÂıfóÙ31ÃLLîOLê˙˙§∂ì‘ˆh"¢úãÖÑ§íπå≥◊99ª‹úr
YÁ‚fSc•©©1‡ê…À¡X!vÉYŸR¯KØLÆT=R"!5®j-uÅUã÷’µ∫]ﬂ€ñXsππµ"∫ÊU††ˆ‚É∂ÓnMπ›l_ÿ5:‡c∑’Î≤jVyVÑÍä˜|æ√÷‚Ã∑N8›AZ¶“¨˙v€1ê˛—eügóñØ<à7˘Ò¶
À÷ÄﬁÊ–ôÏMM√=fçJ•‘8<?}µÿk¿&˚≥Àg‹≈–ÿ˙~8Ûoiπd/üœíO"˛Ê.X ì…⁄≈óßÈı°ñä°∫[µ¨•}9o±¥wf|
_≥üÏâÙ îµßdyàGÍ=ÕÕ˛≤åùÚ+^ŸÇñP[;ø\Ω2‡73+w∏›•9«(è:ò˝^8Ú–Q+k•îƒ

´wCjC™ê*0f≤ÑA]eêÑ√]–;=Ö»yEúÉ·i‰ÉAΩà7˛Üı%I0òËzâ.ÿ‡#)ô˝ãõ;	e¨0Uö*≠0áëæ∂©QLnEQ9<Ç8Ä–fó‰2|4dÎÅz•l«´„œùyËb1…XQ∂∞ﬁTc
Ó˙ˇz·Ú˜á}Å√^Øjãˆ=´H÷˝TYePj™´5⁄÷/;{>˙]˙öO¡n	ﬂ…ÌÆˇ◊≈ç8óYòj∂∆h¨9ΩˇÑÆæŸóy€UÌk·˝√
ö	»í«)ﬁa–Vè}t™ªë3}ÒZ˚wúxŒ'fZ%ˇ¿øA“ërÖÚêZ®∆ïf.i˙Ã≤Kô/√M‚$p#¢¨Ö_íCµ™µcê!’ﬁBO	3IÑ`ºÃÙT+¶>˜Dúƒ¨.GK=Ã∆
É'ìúÒKw%˜Ãê¸Ø^>{TÀhÙØ}‹ª˚„¡ªêx'‘Ru1H=\Â=ÚΩ˜ã[æ¯ÏŒM„….ÿ&Ó;éﬂﬂgüﬂ±c;~«ØKÏ8øáƒóW'ŒÉ»√\ì†4mâ(·—§`PXKI'•H(ãF«ËZ⁄©Ö0òSY `+¶Mö4i®kJÖFƒJ≥Ï’\ˆ?'–¨ïN˛Î˛ß;…øﬂ˜˜˘~ˇ˘b√èûœÃû¯3ò| ≈?ÉÛ–≈Gº-‹˜ë$2C˘„vé√a∑w)"*Ö"bWƒMx⁄6e“§µ√fì«î05õ∫M€L#&æ…Tá–1^àD§˝qp	|\^0CÂóbΩu'´C˝p≠FKmcxñ£ßlvπF·*\.ÖûA"Öù['b+Q'⁄q¥‘˝ëÚ∞Çõüc·ëú
NŒÃ"ûDNáÏœƒÁ2?hX≥Öú,YÇ∞äÀ„[uÉ3üªÂìO@ÚÌ_æÅÜ	∞€ e…}S[^ Ã;‘ˇfˆ¬˘mïªIw±GæVXÊ*
9UEı£ÿ_™i}Û„°æåCg#|§9·›‹]˘ZÌŸgFoÇ≠ß;_⁄ù Q£ßhtÔØòwß/O‚∂A]!œ'‡ ‡ÍfﬁcnΩöˆÏﬁ∞≈◊zääÈΩ˘-Ëªg4Ä+PUƒ“á|-Ot)“&!ÛC6◊&&ÑQïPçêdüL¢í…$ÚPh∑™p‹ïÛCë	[Câ%ôå™ØÌ_;pƒ≈±S8B·87”(*újÄ‘áO≥†éì˙qs/•Ä1$~Miˆ%2πë—U∫œ>4ËﬁsT‰ü— çáûÉ¥üám“≥}JËY‡CﬁC≤≥Î‹|ûŸ‹Ú∏Q£\àzvÂ-Øyê¯ºôÁ∏øöJﬁJ∑´⁄6 ∂∞œVµêär∞Lëï˜1TÕvù◊'à⁄Tòp;ÉçÃ£⁄ÜÍ£S⁄bÑMÎpÍÃ ¶Ôÿ|˝ÜA[lƒ˝Ôºπ	(Î”@√ˆoıwt€xôoHæ¸^æ9Ç;]åœœ€yîâ∏|ÊK»Óc©'≠ Ø¡ó‡ÖmF¢DWX\EÌö,.8∆Q€Á˝UÑŒ‚˜˙◊◊ürx"8u`Ê–‹àyñ
5˚ÄPÊA&Zï¡†E‹£µKR•›Æ4“ne?ﬂçÚQ≠E}Ê!ßô›àNÉ'W8#Ït@C"≥®é(óNsÄâ∆_eïπi(JÖ8æSÃÄ}êl=^;≤¨oOë∆ÊôJmEzÇÍ[ﬂ‹Ó=y[Øup◊…—Æ_Ëπßòªãˇ¸œÆª¬:ªìî»ı€@`@ºúÒ&\Ω£<>xâ(Ñˇ|íπéısåt!(-Ôv!≈iHY,&<ôƒÒâ ©
IEñ„òîˆÍ≤@)‹A‹]áY“Êî'≈I•‹… ,T±∞Œë.…∏}io\°únH#SùÈˆ·ŒI◊°é±ís8v⁄b¡Éd2Ö©>o¨f„X˚/ÅiøA∏‡⁄$8(À3%V'ˆ≈Üö’@}º"à(ÛÛÛ9…≤,ÇÖùá‚Üõ,q˚¥9`œ≈Y
-≤¶Å˜sè’-`„kxU8Å«p8mù &Ë^&†TØ`(¸X®n‡Äö≥6ÚâÚY„É2á-[›ö"k „£ÀqÇÕA¬w0∂nK◊√sÅ∫Œñ∂∂çm&ÖT°÷⁄él}˙Ã·du}Âã†:,’JU<ÎZ Ÿˆs¨ßI⁄∞Á⁄ŒNù¶ƒ`ˆÅ–^AÊ∑‘î~[√wvK˜∑ÆÁNËTÒÊ;Éâ	Êãˇvtt%r´&>ÿÛ…ü>[œdBÖ?‡Û-^eU›)PnIöbI}Ië⁄‡,∫˚:≈‹1é¶õD|Åî≥F˚˛Ω•iæö{i‘@2úlj˜†~è€UF^‡’”
™ÉÄC(·%(¢ÖË!â˝Ñ1I\%~O¸ïxD`Àœ˝D%—Jl&v/«Q0ù®M©jkS^ØöZ·U¡Ô˙S¬∆bπ◊ØÇºﬁgjÄkñ„úT”AÇ/SNé$çÃJ©±ìH¶¶úN«{+2µSQ∫FT>ñ»rTA‘≠EÉ^ı+¿tP?‘#”Ua
á@Rh3tæO&â” À)=O	Å*cnBP>O/'^®£úäÓÕ≥ª≥êåâ{˜ÊÿïC‰(L¡<É!G˚û∞–ÙvöFhzî•‰Ãä…ÒP—∑CØê∂UR…¡≤àÙìÏñR°Ñ—éø¸üƒ \ŸDå°ËŸ˝·…È4#¨Zó”‡	4éÀ>;≤=\h’8LŒq ª∏9Ü¢±/Ô˝dwMÛQæ6ïD•£≥1·VíÒF_QÀ€Z 2gúÃ“s.ã°D,∆É@
>˝|{◊6_M±Fo+ã≠€qg+PtÒÖñEx»?¨æ¬‹`,%ç
IT(®é~¸◊Í”_Õ0Ä™9ætü∑é˚RãLQ·Ê‰`ÚVÚnÚaígNzíâ$ √à27ä∫Q‡Ó¢*TUQAY#|⁄9å—Ñ5¢gè8™5~:êÒˆÜ2k‚tl ùé i0]7(c^Øï√fd¬ÌPUbq<¶9ßÔ(VÏ)ûœ#ÖlDÉ=[I¿ã0Ü,∞ò_â«–ó£Hûõ∞»õ·≈!ÿf-_>™QóÉ’—˜ÒHCÁÚ≥)8ó?æCˆ–≤í9;%o<´+¨ﬂDçøq¸]f˙ú;Ê≥®c/º?ˆªDø≤4°4´tM—‰zIS8ÿ◊‚ÔÌó<g€∆DzΩÏ ”?µù˘Cü:€ˇÃ–Êﬂ˚¥´»¶6ù⁄˚Ÿ•Ö‘Å∆Õów°ÃçÊF•qMÅX§	Â[\Øq⁄KÛÂ:÷≥Æ27±É‹I§TR√» =Ù2BÛ∂•_ƒG“ØßO¶y∑Õ∑-∑≠hG‹Ø∫ü˛€&ÙùÙt∂*õûﬁt=˝ªM¸ó∫˛GwŸ«6qüq¸˜ªã}~âﬂ_Œ>«9üc˚¸˚Çì8v˚ÇBåÑ*8vz	YH^
$c¿H◊§4
H•ÑU*0¶&¨ÌF≈§Ö≤V¨Éi®[ˇ†¨ö(c∫ÆY'˙œ¶$˚›9!t⁄ÏŒgÎ‰ﬂÛ|æﬂÁ˚úmòﬁC7Æu}ö!ö·∂¶Å‹@˛€Mrﬂà`I	,°`ﬁd6õLÊÜ¶¶|N0ÁrÇ…‹Ñ◊6±¨ú◊ªA†ô˝)P[ºQú-Ω‚¥0À∫‰√xØb∏X'h/¬Æb{%6∫˛˙ˆôZLòÅø·Ë82π…lµS%tCSNÎ—iπêg(ï⁄Ñ∆â˚ù–¡MØ∆£≥h≤Æl>˙ˇ›y‰˘RÔ3ùF—?r≥u"%˙:§ıÂaÄT,ÒÄh(HΩÜ¿ê0Òˇ”g¢@KaÕiº¥%±OÆI‚ˆd¸≥ƒ«˙¢–ç›Áú·U∆ÀÆœÑ€∂Èv1´G)ªW”ˇr±©ïcæsab¯µÖõ'6∞F⁄Z¨>sW.<∏q1¢±Ñ˙w∂	[z≠…fcéÏË}˚läÆÛ(ÌJ¨n~ñ–Uh	Ç¨)qÑvb—&£r–„[∑pK5}@8pÍÓ∞êaJ:ΩÈ¿i®˙…¯ã√7KüvUè.‹Œg„£€ñ⁄”˝Òâ÷kmHu‡ı≈á≤ﬂÀöë¬èÚt∫±1Ø3†8k–	îQá◊Ù‚√ÑJP^lÏ"TÆ,¬Î˝¶˝ˇp∞~:<ˇ{–p	æ“(Î⁄ÇËqJïŒênTT:«… ìπœ√N^ÑC¿ùó$¨Tê}˝Ω{˙¬[Ã´Öéû»Lﬁ'[ìÇG◊Z(ÏW,vŸ´*óÚÈ“ó®Öí€‚w¥M·`oKrÎvmÑâ>5J‘ñ^ºı¨Z·q£‡H˘NB≈œÛMß)
«=ˆRˆıÀçTUŸ™x&úI$tJπ1Ærëª·zÃh«⁄Nu“î—Ô•>m◊¡œSFã•å∞ò‰Oÿª~ó‹Û—¬èn|°  'ˇÇˇ
 PNÛe{jP$ìÀ;lA≥Õ0¿Üã«ÄFØqi8Õ®Ê∏FÆôÅ∑˘zS–éŸŒp?K∞0ñu™ùä¨	 Mj Â≈Võ=Tj∏nN5g{ò›Ã3¡Èô)fö¡ô®0àîTcHÈyC"-÷U
IÛÇt)Yª≤±!àìKôîÀ!5]à´Û·$ÅZ _ﬁÎŒ’≠Â~´]_ñJ∏Ü\|“Á°(ÖÛ˛ñ˙$ºº≠}ƒ≈l≠ˆÊ«øÒ6MzÒºv˛‰;h⁄‚ç≥÷∞Ek#u‘ëo¨ã‚πÌ∞ËÊ*_—ê∫oaq¥±Ó’£¢ﬂù_ºá'ÒP
⁄yK‘ïvMªs‡∏˛ ˛
d`äır‚Üsñ~µ≥W∏L¬ªZ{∑ˆ:/ázTn±Ö¯(ÊsîÊgÒ–^≤pH„ätŸ•”â<a7,ﬂÃn|Î@˜æuÎ˝û≤x¬W—€ÈuT|ÎVÚgœıL¬ØÂöj¸4ÎrÁ¡=ï~±ﬂßˇ$kóçÇ»ÄO˘öë&®"#lS´UïÅH§CUiV°+7i©c:ß·xﬁÅsp ‘CÖE“°jeÍ»™ ¢˙Í~aq◊gµj-'s˜˘≤%\VVdjÖJM–OtNNÉ+‡:∏ÊÄ¯†¨íW—ë…p≤{ÇÜÙ,ÊÕ=ÿcÿmò0‡z√àa 0m(2†“ÕJöÓâ˘hπFàë%nHëT¡«‘à–†0Ö<^rqÄJ∞ TR¯W ä†¬ó√W íL?_2ﬁêØ¥ï™Àú·´÷^ùÎ≥Ü£õèLØ˜saüΩ±—^Ve”'éŸùFõ{®ç…åÓèó´7î;"◊}Éﬁò√``æ¥ê?ﬂ&Æ˛ÙPs–E≥*U®π¸üÛoÓ(ÛiLXõq€¬o˜ƒºÒç´Æ¢N˝pÒn≈[X0¬ì<‡!ñÏå¶”D°5‚_ä;∆åF‹ΩEEfqU∞O4Fmê”›H∞ÕÔÍÂSrL.ÊM=™Z‚1lb¥D∑2ùºÅámp‹É⁄{u|*†êf≈˙Å«$.ÉX£T∂∞d D˜∞KÃó”Õ≠á^˘∞π5ø7yYY
T¨æÛÉˆxπ«[uE˛˛lÀˆèo~—újxæëŸ\]—\C“ˇX˚T2äïx[w°ù˜ˆ¸£¢ge/"GzéOù	âªê—Hí¨ﬂÃ≤~£⁄D≤~‹Í2k‡ 2J›ßsıyæKÈ≤2H°¡h2[¨Ë7µbjyıÑÛäuN91ß(4	!IeR(õØ”◊â\≠ÿ˙·:)ëôb)Ï+xË C08ûå‘hó}4W{Í—Œ˙T–]÷À9–"µ
*Ù_N∂,\y?›P¥÷}˘ÚÁp≈øΩÃ1•~ãÍçó~◊<h·ˆ¬Õ
Ìï)Öwq |Ò˛¸C¸˛u¿ ‡ûßW√h,Z]çÉ&At§›Êt⁄hÿ˙ò>wW‡û¥%‹O™»§ßü&í[äuÄqWAKÄòÅ^ﬁïN√@¸∏NËéBgh*Ja‘5Mùß~A…®®04+Ã∆§EDH2COîW!÷‹CãÓä#K‚ZJ*0.¡ÄﬁK íÙÚÑoy	¥ì‚+§0§¥çÌ-ıaÉb•¡˚Ø˛~*Ú ∫Üuo‚èß{&Jœpﬁû#\¶äÒÔke”çø¸1ÀˆØmÌÒ@à∑ˇˆ˘[{j6Ô>1≤©}MU+5%f‡éÆlürÎæ≥CQ~√ﬁcü’èÔçU&]ôë3cN—µ/ ◊˛1∆√üùXcö§B©6AEÿd±ZC·∞5K&;≥B°	Y≠$e&I*Dy8”X8ÃY≠§JóÂÆﬁ”Áœñ"ó/X#œCôÌñäz—"ﬂìïBôN¢˝Úœ|Kí˘D3≥R°p—».ÿ&Œ3éøÔ}˘.vÏÛÁ˘+>«ü?;ÒÁ√ÿó§êêí 	IÖC ÉD–6U
!"Q4‘Ä
¥Î∂§ÎZ°©-IQ7	∂eïêË∫â∂@W26iÕ`j5©1{œví“Ÿ÷Èı›YÚ=œˇ˝=ˇ?°StΩÖ¢GiJ9å”8√”π”C4YM˜÷‘é«†.ˆnÏrÏzÏNÏ~åbt1H«f`ªlg^Á–üÁ ˙ éÂ^ÁÆp8Hsëﬁtozx≤´‘T¥ﬁ£tr~é˝:∑˜´ïã9ñ¢>ß–.®fs˘dŸñ.u%Àƒl†üÄ2Ùzú™Y‰ †¬¥'æ∑sT¯¢˘Ã $¸ˆÕ[ÎCB®x≠«Lu?≤∑üâ⁄_ˆ˝„@®¢<hªäÀj¯›œùX_·”Ö—:N≠∂÷{ˇ‰›ëT’˙ÙÌA≥'XÛdÕûÃõÔaG.\ﬁt;§¶˘x∆0“ã=û⁄ﬂ∞l5èx˙∆£9lí¯®ALÀ≈|i§3˙8¡àÿ"¯LÇ‡≥ow6±≤ÛºÒd,B˝˚•[÷Ù«sâUQˇnµÛ2ºä`)‡Ä≠
aÈ¥èƒg‡Õ)„†oäS\ØqJ≤≤Ä±BªpXòæîêùÛ≤© }@*2üZhYﬂ˝∞˜|eGSlyç»º8 ÚıÜKi∞˙í0W–¸ê‚ÚªœòÌÖuÛ˛ï¢À_ìôˇ‡≠∑ßnßñvè˘éÚÅ≥*É)F|páÇû“‘¬Nœ3ißµËfÊßk¥∆É‚Maﬂº«LnTµ˜3#d9
ÍA+∏!˜◊Ôo≈WÌì«◊·åkmmi® ù3Aàq_í≠≠JrB"˝BvV◊è548`AsüCÂ†°∂ﬂ∞âÙU”†∫x˛Cv’Ã¬y}âd}C´∫™o7ˆ∂π†À£·ìï3p@f∑@(√qdCpÕ&*ñ`Am$=üµÏ<à,õÇ˘î1tR·zuÂÆñ÷lÓZîµ6A&ËYm‰d“≈Ç—∏–¬e…R*¶ÿ˘l‘zÃæãæ‹;nI¬‹ÑkŒ›Rªa‰T\äï	·û"˘˚÷5V¨∫=∑vsœÍç´7ñÀÍ´”?∂ÛÈ_¥ÑvU¯˘J˙ÿ€çÅ¢ﬁﬂb≈ÃØüÔã˘ãù~û \y∫6‹RΩÎÂÈ?wµæ>d—ZÌÆ§‘€¥˚ô˝´ˇª∑∂¨4+ü\!ñ}Ç»ˆD∂è»Äûíç.œ∏xæì—òF#àS¿;@ÄwÂB¬‹o€§Ñbü>óm<£qÒÑa∆≠íU„™èU´⁄≠:¨¬Uπ±…ﬁcp†¡9ø0øÏ¥rÚÙ.
Â”x^õãŸH©&ñÛUÿ:œ∫?Ø‚˝…ßj˝…ªáBÂ—2W<òã"+˙õ9Kp√øJ∫OEÌﬂ¬KˇÏ8b†»(†ı÷◊Óf“ôﬂk›vI°˜˘GsÑoI4‹‚≤£2‘9±†ÄâÈ—fÉ&Q2±Xß7IRú—∆√v≈ÃÚ0S ¸ 8¿[†’¡Bƒ§&m?·<Àª˘(ë'y≈ﬂjÏ€©ÄP	9Ç>Á'\
…Î8&&≈	âÎçà)±M‹"â£"•∆EÑq1wzH$´—‘!'{Y]G_èÆá¥^!8«JnIñÆHKdª‘'ÌñK$RB’Œra;KÌyE‚_Á±çté“˚–äÙù]◊ˆ>ÜÏ%Pi°ÉﬂÒ¢Åã/q‹¯=åÁø^Û~µ“l%Kwº∂~Ö/Ã∞O»uQ2∂mÓOƒ‡ê«ÎOı¶¸éé3Aæá4±Æ$∂Exæ›†a∏èÜ∑≈*"ºØÓ”k&SïﬂS≤#Èè'{‡∂Cf>ò‹Xπ7ÛÛ≥«·AÆ¿a(˘‰îGè†<•Aæ∑\.ä8€úXa0ıQ@E©ŸA∆:ÿÜC¸"À@ŸYÊÛN6ïgy¬y®\P Tlb€ëÃ’wv›˜ âŒ…Úíƒ∆U›¯öü¸vfÚƒ˛O¶nµ¸Á∆ëñ¯‡±´g#çΩçÏÿ>¸ (d©ã;e:e>ÕMì c6[Ä°À 
ı(D= ÛÂò˘M3v“¸û3õuP=¶AﬁÛÆ¨’@ùÜ◊D4)MõÜ‘ UM#áä‘u_÷ÿŒÎT∞@=ÅÓA˛zëîŸC8g`+Ú¨0o≈qòﬂ|(˛†Á|òÌz:=üù‘ •|Á”«ËÑv6è4¥¸H¶Tˇﬂz4Çq8≥:&2]≤ÉÔª3òC€GW\~ﬂ∫ÊÙP∏~8V[¬¿Äæ∞∞jzr∏“gwàv€Íìª~áÍs•o`DÊÄìubpB⁄-E%ÃØØ“7ÈqÙ(˜dŒ°RTÖSsÍ>‡Î≥ ïERf‰Mô¡µ'wGG±(z˛iˇ©†ÿU~ùµπmQ€aCå_P≤_n^Ê(üfÁ≤÷Sq#i∏cAÈ7"ı“îÃ+='Ç,£≥¸∆∂˜lùˆÚh ÂÔzˇ•Áûªù~:ë ıe°ñ¡	ºyU©√Ø˜‘•"Åµ]{wÓú‹⁄(îyml!SÃqﬁoI”Ügwm{Y·—g»Y|E∏Å\ì„Ä$)õ›f≈úå§h:—öÜ‹iú¥4¥Ÿ	+@˘
–ùV`≤ZÅnåUrú”h•I5Ê ÌØ:P≠£X€≈‚åäEâ›0•ﬁÑ\eˇ¥QÕÍf‡ﬂd Fê¥’ÊdêI]í-ÌñInAUSòQRsÛYñT,G˛≤™°ëltËE≤â≤w≥‰Ï,Ü\^Çft"ÎÓ„xL%‡ÀúXBºè¡'õÆ≥◊ªúâó7∂äüù.ıÜƒÅ7?√ÔÆÃ¸Ω1s·ïZá’[û,{´πre”i¯R#™‘πG∑ﬁ*¡_dg¥j¥jºj≤ä Fc'M	c%‚º˝¢¬_÷≥= A@•˛›U’u≈œ}ªª∞,˚ÒñeóeXñe,∞"‚.(Ú±ª†â†å(!ISÉµâ:¡$¢∆¶¢ö2åâ’ƒ‘XG4ùh$v™3F¥”⁄÷J—¡ôDÜQ[Í¯áÏˆ‹]P¨ÕŒ¸ˆæwÔy˜û{ŒÔ‹{ŒP®ü@b≤∑Iﬂ.]ó,œ:Ö	ò/.Eﬁ™ÕVbµäÇb@^ëHnŒHÇö8Ä#◊–CéÄz=!JÚ)fó»?±∏ïzßãùm¬à0&‹∏ÄP/¥aQtf¶CÜu&gBZõ1–¶S”ìxS[vMﬁG>Nb<‚Ïü¢Gq,ô	«ÿY‰eô«Gl‹r≥'≠Ô©¯ú1sâèm‹πj©FÆ÷g¥dú_muÎöﬂj
dÊ$$/“jÛ∂˛¬eHØ	òTÛæ±≤˘ë"#π)Z•æ’qπ¿]‘‘ˆÊfª˝_ﬁ”’ôõÇôé™»ø˛mKM?˘
⁄wÙ4«±ÕP∆6_èØœw««Âx¿úì†‰âåÁï∫ú!fQ†††›º≈#ıËîùx≥á+“	EE
∂SéÅ≈®lPì1Ë—¯5LÇRCdö!“–˜πH¿UÔjs±*ó’%∫ÿpô+Ví†iCCX5ÖÈ€4BMÀKlö∏ç«Œ4°Wö¶4fCZ-ËK4s3/©Ñè«±OèÌŸx_HÙq	¶;\ñu}Ho¥3rˆùååKSùk◊ï$'ò¥Ç˝gjï¿‹Ó˛}ÎÚáà„ãß– dó.˛ÛÖ[=œ]jxÒ|k2ì3Ù*ï1œQ∂∫ÑIîÎ˚¢_Ú∑Ÿï‹<œ˜4DògRA∫∞6Iôñ^»É/Uö @mÌB”æpH¡ó+}r•X»¶©Aöîæêw˚‰e<Øñn§M¨VØW˜®Yµ:[ﬁÈ)Ûó1eeŸK*≥G3›ïÉ7IP∫âÃ=D6}!¢
YCb(jùù	I Dd°xΩ˜§m[©qªb±áöS_JŸ	˛qKœt˚iÁck/Z0»≈21(≤oãÔââßƒ‚ﬂ≈€‚QÜiD3)ôπJ‚^Ò≈à<õN–z∆>v†ühΩ'˝ˇÓ¬l0òoH1îÖÕÊú˛^R·*≤8U&G÷¶Æ•Àu∆,SFv§?±ö∂gTv/ë3◊≠;.R»taM'Î∂5Ÿ }˛◊+óûË8Ï“˛£gYqQÆÔŸ‡√=ç?[yŒo)(áø·õ»ÇÓóÆn7˘¬Ê“ûœ¬ùÁCº√òôd6%iÑ¸‹˙¬ZÙjtxzä˝Ü"R»Òåàå2…ìD∆<c¢$öDVò:M=%,lI $!#Ù◊$YºM∏/ù£›π€¢ìZî¥¨Q dF ä˝Ç‹‰3ñ ﬁ•∂îÂ.èqµÒS#k<h√´/.††äXâàµN˝Ã›øãí£DÒΩÙÔ!c‰.ë<Ò2F∞≈ê`˘æÔg•Usá7œt&“º£k⁄ÆVçèO∑“íÔﬂ) 3J†x‚5çlÛOjJc◊Ãdº†Í¬å”K7Ù:í„âM$3◊HlOGJÜﬁﬁá≠u? 3¶¶¶¨ÿƒ|§÷8“2]ØL_n™\Tîg+ÛÎÀ∑æ‘PÁ»-`^˜÷•*Î#€~ß˜ﬂâ,ˇítsVI·ëûH’’÷[∫+)Ÿª‰l˚œ…÷Áä1jÎ0[˘+€p3Pkóÿ≥ÏKÏÀÌvﬁÈ¥WWøm8UÆ:ªﬁ‰tÖ´+vπàÀ%¬|’|f˛|µhi◊s†f¶0EΩ0µÎML;GSº4Ω¥∂ΩB©∂®ıMÖ¬"Æ´êÉ◊Á¨≥¡‰Sx%c@πLK⁄zmõˆeÌf-Ø"ﬂ˙ºÉÂ'…rz¶c9NÎ‰d<¡O£wÛ¨∂Çç+éÇ–¨z(L∂v©bë€J°.≈º?ª€‚ïÊ¸§ïﬁ€≥Ö◊·6kÓGK$R˙¸TeK›ˇ<”ø©|l÷ PÆ∑⁄êÆRŸ›i{˘Üey¡◊äK<∫dÖZn{-ra˚≥•Vw]„ããr›™d´¡úç1‹µiûÕ-§8RÁç˜odnyYr≤Œ∆Úvµ©∫xÒEä]•î&*r7FÆæY/QöŸÈjK∫ `Û8ÊuW∫2Ì:ç⁄PyÈùü†±6hÓü“Ï]≠\0…Ä˛¸ßS¥=÷˘ÌH$u˙ùÑ*i$è…””$ç”{`ÅléﬁK®";a-Ã˘1øñÃäûçÉ)Gz7ﬂEöŸ^8ÇmPRﬂë“≈h·éÆg[àÅsSá∞›ÀEøC˘Àà?!ˆ!ˆ ﬁCÙ"∞Ω$€sàwqûΩd29'å“yA6>„˚	À›è˛íªo„ÿ◊|?Ï‰Ó√6Ó∏≈›',ﬂ.î€¡zÅ5på˚÷HÜ‡îk∆oÆpç∞7÷^Ñ≥Ï»‚ ˆÛ0…[‡ä4Œq›—ª\7¸Á‹éÎø¡^%ü0}PâÎ?‡ :Ö˚ˆ±-®{‹aÜ‡(Í⁄èÌ¶/rùıFo·˚1¸n?⁄¿åœü„ÛW8◊a\Îc‘È€ãµõﬁg:‡ Œ˚&‚éBŸ›®;ùWƒyÜÒΩø=∆9ô_ëâ(∂ƒ€7ÓõÓyvOTˇùûÍ∂?¶ﬂƒÙõÉG∫˝/®^OÄ§≤^2Ä∫u≥W·y∂%˙5wë¡L:ÿñH/ÍÒÚÓ∑Lanê‹Z‚·'¢√|ëÚüC	∑Ó#b'?L^‡ﬁ«ıß†«\íΩêèc5LrLD‹ë8†}÷èkûGùzëK_q…Zîk`Ωë1ú««›ÅÓ˝˛*Æ}èrÙë≠–>í>∏å>=äzˆ‡xÉôÍ∂ÉL‡)è¿9ÚQµ;ı=tGL9à∂˘Í*Áå¸1ä{^é˛7ë.0¢*ÈR_˘˜®Öm1˛Õ¡ﬂÆHQØÕÇ⁄ıÈDÓè"Æ≥Ωå◊¯Ìw9≤˜¸!ÆµeÆQ.cﬂ6 [  Q  (˚	’?∂èF8@π≥ïì¨`Ã0ä8é†æ»A∏fn<nb‹•˙ŒŒç£¸ûm)œπˇ≤_Ì1V\e¸õ;3˜.∞,Ha◊⁄«>≠¿ÚÓ≤à¶[ñ £J‘‘ñŸ{ÁÓª˜—;sÔv±&æ˛PkBµ§Ô™Ñ
•µ6ñ(bö⁄÷≠&≈ÿbc£!Aí&%Ü4§a˝}ﬂ9gÓ›ª˛–ƒ∞ì3ÁªgŒ˘ﬁﬂÔ;K÷©›©Ÿ‡Òg∂óÛÀÃ"ˇÌ0ı»yff`Û}úıóz`;~ÆÁ«Ë∑ú«úÉfvvYÏ'ŒAÆSÆ3'˙°n1ﬂ£Á∑§ê£fN|£gw˘È%4êÓ¶g5m∞_√∏á68{1Pè3öÎ˚&¥¯ó¨V˚m´-ï£?µ< º8bÕµo§ßë;Î!Ô°¶˘Aô7¨≠ÓA:(XıÜ’ë:l-·z=Ê´SªÈ°ƒgMæmˆW}Vqiû„Ä3fÊ∏I´˘ßMøü`,d<b<dL¬ÿ•cq{‚˚æı√˜uø7˙gìﬂoˆwÛÃX xfÚ15˜Ùû$WéK~Ó`L‡∫NΩì⁄ÄzÙ‹∂ë}©÷’Ó~:ëæëﬁ≥”/‹it¬yﬂö‡ﬁFøc[Ïœ”Q˚ëëÎö˚6˚BtÜÕÇ˚ÿgpﬂΩñﬁî∫„=¿wΩŒv∞n¿˝#å˘ÓÙ®ªäûëzeùˇ\? Ã€Iª≈áﬂ£«yÕﬁ5rç˝ »ÎÏ˛û:N?‚=∞KjŸ~	g>†.¯†ç1=uåˆà◊aÌ˚¿µÁÈWˆ◊Å≠W¢>¡”y∂8#G‹Ø–v{Yåø¸kÇıü¶'Ÿf‰ÃÀã_€ÙwFH?G≥‹uËe∞›˝!›[__}â|„/SõÀ
˘Å·èFi?_qéfÜËSÃ3}„(|ﬁÓNz4ÛΩ √πèﬁÀ‹NO9èa\Gwfû¬Ÿ5ßgH˙JΩãæsÄÓg|‚ºvªË™‘iÙ~”Wêèvû∫úStΩ¸VΩg7„óÆèß”^†VÈèº'¢Ç;˘Üügù–ìêıŒÓsécÌ Xñ}ÕIΩ"}pÁo“˜PŒ>Ù£óD˛s¢˜›Ω#wÆ¶£®◊C&áõgì”iÙÙèØ∑/Á~òÈñ~|y}9¡Ø«1Ø≈⁄C¿·[–+πw˝ÿ}~‰]˜˘‘7’0t„‹<¨ó’7ûy4~;ﬂı©7—üÑ˛zÿ¥ùÔñô„÷<œÃ∞ìÒ‚nåkZfY∂XøÃl¶©Œ jp3Âù¥ÃΩôñ9˚1⁄hYz}¨Ö¨y¿ó]Ë)«S3≠µòO¡G`Ìá<ü=∑«∫!uYjX=ˆ*gûg›=ÓûÙ´¸dÓÕ‹€ÚbÀãÚgz&¶Ò‹>i·§gZÁ¥æ3˘≠∂Z[m ∫)ßú∫wÍ	~>Úçi-”æ‰Àóúû~l˙±mﬂÒπ¯\|.>ˇõá,‹3¶¥åÜ»•M•È‘MdùtÓ õø“‹‘Rô˘Ô Ü¢-j«/Eß(Cá5m”L˙õ¶–ß4ÌR´’°È4Õ¥Æ‘tÜä÷,…±¡ß’⁄+¥hbÌ:-Îø:#ÎáÖn˙®–†–◊¨ìö∂h∂]”t
w´'4m”R{ü¶–ˇ“¥KuÆ“töñ:À4ù¡}œi°ÓMO†-Ó∑4=—ﬁÎ˛S”ì(?aª¶[©¬˚öû<È∑h∫çnkÔz"€’˛]°'±-Ì˜›*Î?∫MËÁÑû ∂¥˙–”⁄	=]ˆº-Ù·£ÏjóıSB_ g;“B_∆{:¶=ì˜t(€?.Ù<°Øí˝ sÑæôÈ—π„Bˇé”≠jΩ,¥Ëﬂq˜ä∞/å√mAŒÀ˘±ÔeKÂ·Jÿ◊{õ˙om©XäáÀÅ∑ºT)ó*~ñäﬁ¸ÓÓ˘sZ‹Èız≤;Ú*ATjAÆs‘°(¨˘ªΩ0Ú|/Æ¯π†‡WºR˛ÃÃá˙√løWáΩﬁ <˚¬(*P.,zŸ†˚ò∑V+aî≥º?ÍÏYπrÕ⁄ûYÜôñπ!Ë´˙ïÒ?Œ^˚Éaˆ¨7¯}t.\|÷çˇ]kiï®BÚiT/[ì)†≠T§cıo)∆\§ﬁ Ÿ;ÏgÌ_€ø¡x—ﬁoˇåVPH}1∆6p»ë'{˘îGYp*”0NÚÆ~¨z¥	sÄy-æ±§ﬂÀ≤≤\‰ñÂÌGﬁ·—| T7ﬁs4µò:±⁄Ì1◊yGÚ+¿`Æâ6ùgë·dç¸O\ÅïPN≥Œ±Hœa_Al¿ZâÚ§˘NÑB?hÊ6åπWN∞û}"5mïÁB9ïïˆ†˙Ωï™beÑ=ÃÕè`]≠ƒ≥:ı–¨1öç≤ì6àÃ*º∆vùœ…Ÿ¥ZÙ˘~r≥X%˛Y "ûŒÒˇ9∂cuŸ$T	‹Yó2d√<RƒŸ3ü`jÖúπ}¯ΩvÁE&ùÉqãÿWëµP¸µÔ™Tøä[èË6¯ﬂKdÂ±¶x¥èçÕ±ˆm${ÖV^7_â∆†¯∞]_{¨öƒìk{∂ƒ2íSwI$À≤õmQûÓ>Ü˜êDn`åÃ!±4N¸QÆ*br±
^%»≈<±®O$1ˆT‹	«±3ÑfÃ)¿z,í’4€2,®d2.+ë4>UôZiQMY≥~≠C$rã‚á!9ß¯˜À9_r(–9ÎÂÂM¶ı'~l‰ß|Wñ=™:Bëºx–√˘HÙRﬁgõïˇ|¡aék¨eGb·Ë∫Uñì*Q‹r¸Y≥íTá'|Ó™,Ú"º˚D[„mŒ±öÆ¶P§®8ˆÇsúT}ØúâG…ã%û|>'RÀTf™ØÃ≠¶£RØIˆYüD'h»ú¨Íç:vE·ZêxWì|-6HÓ”π¨0)íùQCƒK‡ò´÷®sŸƒZU∑æx©Q™/π¢tÈîû√∫•4œê<ù–l4FtJ~∞É˜‡Öπx«ÿ„ã¸+¢;p6¿7µ7–‹y˜ÖKù}ïdÂÒlN2†.gk–a∆rT ”Î± H∂J*ñ◊Wbe#ﬁ\£üC«„æ≤VV7—dö(cìTm4.vôuUõ\%ŸQëΩ&BÁÜÃı∏Ñ˙vb*H!‘∞‘§ëô¥©˜ã:Ó÷ıQ’Uê˝J_*/‘¯bÍ”‰hA£W„µ4∆âöŒ∂ﬁ§ô 8≥g"ëÎS®jÕ*Ç%°¨3˛‹®HÃ«ÛWI€Uí™Æs©#⁄Xy9çiåL™ Òæ$Vú!Bﬁ•b’hOR%c≥b¨‰˙¢&hW≈ªW„ÖBß@0f¸Ï`ÔﬂäïAë5Dæß—∑ÉS
£È yçËsOÁb±©å\Ö}aÇl˛òõÙÏdw#Ú◊;ËŸ=5(=$L"§,©Û3=9ÖØıNPﬂY¬ﬁ¢TbU<Æ˙ó±GÈ’ò›Ê&¶¸_ˇƒd‹x9t6ãÍ˘±Zl9ˆ0ÛøÎÅÓπ%}s)…Ωå£ZläAÖöˇs1úU‰[zé‘]≤&7õ°8óË~™&›sr£j¨~cié£Úñ≤ ÷∑äÒÍÿDÃoÚu˛º¥≠{y¨Ñ—∑Ü—∫Î≈Ë>Ü√≠¿ˇ¨.°E‘Ö{m˛k\Çy~œ√„I5~ÔEx>âïÎ∞£ˇáta≠ãÆ«ˇ#›2«U⁄∆f;—ÿ }5π©å≠ß≤ ÄØO◊Ù≠E·Ü©ã vzz=–∂yÁ’UÕ∑πM˙÷;)€‰…{vlì€ƒø9ù•Uy‚˜™∂lùTÀ6˝-“y’ØıÃ'=õœlîåı‰øáºÊit˚ÌUE“ÑÎ´lv≥IpwóC,8B»%Xp8&ªì›ÅŸôew6@pww;wwwwwWŒÖsÁÔÌôM6¸‹˚ﬂ˚ﬂ#˚“U”›U]U]÷q=ßJ=£NQœàÜÒˇÒUñÀ¨ï†ãî’ˆ‹Pç˛Ó‘òUúX“ù>À/+Z¢ö«9≈$µùóí3ôZÉÓ‘‹P}íU’≥«deSÙê˛°ä9Õô´¨¢à ‹`9s∂≠"§÷ö3eM˚ÖëËTßok{ä=„uÍGßG∑-ÈìT~'òNáÒÖ‹ØI	£IÎ	)Ø–≈IT~«ã|2KVS≈dÎQ#ÆTiüÑÂ#≤E´™^[«WUY˚¶:ëgœù)˚©N©Œd~Å∂WhßxÖ%ΩBqﬁúâæ —iir]´Ú√ˇ÷_ql†Im+◊¥ÉôîsÈi]ú8∂O®?Ûåÿ„ˇ5¸o˛≈Uûòå€v<›⁄áß–®"YNFWú˜‘ÈyÍ≤ˆ'}ªZª≤\„\˘Æ°bX„Ñx¨¸óbŸMƒª≤∏ˆπb>"sf\äß9=ŒD'OúLyö?>&à])‰¢Trìá“»+n$É2≈Õ‘¶:TóÍQ}j@©5¶&‘îöQsjA-©µ¶6¬⁄Q{Í@©u”UT–n‘]x_OqΩDEÕ¢lQO˚ä*⁄_T‘QK—`BCißB√ë‚≠6ZºÀ∆àWZÅË≠∆ää\$™¸ï7û&àó€$—ëó“ô”Dw7Éf“,öMsƒÎpÆÏæ}2ÚÀeÖ’hûË&uaCˆ Ñ5¢2z*Ñ_-wTIKh)-£Â¥ÇV“*ZMkh-≠£ı¥Å6“&⁄L[h+m£Ì¥Év“.⁄M{h/Ì£˝`:HáË0°£tåŒC
]@“Et1]Bó“et9]AW“Ut5]C◊“ut=›@7“Mt3›B∑“mt;›Aw“]t7›√GÈ>∫ü†È!zò°GÈ1zúû†'È)zöû°gÈ9zû^†È%zô^°WÈ5zùﬁ†7È-zõﬁ°wÈ=zü>˛Ù}Lü–ßtú>£œE&˝íæ¢ØÈ˙ñæ£ÔÈ˝ 2OÙ3˝Bø“oÙ;˝A“_Ù7˝C'Ap!nxê/“ëÅL‘Bm‘A]‘C}4@C4Bc4AS4Cs¥@K¥Bk¥A[¥C{t@GtBgtAWúÖnËéËâ≥—ΩëÖlÙA_ÙC@bcÜbÜcr1£0yÉ|†c1E8≈(¡xL¿DL¬dîb
¶b¶cfbfcŒ≈\((É~®(G Ahòá˘–Ça,@QXà°±ãQâ%XäeXéXâUXç5XãuXèÿàMÿå-ÿämÿéÿâ]ÿç=ÿã}ÿè8àC8å#8äc8Á„\àãp1.¡•∏ó„
\â´p5Æ¡µ∏◊„‹àõp3n¡≠∏∑„‹âªp7Ó°Ûq/Ó√˝x ‚!<åG(√„xO‚)<çg,û£x/‡E:Çó2^¡´xØ„ºâ∑6ﬁ¡ªxÔ„|àè1>¡ß8éœ9æ¿ó¯
_„|ãÔ=N‡¸àü3~¡Ø¯ø„¸âø7˛¡I&3ß∞ãSŸÕNc/ßsgr-ÆÕu∏.◊„˙‹Är#nÃM∏)7„Ê‹Ç[r+nÕm∏-∑„ˆ‹Å;r'ÓÃ]∏+ü≈›∏;˜‡û|6˜‚ﬁú≈Ÿ‹á˚r?Óœ8áÚ ÃCx(„·<Çsy$è‚—ú«c8ü∏ê«Ú8.‚s∏òKx<O‡â<â's)O·©<çßÛû…≥x6œ·sy.+\∆>ˆ≥ Â‡ k<èÁ≥Œ!6ÿ‰0/‡GŸ‚WB^ƒãπíóR^∆ÀyØ‰Uºö◊Z^«Îyo‰Mºô∑Vﬁ∆€yÔ‰]ºõ˜^ﬁ«˚˘ ‰C|òè–Ω)°XVJI0‰Òá_ƒ4ºfÖâ˙ÃàÍi~øieñõ±H4V#öqÁñE‘
’≠H‡…5¶°Œ˜(6tèˆ)ÇÖ€oÉ—Q]â=yŒ&’ŸîgØ™p·X÷Êπã_ÃR›∫äÏ∫Æ"!ÑKÉªÿ^6lPlÔ2$»0î∞µ"f8®zK¸e6'Øô¿‹mqæl⁄à&ŸìQ	“&˚Tø¶ÎJöÂ Ó…ˆ6KÇ‘“àfRcÒ—[ZuR¨Í§6®î¿5#.}•<ÜôØÑBäÄìÉ™•§Ê¯†&æ=åœ˙U›RºÜ©Ü£önb&™BÒ}ñc8®’ä~Ávƒq‚Ç)∑Í3øW]‰”ïêò˜U◊V£‚(ØRÆi˝≥≤˚Ê$∞úÅ^%1ÍjπÂëX,ú.aD-{—o.4l¨Ã¥Ç^gõﬂ»¨¬ ¢j∫±ÇÒõUÙLÕ∞Ñt™œ“ƒÖ®bZÖ¢´ÜOudg˜–«]êï”ØØ˙eI–ßO∫Vç≤òÆ´VÜœˆQ|>’∞<π∂;zfåÚi_,TÆ´ã2|’∏kT‹ææ∏}Û
’ÜÓ<€UU	\yÒ}™2Úì8í8Â«wƒêñüÄÄÉd$—ìh
 îà+(w°•È~’≠I‡)td—Y
mY4;l
ùà–lò16â˚ºj<m\Bé˘í9?QUCWøÊK+J,Î	§8ÅíígRT#‡)q2ÅJlÅL	“&&Ë"	Ö'%âMRxr\a+Æp©≠pÃV∏‘·s¯ó⁄¸c∂¬•é¬1G·©I‹&·”ì≈’x™á@4=7r2™Ñ´&POnûU¬åôu˛”vµ˝∂MFÒœN;i∫f%ÈR öt∆€Im]∂Nù≤KX7µ”h⁄¶Mh⁄dπÏ¬√Vê&M*É∏=¿U⁄ﬁˆíi	§I ‡?`/CB(∑Ω!8üÌÔ$eT˝˘¸æ€˘ùc˚˚|bÛJõç
l®ÓπR°V®óÍVÀ∑ón=ãzÛ∞Õ
ÂB)Ô≥˜ü’-ç5úÒÉá˘è.ïhäv„D«dﬂ—•¬Ç=is	¶o–,-wÜÓ|Îˆ”˝.:jÓì0‡5¡:‹TN»Ê´’<úçK3sy˛pì?“‰ßJ¢£œÁJÆc≈ä0A	◊Ò|Stbq¡±‚⁄»’K˛ÉqÙ8X€ó«Ù˝ÖŒ§,ÈK:ÿ‹∏‘N…ZÔû°)-X)YGòË¯r?OS¢É+%ÍLX¥R*€)-7˘Û%x%≠|\µb≈cùxq¡2.8ˆDG◊áük M°Bo≥øÛ˜¸'<•Û5;üQüëu∆GFdÖ±Dôå¨=™"K K"K!”ê•Ké Cç$”à´Ë/é^‚Ë%é^dÙ"£#ï1>˝…üåûeÙ,£g=+ËYAœ
ﬁ5‘PPCA5‘PQCE5T‘PQ£}_T‘PQCEµ}üqEW$qEW$qE
£Ja,)å%Ö±§–s
=ß–s
=ß–≥Üû5ÃWC54‘–PCC54‘–P#çi‘H£F5“®ëFç4j§€y¥Ω0‡»‚»›Qê©»»í»R»4d®GçvÃâvnögr°ñáÔ…9€L⁄%÷9ªÙöd€ﬁ{é1ènOº`À›>Z˜ô&ÛÙõu ú∑'»,‘(ÁÌZ⁄y3ìqNÄBΩﬂÔÃÉèVÅ÷EE£`õ◊ªÊKg˜◊¡Á≤”äïfΩ–2Â ÄoãèGMπQE:”ê&@~GI‹!#HFdFTF4F“å$I1ípà ¸»lyÇI$ògÖ˘ëYèÃÊ»ÃOÇÖ™≤…
CF¬‘eèÇÑ©L"é¢Ã≥ÃBUq2Û¨≤xTÃãyVŸÚ&à~¨¯éÃî+≥ã"‘¨‘
v´<o€Z√i7†Zò+÷Uú[¥¨w*"®∑+Á}6´AÖ+6j•¸B≥j€ö”û[∂myﬁC´ór¡[Z>k∑î9}ı•‘›˘ŸÃg±·™7ó=ÛPºñnzÍUwœñõ3B±êâπR~	æq]KÕ∫ÛR6up®¸÷ÔÉé2⁄O_Qˆk†€zG±eΩ¨¨Âk÷*-˛‡ç˚Éë m˛πx‡‚èåÍÉ¢Ù®^’WtC˜ºßõ˙ö˛ù~W_◊=ü‹Êëœ ﬂæÁç^tì 	ÇÅP4yhÉíh_tÀHp$îÊB”¡È–Jp%¥\≠ı≠mYÆáÇ^:ì∑.	ì~û^·@4Ìﬂ9∏3RW˚/^ä¯Ω÷∞ƒé#^é'9pÄ“ªY/~ ≠íq"Ûáo∑F¢-Ó—Î„2ò»hÏ}¿_Ä? ~¨~¸¯	%‡ ]g>| x.‡uÄx	∞
h jÄÁ ß':‡Ñ•˚§-ˇÑm∑Õc∂Ÿnõ°—∞ø~¸¯1‡C¿kÄ/ ñ ì„rü∑œk|-_â∆¢qE4ö¢qF4*¢±,ã¢± 3¢Ò¨hú∑K€§®4(="=,Ö•>)(ıJiì‰ó|í$y$∑7["ú˘ê+Àg'2\÷\õ%Ÿô®yb∏≈˘û>i
√ŒÏÕíÏÒå©≈≤-â3S±¨ÈÕ=3uç„^—M˛Jã#«ßZ‹m_0{˜M›Ñáì∫¸Ú µˇ\~Y◊I_Ï¡øÜóÕ]∏I"\l‘'FÓâë;b‰sëd'†ﬂ∞˙ç{¢qG4Ï˛0w=GRŸ¸ÍÙVÚÄoÓÙ6N+—ÑsS◊$í—˜ù≤ÌæÀÒOÈôæ@u∑ïLœ7ªÖÅ[‰o◊]“”Mﬂp∆ÏŒê={¬±¿S‹NèﬂÙ@ó†≥wÖ/‹rÓ™5€››Œ–éΩ;ˆ“!7±Ü6Awè3æ∏kh‡w’
@˜f∏ıƒ‰«ä-ÓÕ±¢9∫:mFá˜õ⁄Òñ”±:Ìx«ÓhqoÔ'ßÎßÎŒù´7bÕÿø°Èÿ¨endstreamendobj143 0 obj19705endobj145 0 obj32535endobj144 0 obj0endobj146 0 obj0endobj33 0 obj<</Type /Font/Subtype /Type1/Name /F9/BaseFont /BEELMA+HelveticaNeue-Condensed/FirstChar 32/LastChar 255/Widths [ 240 258 407 480 480 759 556 240 241 241 352 600 240 352 240 278 480 480 480 480 480 480 480 480 480 480 240 240 600 600 600 444 800 500 519 519 556 463 444 537 537 204 426 500 444 704 556 556 481 556 519 500 463 519 462 722 481 462 463 259 278 259 600 500 204 444 463 426 463 444 259 463 463 204 204 444 204 722 463 444 463 463 296 407 259 463 406 648 406 406 389 259 222 259 600 500 500 500 240 480 407 1000 482 482 204 1037 500 240 796 500 463 500 500 240 240 407 407 500 500 1000 204 990 407 240 722 500 389 462 240 258 480 480 480 480 222 482 204 800 289 389 600 352 800 204 400 600 312 312 204 463 556 240 204 312 289 389 721 721 721 444 500 500 500 500 500 500 722 519 463 463 463 463 204 204 204 204 556 556 556 556 556 556 556 600 556 519 519 519 519 462 481 463 444 444 444 444 444 444 667 426 444 444 444 444 204 204 204 204 444 463 444 444 444 444 444 600 444 463 463 463 463 406 463 406 ]/Encoding /WinAnsiEncoding/FontDescriptor 34 0 R>>endobj34 0 obj<</Type /FontDescriptor/FontName /BEELMA+HelveticaNeue-Condensed/Flags 32/FontBBox [ -250 -212 1244 1000 ]/MissingWidth 556/StemV 82/StemH 82/ItalicAngle 0/CapHeight 1331/XHeight 999/Ascent 932/Descent -212/Leading 398/MaxWidth 1037/AvgWidth 450/FontFile3 147 0 R>>endobj147 0 obj<</Filter /FlateDecode /Length 148 0 R/Subtype /Type1C>>stream
HâuT}Pgﬁ%Ï.ÉÌJYVF¢ªÀh•ñì`ëhiAIA>Z?@<$°F1¡ÑØ ∂xéJL)≠m£Ç–[¨"W≈÷äE8∆x‹§Ù§ ÏùiÆ“¡õÓ∑ÈKgÓM®Ωﬁ7ª3ª˚Ó˚<Û<øﬂÔyI"8à IRLÀ»»⁄òõi(Ø6TKK≤UÜÎÃ&Ω¡d5Ë˝[ûVÊäöT)ãU ¬`îÑv˝Xˇcµò ﬁxNŒáKO|¥à±á*í<|ÍÏ:sÖÕb|yW•ÙTÈrierrºî™7Ô4H˘6k•aØU“ôJÕñ
≥•§“†èì§‘Úr)œøﬂ*Â¨K5^˝Eèd¥J%R••Doÿ[bŸ#ôÀ§,£…\i´0H©§ì^c∂HFåµVÌ¥ı∆ã—`˝>Q+˝bÁø´~õA‚ã`I"ú ñD"A§DEdÕ#∂ÑàP±êXN‰Áà?íy‰Y“¥4ËT–H–¥*ZµJ’§˙2¯Ò`}Á¡@m•^ßÜ®)zÖƒJÏ`#ØC£Í:ÿyhCç4+9f»—	’ËÇ«àâÕ¬¬ˆj≈5òÈ·`íπë€äãáÿYóLs|[rn‰hLr√3GBXX{¿£|Ô	ÔõÄñâƒ	Ó!7©ƒ`‚Uçı1í±˚!
í!˘~∞"˜Ô¨_›$N– ÕGÀ‘hÎnîè2Qf' á"7	Ò_@®Oàl{µ/låÑØ
>ÙÖÒê96õü~
Û“Ï‘wÓ ¸£Ç‹·.ÔZ÷…‹%WB˘7ò6«ﬂ&nú5m-v‘e◊
à2R‹ïı’{6ØçäΩú3˝Ÿ5W_ß–Ds’Îõ{´€;ö_{Sdè±7®˜9⁄;D∏∆‹p¸Ä¥(bÛãà‡mT¡sW
^**»´Ìæ~≈ŸﬁyZË~wÙ¯G]!ÏOÓÄí‰Å§öOº∞]ÊÆ¬|hÁ!‚Ã¯ÿw≠—K[üóR3t+yº≤”ók∑∏
’(÷ÜûC¡(•Q¿\ÈÈyKƒ∫Íuwø?ÿÈÜUnÚÇ^¬àÄ;¸Ê„ º£mÈ9ÇâÒÍ¯s0ı∞è}Ú>§AQ(´?"aŸ9X¯•†•K¥kñ: l\`p;wªÅˆêwe’›≤≤{¬≠¶/¥:œ=ŸÙÍ]%´≈¨›√¢,7Ñzîßr=ÿRöy2˜ÏS,|¿Oê-1^˚
ê˜EÓ{»‡◊–‹7ÏÃßE=πj¥Hè£'”[–V‹Ãœ:{[≈¶∫¨9	˜ıC€’£¢ñFQN‡]j F`ïø€ä≈_F≤_Üç≤™k§È±°≥Ωy=sß0KÀJ3Ï¯7
7ïÔ®ÏpHK≥h	Üu’¸ÛA¯†9à!]Zöã~åê‡ﬂSÅø∞ÕO™Ç”pü-SÀi¥	9(ªí¢˝©X="√r‘J˝0GË+Æ!e¶Ûceû_öø√2¨ıﬂã∏´√}Ú–{GÈ£ôˇ˘úì]Ph(≤
CueÔmToŒ7o´Ì4wox√>¢ÊzˇØ„Ë L¿∞;~%›M∫ºPÊUπ¨°ÿn	àªà{±àƒ√ßGë(VÄ|TŒ'÷MCÑ¥Nˇıª”1(ÖÿbûY§©Üﬂzî§ü5l˜r˜pHÒÏ≤'ΩìcgíQ(jíSV⁄f˛%<;ªâó·`ΩΩ≠◊‘ßÒ<<,$Ö∏‹¢““ø≠)7÷˜k⁄πH‹ÉqLªƒΩ“BÒ‡LûL¿—:‚ß≈8_—Üªß≥3=sƒ"
%†eÁ—2˚z]ó€p2ÿ-∏beŒê◊`Ωú&Ëoˇ‘˝igK„±˜Œ8√πöΩ⁄TßŒŸÛª-Vø§°ªZÜî,¸}9UÜ’r∫Ã}≈›Q(e>?|Ï0(^óRÉT∑koUâ‹∑∑™‹ıÎ¢ûﬂ¯JE≤ÌÊ-ú£Ç&§Ü¶øÍjF˜ÓwG◊°{{8ÍÎ¡„ùC≠epæ{îß‹Åp)]<Œ—,Mg¥ø|ˇìéÊ¶∑ÑÊÿÔ⁄mÍß/â05ÈéÉx,+pvXjÄÚ’b`Jˆﬁ‚ÁoˇAPhÌlìÂê ˙⁄çØv¯è≠⁄,|<‹tÃ(i5dã≤@öhxRÈ¢4tÃleßcî4¸ŒﬁDÈn_‘œõûm‡˜Q¶Éuïzuı˛◊ö^uÃ1ß”ﬁ•~ÿ·=#ÇF¡†ÇË9ÇN_±8a©ìÜéﬂ?>€Çqá Ûî“òÊˇπÆèRendstreamendobj148 0 obj1722endobj65 0 obj<</Type /Font/Subtype /TrueType/Name /F10/BaseFont /TimesNewRoman,Bold/FirstChar 32/LastChar 255/Widths [ 250 333 555 500 500 1000 833 278 333 333 500 570 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 570 570 570 500 930 722 667 722 722 667 611 778 778 389 500 778 667 944 722 778 611 778 722 556 667 722 722 1000 722 722 667 333 278 333 581 500 333 500 556 444 556 444 333 500 556 278 333 556 278 833 556 500 556 556 444 389 333 556 500 722 500 500 444 394 220 394 520 778 500 778 333 500 500 1000 500 500 333 1000 556 333 1000 778 667 778 778 333 333 500 500 350 500 1000 333 1000 389 333 722 778 444 722 250 333 500 500 500 500 220 500 333 747 300 500 570 333 747 500 400 549 300 300 333 576 540 250 333 300 330 500 750 750 750 500 722 722 722 722 722 722 1000 722 667 667 667 667 389 389 389 389 722 722 778 778 778 778 778 570 778 722 722 722 722 722 611 556 500 500 500 500 500 500 722 444 444 444 444 444 278 278 278 278 500 556 500 500 500 500 500 549 500 556 556 556 556 500 556 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 66 0 R>>endobj66 0 obj<</Type /FontDescriptor/FontName /TimesNewRoman,Bold/Flags 16418/FontBBox [ -250 -216 1178 1000 ]/MissingWidth 327/StemV 136/StemH 136/ItalicAngle 0/CapHeight 891/XHeight 446/Ascent 891/Descent -216/Leading 149/MaxWidth 982/AvgWidth 427>>endobj104 0 obj<</Type /Font/Subtype /Type1/Name /F11/BaseFont /ZapfDingbats/FirstChar 32/LastChar 255/Widths [ 278 974 961 974 980 719 789 790 791 690 960 939 549 855 911 933 911 945 974 755 846 762 761 571 677 763 760 759 754 494 552 537 577 692 786 788 788 790 793 794 816 823 789 841 823 833 816 831 923 744 723 749 790 792 695 776 768 792 759 707 708 682 701 826 815 789 789 707 687 696 689 786 787 713 791 785 791 873 761 762 762 759 759 892 892 788 784 438 138 277 415 392 392 668 668 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 278 732 544 544 910 667 760 760 776 595 694 626 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 788 894 838 1016 458 748 924 748 918 927 928 928 834 873 828 924 924 917 930 931 463 883 836 836 867 867 696 696 874 278 874 760 946 771 865 771 888 967 888 831 873 927 970 918 278 ]/FontDescriptor 105 0 R>>endobj105 0 obj<</Type /FontDescriptor/FontName /ZapfDingbats/Flags 4/FontBBox [ -250 -143 1219 1000 ]/MissingWidth 815/StemV 127/StemH 127/ItalicAngle 0/CapHeight 1208/XHeight 1186/Ascent 857/Descent -143/Leading 308/MaxWidth 1016/AvgWidth 695>>endobj2 0 obj[ /PDF /Text  ]endobj5 0 obj<</Kids [4 0 R 21 0 R 26 0 R 36 0 R 40 0 R 43 0 R ]/Count 6/Type /Pages/Parent 152 0 R>>endobj47 0 obj<</Kids [46 0 R 51 0 R 55 0 R 58 0 R 62 0 R 68 0 R ]/Count 6/Type /Pages/Parent 152 0 R>>endobj72 0 obj<</Kids [71 0 R 75 0 R 78 0 R 81 0 R 85 0 R 89 0 R ]/Count 6/Type /Pages/Parent 152 0 R>>endobj94 0 obj<</Kids [93 0 R 98 0 R 101 0 R 107 0 R 111 0 R 115 0 R ]/Count 6/Type /Pages/Parent 152 0 R>>endobj119 0 obj<</Kids [118 0 R 122 0 R 125 0 R 128 0 R ]/Count 4/Type /Pages/Parent 152 0 R>>endobj152 0 obj<</Kids [5 0 R 47 0 R 72 0 R 94 0 R 119 0 R ]/Count 28/Type /Pages/MediaBox [ 0 0 596 842 ]>>endobj1 0 obj<</Creator <FEFF0051007500610072006B005800500072006500730073002000280074006D00290020002D0020005B006F007600650072006C006F0061006400360032002D00460049004E0041004C002E007100780064005D>/CreationDate (D:20040801105204)/Title <FEFF006F007600650072006C006F0061006400360032002D00460049004E0041004C002E007100780064>/Author <FEFF00500069007000700061>/Producer (Acrobat PDFWriter 5.0 for Windows NT)>>endobj3 0 obj<</Pages 152 0 R/Type /Catalog>>endobjxref0 1530000000000 65535 f 0000327246 00000 n 0000326551 00000 n 0000327658 00000 n 0000004443 00000 n 0000326582 00000 n 0000280726 00000 n 0000281840 00000 n 0000286616 00000 n 0000287705 00000 n 0000287967 00000 n 0000289046 00000 n 0000000019 00000 n 0000004422 00000 n 0000289302 00000 n 0000290389 00000 n 0000290643 00000 n 0000291734 00000 n 0000291995 00000 n 0000293079 00000 n 0000004552 00000 n 0000015896 00000 n 0000004638 00000 n 0000015874 00000 n 0000293343 00000 n 0000294439 00000 n 0000028700 00000 n 0000016064 00000 n 0000028678 00000 n 0000294709 00000 n 0000295817 00000 n 0000299315 00000 n 0000300422 00000 n 0000320607 00000 n 0000321712 00000 n 0000028810 00000 n 0000038022 00000 n 0000028908 00000 n 0000038001 00000 n 0000038132 00000 n 0000046295 00000 n 0000038218 00000 n 0000046274 00000 n 0000054429 00000 n 0000046462 00000 n 0000054408 00000 n 0000065872 00000 n 0000326691 00000 n 0000054585 00000 n 0000065850 00000 n 0000065983 00000 n 0000077600 00000 n 0000066070 00000 n 0000077578 00000 n 0000077711 00000 n 0000087299 00000 n 0000077797 00000 n 0000087278 00000 n 0000096993 00000 n 0000087468 00000 n 0000096972 00000 n 0000097104 00000 n 0000108360 00000 n 0000097202 00000 n 0000108338 00000 n 0000323852 00000 n 0000324954 00000 n 0000108471 00000 n 0000116740 00000 n 0000108569 00000 n 0000116719 00000 n 0000125864 00000 n 0000326802 00000 n 0000116897 00000 n 0000125843 00000 n 0000136036 00000 n 0000126033 00000 n 0000136015 00000 n 0000146151 00000 n 0000136193 00000 n 0000146130 00000 n 0000155578 00000 n 0000146320 00000 n 0000155557 00000 n 0000155689 00000 n 0000167023 00000 n 0000155776 00000 n 0000167001 00000 n 0000167134 00000 n 0000178322 00000 n 0000167232 00000 n 0000178300 00000 n 0000178433 00000 n 0000191365 00000 n 0000326913 00000 n 0000178532 00000 n 0000191343 00000 n 0000191476 00000 n 0000201942 00000 n 0000191562 00000 n 0000201919 00000 n 0000212542 00000 n 0000202111 00000 n 0000212519 00000 n 0000325225 00000 n 0000326286 00000 n 0000212656 00000 n 0000225035 00000 n 0000212746 00000 n 0000225012 00000 n 0000225149 00000 n 0000235586 00000 n 0000225283 00000 n 0000235563 00000 n 0000235700 00000 n 0000244979 00000 n 0000235791 00000 n 0000244957 00000 n 0000253216 00000 n 0000327028 00000 n 0000245150 00000 n 0000253194 00000 n 0000261747 00000 n 0000253376 00000 n 0000261725 00000 n 0000270044 00000 n 0000261907 00000 n 0000270022 00000 n 0000280512 00000 n 0000270216 00000 n 0000280489 00000 n 0000280627 00000 n 0000282142 00000 n 0000286594 00000 n 0000000000 00000 n 0000000000 00000 n 0000000000 00000 n 0000296121 00000 n 0000299293 00000 n 0000000000 00000 n 0000000000 00000 n 0000000000 00000 n 0000300721 00000 n 0000320523 00000 n 0000320569 00000 n 0000320546 00000 n 0000320588 00000 n 0000322011 00000 n 0000323830 00000 n 0000000000 00000 n 0000000000 00000 n 0000000000 00000 n 0000327130 00000 n trailer<</Size 153/Root 3 0 R/Info 1 0 R/ID [<9393497308ef0b977be4f5fba6bcde48><9393497308ef0b977be4f5fba6bcde48>]>>startxref327709%%EOF